{"version":3,"file":"js/600.5a704b9010513578b854.js","mappings":"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","sources":["webpack:///./src/Router.js","webpack:///./src/Components/LandingPage/PermissionDenied.js","webpack:///./src/App.js","webpack:///./src/api.js","webpack:///./src/constants.js","webpack:///./src/store/reducers/composes.js","webpack:///./src/store/reducers/pendingCompose.js","webpack:///./src/store/index.js","webpack:///./src/store/types.js"],"sourcesContent":["import React, { lazy } from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\n\nconst LandingPage = lazy(() => import('./Components/LandingPage/LandingPage'));\nconst CreateImageWizard = lazy(() => import('./Components/CreateImageWizard/CreateImageWizard'));\n\nexport const Router = () => {\n    return (\n        <Routes>\n            <Route path='/landing/*' element={ <LandingPage /> } />\n            <Route path='/imagewizard/*' element={ <CreateImageWizard /> } />\n            <Route path='/' element={ <Navigate replace to='/landing' /> } />\n        </Routes>\n    );\n};\n","import React from 'react';\n\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport { Button, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, Title } from '@patternfly/react-core';\n\nconst PermissionDenied = () => {\n    return (\n        <EmptyState variant={ EmptyStateVariant.large } data-testid=\"empty-state-denied\">\n            <EmptyStateIcon icon={ InfoCircleIcon } />\n            <Title headingLevel=\"h4\" size=\"lg\">\n            Image Builder is not quite ready\n            </Title>\n            <EmptyStateBody>\n            Image Builder is in early development and not ready for use yet.\n            If you&apos;re interested in trying it out once it reaches beta,\n            fill out your contact information in the sign up form, and we&apos;ll be in touch once it&apos;s ready.\n            </EmptyStateBody>\n            <Button id=\"beta-signup-button\" variant=\"primary\">Sign up</Button>\n        </EmptyState>\n    );\n};\n\nexport default PermissionDenied;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Router } from './Router';\nimport '@patternfly/patternfly/patternfly-addons.css';\nimport './App.scss';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport api from './api.js';\nimport PermissionDenied from './Components/LandingPage/PermissionDenied';\n\nconst App = (props) => {\n    const [ permission, setPermission ] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const registry = getRegistry();\n        registry.register({ notifications: notificationsReducer });\n        insights.chrome.init();\n        insights.chrome.identifyApp('image-builder');\n\n        api.getVersion().then(() => {\n            setPermission(true);\n        }).catch(() => {\n            setPermission(false);\n        });\n\n        const unregister = insights.chrome.on('APP_NAVIGATION', (event) =>\n            navigate(`/${event.navId}`)\n        );\n        return () => {\n            unregister();\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <NotificationsPortal />\n            { permission ? <Router childProps={ props } /> : <PermissionDenied /> }\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","import axios from 'axios';\nimport {\n    IMAGE_BUILDER_API,\n} from './constants';\n\nconst postHeaders = { headers: { 'Content-Type': 'application/json' }};\n\nasync function composeImage(body) {\n    let path = '/compose';\n    const request = await axios.post(IMAGE_BUILDER_API.concat(path), body, postHeaders);\n    return request.data;\n}\n\nasync function getComposes(limit, offset) {\n    const params = new URLSearchParams({\n        limit,\n        offset,\n    });\n    let path = '/composes?' + params.toString();\n    const request = await axios.get(IMAGE_BUILDER_API.concat(path));\n    return request.data;\n}\n\nasync function getComposeStatus(id) {\n    let path = '/composes/' + id;\n    const request = await axios.get(IMAGE_BUILDER_API.concat(path));\n    return request.data;\n}\n\nasync function getPackages(distribution, architecture, search) {\n    const params = new URLSearchParams({\n        distribution,\n        architecture,\n        search,\n    });\n    let path = '/packages?' + params.toString();\n    const request = await axios.get(IMAGE_BUILDER_API.concat(path));\n    return request.data;\n}\n\nasync function getVersion() {\n    let path = '/version';\n    const request = await axios.get(IMAGE_BUILDER_API.concat(path));\n    return request.data;\n}\n\nexport default {\n    composeImage,\n    getComposes,\n    getComposeStatus,\n    getPackages,\n    getVersion,\n};\n","export const IMAGE_BUILDER_API = '/api/image-builder/v1';\nexport const RHEL_8 = 'rhel-85';\n","import types from '../types';\n\n// Example of action.compose\n// {\n//     \"77e4c693-0497-4b85-936d-b2a3ad69571b\": {\n//         created_at: \"2021-04-21 11:20:46.927594 +0000 UTC\",\n//         id: \"77e4c693-0497-4b85-936d-b2a3ad69571b\",\n//         request: {\n//             distribution: \"rhel-8\",\n//             image_requests: [\n//                 {\n//                     architecture: \"x86_64\",\n//                     image_type: \"ami\",\n//                     upload_request: {\n//                         type: \"aws\",\n//                         options: {}\n//                     }\n//                 }\n//             ]\n//         },\n//         image_status: {\n//             status: \"uploading\",\n//         },\n//     }\n// };\n\nconst initialComposesState = {\n    count: 0,\n    allIds: [],\n    byId: {},\n    error: null,\n};\n\n// only add to array if compose does not exist\nconst updateAllIds = (allIds, id, insert) => {\n    if (allIds.includes(id)) {\n        return allIds;\n    }\n\n    if (insert) {\n        return [ id ].concat(allIds);\n    }\n\n    return allIds.concat(id);\n};\n\nexport function composes(state = initialComposesState, action) {\n    switch (action.type) {\n        case types.COMPOSE_ADDED:\n            return {\n                ...state,\n                allIds: updateAllIds(state.allIds, action.payload.compose.id, action.payload.insert),\n                byId: {\n                    ...state.byId,\n                    [action.payload.compose.id]: action.payload.compose,\n                },\n                error: null,\n            };\n        case types.COMPOSE_FAILED:\n            return {\n                ...state,\n                error: action.payload.error,\n            };\n        case types.COMPOSE_PENDING:\n            return {\n                ...state,\n                error: null,\n            };\n        case types.COMPOSE_UPDATED:\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [action.payload.compose.id]: action.payload.compose,\n                }\n            };\n        case types.COMPOSES_UPDATED_COUNT:\n            return {\n                ...state,\n                count: action.payload.count,\n            };\n        case types.COMPOSE_UPDATED_STATUS:\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [action.payload.id]: {\n                        ...state.byId[action.payload.id],\n                        image_status: action.payload.status,\n                    }\n                }\n            };\n        default:\n            return state;\n    }\n}\n\nexport default composes;\n","import types from '../types';\nimport { RHEL_8 } from '../../constants.js';\n\nconst initialPendingComposeState = {\n    release: {\n        arch: 'x86_64',\n        distro: RHEL_8,\n    },\n    uploadDestinations: {\n        aws: false,\n        azure: false,\n        google: false,\n    },\n    uploadAWS: {\n        shareWithAccounts: [],\n    },\n    uploadAzure: {\n        tenantId: null,\n        subscriptionId: null,\n        resourceGroup: null,\n    },\n    uploadGoogle: {\n        accountType: 'googleAccount',\n        shareWithAccounts: [],\n    },\n    selectedPackages: [],\n    subscription: {\n        activationKey: null,\n        insights: true,\n        organization: null,\n    },\n    subscribeNow: false,\n};\n\nexport function pendingCompose(state = initialPendingComposeState, action) {\n    switch (action.type) {\n        case types.SET_RELEASE:\n            return {\n                ...state,\n                release: action.payload,\n            };\n        case types.SET_UPLOAD_DESTINATIONS:\n            return {\n                ...state,\n                uploadDestinations: action.payload,\n            };\n        case types.SET_UPLOAD_AWS:\n            return {\n                ...state,\n                uploadAWS: action.payload,\n            };\n        case types.SET_UPLOAD_AZURE:\n            return {\n                ...state,\n                uploadAzure: action.payload,\n            };\n        case types.SET_UPLOAD_GOOGLE:\n            return {\n                ...state,\n                uploadGoogle: action.payload,\n            };\n        case types.SET_SELECTED_PACKAGES:\n            return {\n                ...state,\n                selectedPackages: action.payload,\n            };\n        case types.SET_SUBSCRIPTION:\n            return {\n                ...state,\n                subscription: action.payload,\n            };\n        case types.SET_SUBSCRIBE_NOW:\n            return {\n                ...state,\n                subscribeNow: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n\nexport default pendingCompose;\n","import { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunk from 'redux-thunk';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport composes from './reducers/composes';\nimport pendingCompose from './reducers/pendingCompose';\n\nlet registry;\n\nexport function init (store = {}, ...middleware) {\n    if (!registry) {\n        registry = new ReducerRegistry(store, [\n            promiseMiddleware,\n            thunk,\n            ...middleware.filter(item => typeof item !== 'undefined'),\n        ]);\n\n        registry.register({\n            composes,\n            pendingCompose,\n            notifications: notificationsReducer,\n        });\n    }\n\n    return registry;\n}\n\nexport function getStore () {\n    return registry.getStore();\n}\n\nexport function register (...args) {\n    return registry.register(...args);\n}\n\n/* added for testing purposes only */\nexport function clearStore() {\n    registry = undefined;\n}\n","const COMPOSE_ADDED = 'COMPOSE_ADDED';\nconst COMPOSE_FAILED = 'COMPOSE_FAILED';\nconst COMPOSE_UPDATED = 'COMPOSE_UPDATED';\nconst COMPOSES_UPDATED_COUNT = 'COMPOSES_UPDATED_COUNT';\nconst COMPOSE_UPDATED_STATUS = 'COMPOSE_UPDATED_STATUS';\nconst SET_RELEASE = 'SET_RELEASE';\nconst SET_UPLOAD_DESTINATIONS = 'SET_UPLOAD_DESTINATIONS';\nconst SET_UPLOAD_AWS = 'SET_UPLOAD_AWS';\nconst SET_UPLOAD_AZURE = 'SET_UPLOAD_AZURE';\nconst SET_UPLOAD_GOOGLE = 'SET_UPLOAD_GOOGLE';\nconst SET_SELECTED_PACKAGES = 'SET_SELECTED_PACKAGES';\nconst SET_SUBSCRIPTION = 'SET_SUBSCRIPTION';\nconst SET_SUBSCRIBE_NOW = 'SET_SUBSCRIBE_NOW';\n\nexport default {\n    COMPOSE_ADDED,\n    COMPOSE_FAILED,\n    COMPOSE_UPDATED,\n    COMPOSES_UPDATED_COUNT,\n    COMPOSE_UPDATED_STATUS,\n    SET_RELEASE,\n    SET_UPLOAD_DESTINATIONS,\n    SET_UPLOAD_AWS,\n    SET_UPLOAD_AZURE,\n    SET_UPLOAD_GOOGLE,\n    SET_SELECTED_PACKAGES,\n    SET_SUBSCRIPTION,\n    SET_SUBSCRIBE_NOW,\n};\n"],"names":["LandingPage","lazy","CreateImageWizard","Router","Routes","Route","path","element","Navigate","replace","to","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","InfoCircleIcon","Title","headingLevel","size","EmptyStateBody","Button","id","props","useState","permission","setPermission","navigate","useNavigate","useEffect","getRegistry","register","notifications","notificationsReducer","insights","chrome","init","identifyApp","api","then","unregister","on","event","navId","childProps","postHeaders","headers","body","axios","IMAGE_BUILDER_API","request","data","limit","offset","params","URLSearchParams","toString","distribution","architecture","search","composeImage","getComposes","getComposeStatus","getPackages","getVersion","RHEL_8","initialComposesState","count","allIds","byId","error","updateAllIds","insert","includes","concat","state","action","type","types","payload","compose","image_status","status","initialPendingComposeState","release","arch","distro","uploadDestinations","aws","azure","google","uploadAWS","shareWithAccounts","uploadAzure","tenantId","subscriptionId","resourceGroup","uploadGoogle","accountType","selectedPackages","subscription","activationKey","organization","subscribeNow","registry","store","middleware","ReducerRegistry","promiseMiddleware","thunk","filter","item","composes","pendingCompose","COMPOSE_ADDED","COMPOSE_FAILED","COMPOSE_UPDATED","COMPOSES_UPDATED_COUNT","COMPOSE_UPDATED_STATUS","SET_RELEASE","SET_UPLOAD_DESTINATIONS","SET_UPLOAD_AWS","SET_UPLOAD_AZURE","SET_UPLOAD_GOOGLE","SET_SELECTED_PACKAGES","SET_SUBSCRIPTION","SET_SUBSCRIBE_NOW"],"sourceRoot":""}