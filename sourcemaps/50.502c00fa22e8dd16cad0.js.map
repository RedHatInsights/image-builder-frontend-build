{"version":3,"sources":["webpack:///./src/Components/CreateImageWizard/WizardStepImageOutput.js","webpack:///./src/Components/CreateImageWizard/WizardStepUploadAWS.js","webpack:///./src/Components/CreateImageWizard/WizardStepUploadAzure.js","webpack:///./src/Components/CreateImageWizard/WizardStepPackages.js","webpack:///./src/Components/CreateImageWizard/WizardStepUploadGoogle.js","webpack:///./src/Components/CreateImageWizard/WizardStepRegistration.js","webpack:///./src/Components/CreateImageWizard/WizardStepReview.js","webpack:///./src/Components/CreateImageWizard/ImageWizardFooter.js","webpack:///./src/Components/CreateImageWizard/CreateImageWizard.js","webpack:///./src/Components/CreateImageWizard/CreateImageWizard.scss","webpack:///./src/Components/CreateImageWizard/ImageWizardFooter.scss","webpack:///./src/Components/CreateImageWizard/WizardStepImageOutput.scss","webpack:///./src/Components/CreateImageWizard/WizardStepReview.scss","webpack:///./src/Components/CreateImageWizard/WizardStepUploadAzure.scss","webpack:///./src/Components/CreateImageWizard/CreateImageWizard.scss?d927","webpack:///./src/Components/CreateImageWizard/ImageWizardFooter.scss?9e4e","webpack:///./src/Components/CreateImageWizard/WizardStepImageOutput.scss?9a91","webpack:///./src/Components/CreateImageWizard/WizardStepReview.scss?51d4","webpack:///./src/Components/CreateImageWizard/WizardStepUploadAzure.scss?bc01"],"names":["WizardStepImageOutput","props","setDistro","bind","toggleUploadDestination","distro","this","setRelease","arch","provider","setUploadDestinations","uploadDestinations","Form","Title","headingLevel","size","FormGroup","isRequired","label","fieldId","FormSelect","value","release","onChange","aria-label","id","data-testid","map","option","FormSelectOption","key","className","Tile","title","icon","src","onClick","isSelected","aws","isStacked","isDisplayLarge","azure","google","Component","propTypes","PropTypes","connect","state","pendingCompose","dispatch","i","actions","d","WizardStepUploadAWS","helperTextInvalid","errors","validated","TextInput","uploadAWS","shareWithAccounts","type","setUploadAWS","u","WizardStepUploadAzure","TextContent","Text","href","target","rel","uploadAzure","tenantId","setUploadAzure","Object","assign","subscriptionId","resourceGroup","WizardStepPackages","setPackagesSearchName","handlePackagesSearch","handlePackagesFilter","packageListChange","mapPackagesToComponent","comps","selectedPackages","packagesAvailableComponents","packagesSelectedComponents","packagesFilteredComponents","packagesSearchName","setState","packages","pack","name","summary","component","children","api","then","response","packageComponents","data","filter","filteredPackages","mapComponentToPackage","includes","newAvailablePackages","newChosenPackages","chosenPkgs","setSelectedPackages","availableOptionsActions","Button","DualListSelector","isSearchable","availableOptions","chosenOptions","addSelected","removeSelected","addAll","removeAll","onAvailableOptionsSearchInputChanged","onChosenOptionsSearchInputChanged","filterOption","p","accountTypePopover","Popover","hasAutoWidth","maxWidth","headerContent","bodyContent","TextList","TextListItem","aria-describedby","WizardStepUploadGoogle","labelIcon","Radio","setUploadGoogle","accountType","user","isChecked","uploadGoogle","serviceAccount","group","domain","WizardStepRegistration","insights","chrome","auth","getUser","setSubscription","subscription","organization","identity","internal","org_id","subscribeNow","setSubscribeNow","isDisabled","isValidSubscription","activationKey","s","WizardStepReview","awsReview","TextListVariants","TextListItemVariants","uploadAWSErrors","googleReview","subscriptionReview","repeat","length","keys","Alert","variant","isInline","TextVariants","ImageWizardFooter","WizardFooter","WizardContextConsumer","activeStep","onNext","onBack","onClose","nextButtonText","isSaveInProgress","nextButtonIsDisabled","isValidUploadDestination","ButtonVariant","error","CreateImageWizard","onStep","onSave","validate","validateUploadAmazon","uploadAzureErrors","uploadGoogleErrors","Number","step","forEach","validateUploadAzure","share","isNaN","tenant_id","resource_group","customizations","requests","request","distribution","image_requests","architecture","image_type","upload_request","options","share_with_accounts","push","subscription_id","composeRequests","composeStart","Promise","all","composesError","addNotification","history","StepImageOutput","StepUploadAWS","StepUploadAzure","StepUploadGoogle","uploadDestinationSteps","StepTargetEnv","steps","Wizard","description","iconPosition","onGoToStep","footer","isOpen","composeUpdated","composes","compose","composeRequest","not","withRouter","___CSS_LOADER_EXPORT___","module","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","isEqualLocals","dispose"],"mappings":"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","file":"js/50.d60fedaad45de1c4068d.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from '../../store/actions';\n\nimport { Form, FormGroup, FormSelect, FormSelectOption, Tile, Title } from '@patternfly/react-core';\n\nimport './WizardStepImageOutput.scss';\n\nclass WizardStepImageOutput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.setDistro = this.setDistro.bind(this);\n        this.toggleUploadDestination = this.toggleUploadDestination.bind(this);\n    }\n\n    setDistro(distro) {\n        this.props.setRelease({ arch: 'x86_64', distro });\n    }\n\n    toggleUploadDestination(provider) {\n        this.props.setUploadDestinations({\n            ...this.props.uploadDestinations,\n            [provider]: !this.props.uploadDestinations[provider]\n        });\n    }\n\n    render() {\n        const releaseOptions = [\n            { value: 'rhel-8', label: 'Red Hat Enterprise Linux (RHEL) 8.3' },\n            { value: 'centos-8', label: 'CentOS Stream 8' },\n        ];\n\n        return (\n            <>\n                <Form>\n                    <Title headingLevel=\"h2\" size=\"xl\">Image output</Title>\n                    <FormGroup isRequired label=\"Release\" fieldId=\"release-select\">\n                        <FormSelect value={ this.props.release.distro } onChange={ value => this.setDistro(value) } isRequired\n                            aria-label=\"Select release input\" id=\"release-select\" data-testid=\"release-select\">\n                            { releaseOptions.map(option => <FormSelectOption key={ option.value } value={ option.value } label={ option.label } />) }\n                        </FormSelect>\n                    </FormGroup>\n                    <FormGroup isRequired label=\"Select target environment\" data-testid=\"target-select\">\n                        <div className=\"tiles\">\n                            <Tile\n                                className=\"tile pf-u-mr-sm\"\n                                data-testid=\"upload-aws\"\n                                title=\"Amazon Web Services\"\n                                icon={ <img\n                                    className='provider-icon'\n                                    src={ '/apps/frontend-assets/partners-icons/aws.svg' } /> }\n                                onClick={ () => this.toggleUploadDestination('aws') }\n                                isSelected={ this.props.uploadDestinations.aws }\n                                isStacked\n                                isDisplayLarge />\n                            <Tile\n                                className=\"tile pf-u-mr-sm\"\n                                data-testid=\"upload-azure\"\n                                title=\"Microsoft Azure\"\n                                icon={ <img\n                                    className='provider-icon'\n                                    src={ '/apps/frontend-assets/partners-icons/microsoft-azure-short.svg' } /> }\n                                onClick={ () => this.toggleUploadDestination('azure') }\n                                isSelected={ this.props.uploadDestinations.azure }\n                                isStacked\n                                isDisplayLarge />\n                            <Tile\n                                className=\"tile\"\n                                data-testid=\"upload-google\"\n                                title=\"Google Cloud Platform\"\n                                icon={ <img\n                                    className='provider-icon'\n                                    src={ '/apps/frontend-assets/partners-icons/google-cloud-short.svg' } /> }\n                                onClick={ () => this.toggleUploadDestination('google') }\n                                isSelected={ this.props.uploadDestinations.google }\n                                isStacked\n                                isDisplayLarge />\n                        </div>\n                    </FormGroup>\n                </Form>\n            </>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        release: state.pendingCompose.release,\n        uploadDestinations: state.pendingCompose.uploadDestinations,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setRelease: i => dispatch(actions.setRelease(i)),\n        setUploadDestinations: d => dispatch(actions.setUploadDestinations(d)),\n    };\n}\n\nWizardStepImageOutput.propTypes = {\n    setRelease: PropTypes.func,\n    setUploadDestinations: PropTypes.func,\n    release: PropTypes.object,\n    uploadDestinations: PropTypes.object,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WizardStepImageOutput);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from '../../store/actions';\n\nimport { Form, FormGroup, TextInput, Title } from '@patternfly/react-core';\n\nclass WizardStepUploadAWS extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Form>\n                <Title headingLevel=\"h2\" size=\"xl\">Target Environment - Upload to AWS</Title>\n                <p>\n            Your image will be uploaded to a temporary account on Amazon Web Services. <br />\n            The image will be shared with the account you provide below. <br />\n            Within the next 14 days you will need to copy the shared image to your own account.\n            After 14 days it will be unavailable and will have to be regenerated.\n                </p>\n                <FormGroup isRequired label=\"AWS account ID\" fieldId=\"aws-account-id\"\n                    helperTextInvalid={ (this.props.errors['aws-account-id'] && this.props.errors['aws-account-id'].value) || '' }\n                    validated={ (this.props.errors['aws-account-id'] && 'error') || 'default' }>\n                    <TextInput value={ this.props.uploadAWS.shareWithAccounts || '' }\n                        type=\"text\" aria-label=\"AWS account ID\" id=\"aws-account-id\"\n                        data-testid=\"aws-account-id\" isRequired\n                        onChange={ value => this.props.setUploadAWS({ shareWithAccounts: [ value ]}) } />\n                </FormGroup>\n            </Form>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        uploadAWS: state.pendingCompose.uploadAWS,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setUploadAWS: u => dispatch(actions.setUploadAWS(u)),\n    };\n}\n\nWizardStepUploadAWS.propTypes = {\n    setUploadAWS: PropTypes.func,\n    uploadAWS: PropTypes.object,\n    errors: PropTypes.object,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WizardStepUploadAWS);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from '../../store/actions';\n\nimport { Form, FormGroup, Text, TextContent, TextInput, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport './WizardStepUploadAzure.scss';\n\nclass WizardStepUploadAzure extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <>\n                <TextContent className=\"textcontent-azure\">\n                    <Title headingLevel=\"h2\">Target Environment - Upload to Azure</Title>\n                    <Text>\n            Image Builder will send an image to an authorized Azure account.\n                    </Text>\n                    <Title headingLevel=\"h3\">OAuth permissions</Title>\n                    <Text>\n            To authorize Image Builder to push images to Microsoft Azure, the account owner\n            must configure Image Builder as an authorized application and give it the role of\n            &quot;Contributor&quot; to at least one resource group.<br />\n                        <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow\">\n                            <small>Learn more about OAuth 2.0</small></a>\n                    </Text>\n\n                    <a href=\"https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=b94bb246-b02c-4985-9c22-d44e66f657f4\n&scope=openid&response_type=code&response_mode=form_post\n&redirect_uri=https%3A%2F%2Flogin.microsoftonline.com%2Fcommon%2Foauth2%2Fnativeclient\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Authorize Image Builder on Azure <ExternalLinkAltIcon />\n                    </a>\n                </TextContent>\n\n                <Title headingLevel=\"h3\">Destination</Title>\n                <Text>\n            Your image will be uploaded to the resource group in the subscription you specify.\n                </Text>\n                <Form>\n                    <FormGroup isRequired label=\"Tenant ID\" fieldId=\"azure-tenant-id\"\n                        helperTextInvalid={ (this.props.errors['azure-tenant-id'] && this.props.errors['azure-tenant-id'].value) || '' }\n                        validated={ (this.props.errors['azure-tenant-id'] && 'error') || 'default' }>\n                        <TextInput value={ this.props.uploadAzure.tenantId || '' }\n                            type=\"text\" aria-label=\"Azure tenant-id\" id=\"azure-tenant-id\"\n                            data-testid=\"azure-tenant-id\" isRequired\n                            onChange={ value =>\n                                this.props.setUploadAzure(Object.assign(this.props.uploadAzure, { tenantId: value })) } />\n                    </FormGroup>\n                    <FormGroup isRequired label=\"Subscription ID\" fieldId=\"azure-subscription-id\"\n                        helperTextInvalid={ (this.props.errors['azure-subscription-id'] &&\n                             this.props.errors['azure-subscription-id'].value) || '' }\n                        validated={ (this.props.errors['azure-subscription-id'] && 'error') || 'default' }>\n                        <TextInput value={ this.props.uploadAzure.subscriptionId || '' }\n                            type=\"text\" aria-label=\"Azure subscription-id\" id=\"azure-subscription-id\"\n                            data-testid=\"azure-subscription-id\" isRequired\n                            onChange={ value =>\n                                this.props.setUploadAzure(Object.assign(this.props.uploadAzure, { subscriptionId: value })) } />\n                    </FormGroup>\n                    <FormGroup isRequired label=\"Resource group\" fieldId=\"azure-resource-group\"\n                        helperTextInvalid={ (this.props.errors['azure-resource-group'] &&\n                             this.props.errors['azure-resource-group'].value) || '' }\n                        validated={ (this.props.errors['azure-resource-group'] && 'error') || 'default' }>\n                        <TextInput value={ this.props.uploadAzure.resourceGroup || '' }\n                            type=\"text\" aria-label=\"Azure resource group\" id=\"azure-resource-group\"\n                            data-testid=\"azure-resource-group\" isRequired\n                            onChange={ value =>\n                                this.props.setUploadAzure(Object.assign(this.props.uploadAzure, { resourceGroup: value })) } />\n                    </FormGroup>\n                </Form>\n            </>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        uploadAzure: state.pendingCompose.uploadAzure,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setUploadAzure: u => dispatch(actions.setUploadAzure(u)),\n    };\n}\n\nWizardStepUploadAzure.propTypes = {\n    setUploadAzure: PropTypes.func,\n    uploadAzure: PropTypes.object,\n    errors: PropTypes.object,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WizardStepUploadAzure);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, DualListSelector, Text, TextContent, Title } from '@patternfly/react-core';\n\nimport { actions } from '../../store/actions';\nimport api from '../../api.js';\n\nclass WizardStepPackages extends Component {\n    constructor(props) {\n        super(props);\n\n        this.setPackagesSearchName = this.setPackagesSearchName.bind(this);\n        this.handlePackagesSearch = this.handlePackagesSearch.bind(this);\n        this.handlePackagesFilter = this.handlePackagesFilter.bind(this);\n        this.packageListChange = this.packageListChange.bind(this);\n        this.mapPackagesToComponent = this.mapPackagesToComponent.bind(this);\n\n        const comps = this.mapPackagesToComponent(this.props.selectedPackages);\n        this.state = {\n            packagesAvailableComponents: [],\n            packagesSelectedComponents: comps,\n            packagesFilteredComponents: comps,\n            packagesSearchName: '',\n        };\n    }\n\n    setPackagesSearchName(packagesSearchName) {\n        this.setState({ packagesSearchName });\n    }\n\n    mapPackagesToComponent(packages) {\n        return packages.map((pack) =>\n            <TextContent key={ pack }>\n                <span className=\"pf-c-dual-list-selector__item-text\">{ pack.name }</span>\n                <small>{ pack.summary }</small>\n            </TextContent>\n        );\n    }\n\n    // this digs into the component properties to extract the package\n    mapComponentToPackage(component) {\n        return { name: component.props.children[0].props.children, summary: component.props.children[1].props.children };\n    }\n\n    handlePackagesSearch() {\n        api.getPackages(this.props.release.distro, this.props.release.arch, this.state.packagesSearchName).then(response => {\n            const packageComponents = this.mapPackagesToComponent(response.data);\n            this.setState({\n                packagesAvailableComponents: packageComponents\n            });\n        });\n    };\n\n    handlePackagesFilter(filter) {\n        const filteredPackages = this.state.packagesSelectedComponents.filter(component => {\n            return this.mapComponentToPackage(component).name.includes(filter);\n        });\n        this.setState({\n            packagesFilteredComponents: filteredPackages\n        });\n    }\n\n    packageListChange(newAvailablePackages, newChosenPackages) {\n        const chosenPkgs = newChosenPackages.map(component => this.mapComponentToPackage(component));\n        this.setState({\n            packagesAvailableComponents: newAvailablePackages,\n            packagesSelectedComponents: newChosenPackages,\n            packagesFilteredComponents: newChosenPackages,\n        });\n\n        this.props.setSelectedPackages(chosenPkgs);\n    }\n\n    render() {\n        const availableOptionsActions = [\n            <Button\n                aria-label=\"Search button for available packages\"\n                key=\"availableSearchButton\"\n                data-testid=\"search-pkgs-button\"\n                onClick={ this.handlePackagesSearch }>\n                Search\n            </Button>\n        ];\n        return (\n            <>\n                <TextContent>\n                    <Title headingLevel=\"h2\" size=\"xl\">Additional packages</Title>\n                    <Text>Optionally add additional packages to your <strong>{this.props.release.distro}</strong> image</Text>\n                </TextContent>\n                <DualListSelector\n                    className=\"pf-u-mt-sm\"\n                    isSearchable\n                    availableOptionsActions={ availableOptionsActions }\n                    availableOptions={ this.state.packagesAvailableComponents }\n                    chosenOptions={ this.state.packagesFilteredComponents }\n                    addSelected={ this.packageListChange }\n                    removeSelected={ this.packageListChange }\n                    addAll={ this.packageListChange }\n                    removeAll= { this.packageListChange }\n                    onAvailableOptionsSearchInputChanged={ this.setPackagesSearchName }\n                    onChosenOptionsSearchInputChanged={ this.handlePackagesFilter }\n                    filterOption={ () => true }\n                    id=\"basicSelectorWithSearch\" />\n            </>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        release: state.pendingCompose.release,\n        selectedPackages: state.pendingCompose.selectedPackages,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setSelectedPackages: (p) => dispatch(actions.setSelectedPackages(p)),\n    };\n}\n\nWizardStepPackages.propTypes = {\n    release: PropTypes.object,\n    selectedPackages: PropTypes.array,\n    setSelectedPackages: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WizardStepPackages);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from '../../store/actions';\n\nimport { Form, FormGroup, TextList, TextListItem, Popover, Radio, TextContent, Text, TextInput, Title } from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\n\nconst accountTypePopover = (\n    <Popover\n        hasAutoWidth\n        maxWidth='35rem'\n        headerContent={ 'Valid account types' }\n        bodyContent={ <TextContent>\n            <Text>The following account types can have an image shared with them:</Text>\n            <TextList>\n                <TextListItem>\n                    <strong>Google account:</strong> A Google account represents a developer, an administrator,\n                        or any other person who interacts with Google Cloud. e.g., <em>`alice@gmail.com`</em>.\n                </TextListItem>\n                <TextListItem>\n                    <strong>Service account:</strong> A service account is an account for an application instead\n                        of an individual end user. e.g., <em>`myapp@appspot.gserviceaccount.com`</em>.\n                </TextListItem>\n                <TextListItem>\n                    <strong>Google group:</strong> A Google group is a named collection of Google accounts and\n                        and service accounts. e.g., <em>`admins@example.com`</em>.\n                </TextListItem>\n                <TextListItem>\n                    <strong>Google workspace domain/Cloud identity domain:</strong> A Google workspace or cloud identity\n                        domain represents a virtual group of all the Google accounts in an organization. These domains\n                        represent your organization&apos;s internet domain name. e.g., <em>`mycompany.com`</em>.\n                </TextListItem>\n            </TextList>\n        </TextContent> }>\n        <button\n            type=\"button\"\n            aria-label=\"Account info\"\n            aria-describedby=\"google-account-type\"\n            className=\"pf-c-form__group-label-help\">\n            <HelpIcon />\n        </button>\n    </Popover>\n);\n\nclass WizardStepUploadGoogle extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Form>\n                <Title headingLevel=\"h2\" size=\"xl\">Target Environment - Google Cloud Platform</Title>\n                <p>\n            Your image will be uploaded to an account on Google Cloud Platform. <br />\n            The image will be shared with the email you provide below. <br />\n            Within the next 14 days you will need to copy the shared image to your own account.\n            After 14 days it will be unavailable and will have to be regenerated.\n                </p>\n                <FormGroup isRequired label=\"Type\" labelIcon={ accountTypePopover } fieldId=\"google-account-type\">\n                    <Radio\n                        onChange={ () => this.props.setUploadGoogle({ accountType: 'googleAccount', shareWithAccounts: [{ user: null }]}) }\n                        isChecked={ this.props.uploadGoogle.accountType === 'googleAccount' }\n                        label=\"Google account\"\n                        id=\"radio-google-account\"\n                        value=\"googleAccount\" />\n                    <Radio\n                        onChange={ () => this.props.setUploadGoogle({ accountType: 'serviceAccount', shareWithAccounts: [{ serviceAccount: null }]}) }\n                        isChecked={ this.props.uploadGoogle.accountType === 'serviceAccount' }\n                        label=\"Service account\"\n                        id=\"radio-service-account\"\n                        value=\"serviceAccount\" />\n                    <Radio\n                        onChange={ () => this.props.setUploadGoogle({ accountType: 'googleGroup', shareWithAccounts: [{ group: null }]}) }\n                        isChecked={ this.props.uploadGoogle.accountType === 'googleGroup' }\n                        label=\"Google group\"\n                        id=\"radio-google-group\"\n                        value=\"googleGroup\" />\n                    <Radio\n                        onChange={ () => this.props.setUploadGoogle({ accountType: 'domain', shareWithAccounts: [{ domain: null }]}) }\n                        isChecked={ this.props.uploadGoogle.accountType === 'domain' }\n                        label=\"Google Workspace Domain or Cloud Identity Domain\"\n                        id=\"radio-domain\"\n                        value=\"domain\" />\n                </FormGroup>\n                {this.props.uploadGoogle.accountType === 'googleAccount' && (\n                    <FormGroup isRequired label=\"Email address\" fieldId=\"user\">\n                        <TextInput\n                            value={ this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].user || '' :\n                                '' }\n                            type=\"text\" aria-label=\"Google email address\" id=\"input-google-user\"\n                            data-testid=\"input-google-user\" isRequired\n                            onChange={ value => this.props.setUploadGoogle(\n                                { accountType: 'googleAccount', shareWithAccounts: [{ user: value }]}\n                            ) } />\n                    </FormGroup>\n                )}\n                {this.props.uploadGoogle.accountType === 'serviceAccount' && (\n                    <FormGroup isRequired label=\"Email address\" fieldId=\"service-account\">\n                        <TextInput\n                            value={ this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].serviceAccount || '' :\n                                '' }\n                            type=\"text\" aria-label=\"Google email address\" id=\"input-google-service-account\"\n                            data-testid=\"input-google-service-account\" isRequired\n                            onChange={ value => this.props.setUploadGoogle(\n                                { accountType: 'serviceAccount', shareWithAccounts: [{ serviceAccount: value }]}\n                            ) } />\n                    </FormGroup>\n                )}\n                {this.props.uploadGoogle.accountType === 'googleGroup' && (\n                    <FormGroup isRequired label=\"Email address\" fieldId=\"group\">\n                        <TextInput\n                            value={ this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].group || '' :\n                                '' }\n                            type=\"text\" aria-label=\"Google email address\" id=\"input-google-group\"\n                            data-testid=\"input-google-group\" isRequired\n                            onChange={ value => this.props.setUploadGoogle(\n                                { accountType: 'googleGroup', shareWithAccounts: [{ group: value }]}\n                            ) } />\n                    </FormGroup>\n                )}\n                {this.props.uploadGoogle.accountType === 'domain' && (\n                    <FormGroup isRequired label=\"Domain\" fieldId=\"domain\">\n                        <TextInput\n                            value={ this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].domain || '' :\n                                '' }\n                            type=\"text\" aria-label=\"Google domain\" id=\"input-google-domain\"\n                            data-testid=\"input-google-domain\" isRequired\n                            onChange={ value => this.props.setUploadGoogle(\n                                { accountType: 'domain', shareWithAccounts: [{ domain: value }]}\n                            ) } />\n                    </FormGroup>\n                )}\n            </Form>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        uploadGoogle: state.pendingCompose.uploadGoogle,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setUploadGoogle: u => dispatch(actions.setUploadGoogle(u)),\n    };\n}\n\nWizardStepUploadGoogle.propTypes = {\n    setUploadGoogle: PropTypes.func,\n    uploadGoogle: PropTypes.object,\n    errors: PropTypes.object,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WizardStepUploadGoogle);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Form, FormGroup, TextInput, Radio, Title } from '@patternfly/react-core';\n\nimport { actions } from '../../store/actions';\n\nclass WizardStepRegistration extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    async componentDidMount() {\n        let user = await insights.chrome.auth.getUser();\n        this.props.setSubscription(Object.assign(this.props.subscription, { organization: user.identity.internal.org_id }));\n    }\n\n    render() {\n        return (\n            <Form>\n                <Title headingLevel=\"h2\" size=\"xl\">Registration</Title>\n                <FormGroup isRequired label=\"Register the system\">\n                    <Radio name=\"subscribe-now-radio\" isChecked={ this.props.subscribeNow } id=\"subscribe-now-radio\"\n                        label=\"Embed an activation key and register systems on first boot\"\n                        onChange={ () => this.props.setSubscribeNow(true) }\n                        data-testid=\"register-now-radio-button\" />\n                    <Radio name=\"subscribe-later-radio\" isChecked={ !this.props.subscribeNow }\n                        label=\"Register the system later\" id=\"subscribe-later-radio\"\n                        onChange={ () => this.props.setSubscribeNow(false) }\n                        data-testid=\"register-later-radio-button\" />\n                </FormGroup>\n                { this.props.subscribeNow &&\n                <>\n                    <FormGroup label=\"Organization ID\" fieldId=\"subscription-organization\">\n                        <TextInput isDisabled value={ this.props.subscription.organization || '' } type=\"text\"\n                            id=\"subscription-organization\" aria-label=\"Subscription organization ID\"\n                            data-testid=\"organization-id\" />\n                    </FormGroup>\n                    <FormGroup isRequired label=\"Activation key\" fieldId=\"subscription-activation\"\n                        helperTextInvalid={ 'A value is required' }\n                        validated={ !this.props.isValidSubscription && this.props.subscription.activationKey !== null ? 'error' : 'default' }>\n                        <TextInput\n                            value={ this.props.subscription.activationKey || '' }\n                            type=\"password\"\n                            data-testid=\"subscription-activation\"\n                            id=\"subscription-activation\"\n                            aria-label=\"Subscription activation key\"\n                            onChange={ activationKey => this.props.setSubscription(Object.assign(this.props.subscription, { activationKey })) }\n                            validated={ !this.props.isValidSubscription && this.props.subscription.activationKey !== null ? 'error' : 'default' }\n                            isRequired />\n                    </FormGroup>\n                </> }\n            </Form>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        subscription: state.pendingCompose.subscription,\n        subscribeNow: state.pendingCompose.subscribeNow,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setSubscription: s => dispatch(actions.setSubscription(s)),\n        setSubscribeNow: s => dispatch(actions.setSubscribeNow(s)),\n    };\n}\n\nWizardStepRegistration.propTypes = {\n    setSubscription: PropTypes.func,\n    setSubscribeNow: PropTypes.func,\n    subscription: PropTypes.object,\n    subscribeNow: PropTypes.bool,\n    isValidSubscription: PropTypes.bool,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WizardStepRegistration);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n    Alert,\n    Text, TextVariants, TextContent, TextList, TextListVariants, TextListItem, TextListItemVariants,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport './WizardStepReview.scss';\n\nclass WizardStepReview extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const releaseLabels = {\n            'rhel-8': 'Red Hat Enterprise Linux (RHEL) 8.3',\n            'centos-8': 'CentOS Stream 8'\n        };\n\n        const awsReview = (\n            <>\n                <Text id=\"destination-header\">Amazon Web Services</Text>\n                <TextList component={ TextListVariants.dl } data-testid='review-image-upload-aws'>\n                    <TextListItem component={ TextListItemVariants.dt }>Account ID</TextListItem>\n                    {this.props.uploadAWSErrors['aws-account-id'] ? (\n                        <TextListItem component={ TextListItemVariants.dd }>\n                            <ExclamationCircleIcon className=\"error\" /> { this.props.uploadAWSErrors['aws-account-id'].value }\n                        </TextListItem>\n                    ) : (\n                        <TextListItem component={ TextListItemVariants.dd }>{this.props.uploadAWS.shareWithAccounts[0]}</TextListItem>\n                    )}\n                </TextList>\n            </>\n        );\n\n        const googleReview = (\n            <>\n                <Text id=\"destination-header\">Google Cloud Platform</Text>\n                <TextList component={ TextListVariants.dl } data-testid='review-image-upload-google'>\n                    {this.props.uploadGoogle.accountType === 'googleAccount' && (\n                        <>\n                            <TextListItem component={ TextListItemVariants.dt }>Google account</TextListItem>\n                            <TextListItem component={ TextListItemVariants.dd }>{this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].user || '' :\n                                ''}\n                            </TextListItem>\n                        </>\n                    )}\n                    {this.props.uploadGoogle.accountType === 'serviceAccount' && (\n                        <>\n                            <TextListItem component={ TextListItemVariants.dt }>Service account</TextListItem>\n                            <TextListItem component={ TextListItemVariants.dd }>{this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].serviceAccount || '' :\n                                ''}\n                            </TextListItem>\n                        </>\n                    )}\n                    {this.props.uploadGoogle.accountType === 'googleGroup' && (\n                        <>\n                            <TextListItem component={ TextListItemVariants.dt }>Google group</TextListItem>\n                            <TextListItem component={ TextListItemVariants.dd }>{this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].group || '' :\n                                ''}\n                            </TextListItem>\n                        </>\n                    )}\n                    {this.props.uploadGoogle.accountType === 'domain' && (\n                        <>\n                            <TextListItem component={ TextListItemVariants.dt }>Domain</TextListItem>\n                            <TextListItem component={ TextListItemVariants.dd }>{this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].domain || '' :\n                                ''}\n                            </TextListItem>\n                        </>\n                    )}\n                </TextList>\n            </>\n        );\n\n        let subscriptionReview = <TextListItem component={ TextListItemVariants.dd }>Register the system later</TextListItem>;\n        if (this.props.subscribeNow) {\n            subscriptionReview = (<>\n                <TextListItem component={ TextListItemVariants.dd }>Register the system on first boot</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Activation key</TextListItem>\n                { !this.props.isValidSubscription || !this.props.subscription.activationKey ? (\n                    <TextListItem component={ TextListItemVariants.dd }>\n                        <ExclamationCircleIcon className=\"error\" /> { 'A value is required' }\n                    </TextListItem>\n                ) : (\n                    <TextListItem component={ TextListItemVariants.dd } type=\"password\">\n                        {'*'.repeat(this.props.subscription.activationKey.length)}\n                    </TextListItem>\n                )}\n            </>);\n        }\n\n        return (\n            <>\n                { (Object.keys(this.props.uploadAWSErrors).length > 0 ||\n               !this.props.isValidSubscription) &&\n              <Alert variant=\"danger\" className=\"pf-u-mb-xl\" isInline title=\"Required information is missing\" /> }\n                <Title headingLevel=\"h2\" size=\"xl\">Review</Title>\n                <TextContent>\n                    <Text component={ TextVariants.small }>\n                    Review the information and click the Create button\n                    to create the image using the following criteria.\n                    </Text>\n                    <Text component={ TextVariants.h3 }>Image output</Text>\n                    <TextList component={ TextListVariants.dl } data-testid='review-image-output'>\n                        <TextListItem component={ TextListItemVariants.dt }>Release</TextListItem>\n                        <TextListItem component={ TextListItemVariants.dd }>{releaseLabels[this.props.release]}</TextListItem>\n                    </TextList>\n                    <Text component={ TextVariants.h3 }>Target environment</Text>\n                    {this.props.uploadDestinations.aws && awsReview }\n                    {this.props.uploadDestinations.google && googleReview }\n                    <Text component={ TextVariants.h3 }>Registration</Text>\n                    <TextList component={ TextListVariants.dl } data-testid='review-image-registration'>\n                        <TextListItem component={ TextListItemVariants.dt }>Subscription</TextListItem>\n                        { subscriptionReview }\n                    </TextList>\n                </TextContent>\n            </>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        uploadDestinations: state.pendingCompose.uploadDestinations,\n        uploadAWS: state.pendingCompose.uploadAWS,\n        uploadAzure: state.pendingCompose.uploadAzure,\n        uploadGoogle: state.pendingCompose.uploadGoogle,\n        subscribeNow: state.pendingCompose.subscribeNow,\n        subscription: state.pendingCompose.subscription,\n    };\n}\n\nWizardStepReview.propTypes = {\n    release: PropTypes.string,\n    uploadAWS: PropTypes.object,\n    uploadGoogle: PropTypes.object,\n    uploadDestinations: PropTypes.object,\n    uploadAzure: PropTypes.object,\n    subscription: PropTypes.object,\n    subscribeNow: PropTypes.bool,\n    uploadAWSErrors: PropTypes.object,\n    isValidSubscription: PropTypes.bool,\n};\n\nexport default connect(mapStateToProps, null)(WizardStepReview);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, ButtonVariant, Text, TextContent, WizardContextConsumer, WizardFooter } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport './ImageWizardFooter.scss';\n\nconst ImageWizardFooter = (props) => {\n    return (\n        <>\n            <WizardFooter>\n                <WizardContextConsumer>\n                    {({ activeStep, onNext, onBack, onClose }) => {\n                        let nextButtonText = 'Next';\n                        if (activeStep.name === 'Review') {\n                            nextButtonText = props.isSaveInProgress ? 'Creating...' : 'Create';\n                        }\n\n                        let nextButtonIsDisabled = props.isSaveInProgress;\n\n                        if ((activeStep.name === 'Image output' || activeStep.name === 'Review') && !props.isValidUploadDestination) {\n                            nextButtonIsDisabled = true;\n                        }\n\n                        if ((activeStep.name === 'Registration'  || activeStep.name === 'Review') && !props.isValidSubscription) {\n                            nextButtonIsDisabled = true;\n                        }\n\n                        return (\n                            <>\n                                <Button aria-label={ activeStep.name === 'Review' ? 'Create' : 'Next' } variant={ ButtonVariant.primary }\n                                    onClick={ onNext } isDisabled={ nextButtonIsDisabled }>\n                                    { nextButtonText }\n                                </Button>\n                                <Button aria-label=\"Back\" variant={ ButtonVariant.secondary }\n                                    onClick={ onBack } isDisabled={ props.isSaveInProgress || activeStep.name === 'Image output' }>\n                                Back\n                                </Button>\n                                <Button aria-label=\"Cancel\" variant={ ButtonVariant.link }\n                                    onClick={ onClose } isDisabled={ props.isSaveInProgress }>\n                                Cancel\n                                </Button>\n                            </>\n                        );\n                    }}\n                </WizardContextConsumer>\n                { props.error && (\n                    <TextContent className=\"footer-error\">\n                        <Text><ExclamationCircleIcon /> <strong>{props.error}</strong></Text>\n                    </TextContent>\n                )}\n            </WizardFooter>\n        </>\n    );\n};\n\nImageWizardFooter.propTypes = {\n    isValidUploadDestination: PropTypes.bool,\n    isSaveInProgress: PropTypes.bool,\n    isValidSubscription: PropTypes.bool,\n    error: PropTypes.string,\n};\n\nexport default ImageWizardFooter;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from '../../store/actions';\n\nimport { Button, Wizard } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport WizardStepImageOutput from './WizardStepImageOutput';\nimport WizardStepUploadAWS from './WizardStepUploadAWS';\nimport WizardStepUploadAzure from './WizardStepUploadAzure';\nimport WizardStepPackages from './WizardStepPackages';\nimport WizardStepUploadGoogle from './WizardStepUploadGoogle';\nimport WizardStepRegistration from './WizardStepRegistration';\nimport WizardStepReview from './WizardStepReview';\nimport ImageWizardFooter from './ImageWizardFooter';\n\nimport './CreateImageWizard.scss';\n\nclass CreateImageWizard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onStep = this.onStep.bind(this);\n        this.onSave = this.onSave.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.validate = this.validate.bind(this);\n        this.validateUploadAmazon = this.validateUploadAmazon.bind(this);\n\n        this.state = {\n            /* errors take form of $fieldId: error */\n            uploadAWSErrors: {},\n            uploadAzureErrors: {},\n            uploadGoogleErrors: {},\n            isSaveInProgress: false,\n            isValidSubscription: true,\n        };\n    }\n\n    async componentDidMount() {\n        let user = await insights.chrome.auth.getUser();\n        this.setState({\n            subscription: {\n                organization: Number(user.identity.internal.org_id)\n            }\n        });\n    }\n\n    onStep(step) {\n        if (step.name === 'Review') {\n            this.validate();\n        }\n    }\n\n    validate() {\n        /* upload */\n        Object.keys(this.props.uploadDestinations).forEach(provider => {\n            switch (provider) {\n                case 'aws':\n                    this.validateUploadAmazon();\n                    break;\n                case 'azure':\n                    this.validateUploadAzure();\n                    break;\n                case 'google':\n                    break;\n                default:\n                    break;\n            }\n        });\n        /* subscription */\n        if (this.props.subscribeNow) {\n            this.setState({ isValidSubscription: this.props.subscription.activationKey ? true : false });\n        } else {\n            this.setState({ isValidSubscription: true });\n        }\n    }\n\n    validateUploadAmazon() {\n        let uploadAWSErrors = {};\n        let share = this.props.uploadAWS.shareWithAccounts;\n        if (share.length === 0 || share[0].length !== 12 || isNaN(share[0])) {\n            uploadAWSErrors['aws-account-id'] =\n                { label: 'AWS account ID', value: 'A 12-digit number is required' };\n        }\n\n        this.setState({ uploadAWSErrors });\n    }\n\n    validateUploadAzure() {\n        let uploadAzureErrors = {};\n\n        let tenant_id = this.props.uploadAzure.tenantId;\n        if (tenant_id === null || tenant_id === '') {\n            uploadAzureErrors['azure-resource-group'] =\n                { label: 'Azure tenant ID', value: 'A tenant ID is required' };\n        }\n\n        let subscriptionId = this.props.uploadAzure.subscriptionId;\n        if (subscriptionId === null || subscriptionId === '') {\n            uploadAzureErrors['azure-subscription-id'] =\n                { label: 'Azure subscription ID', value: 'A subscription ID is required' };\n        }\n\n        let resource_group = this.props.uploadAzure.resourceGroup;\n        if (resource_group === null || resource_group === '') {\n            uploadAzureErrors['azure-resource-group'] =\n                { label: 'Azure resource group', value: 'A resource group is required' };\n        }\n        // TODO check oauth2 thing too here?\n    }\n\n    onSave() {\n        this.setState({ isSaveInProgress: true });\n\n        let customizations = {\n            packages: this.props.selectedPackages.map(p => p.name),\n        };\n        if (this.props.subscribeNow) {\n            customizations.subscription = {\n                'activation-key': this.props.subscription.activationKey,\n                insights: this.props.subscription.insights,\n                organization: this.props.subscription.organization,\n                'server-url': 'subscription.rhsm.redhat.com',\n                'base-url': 'https://cdn.redhat.com/',\n            };\n        }\n\n        let requests = [];\n        if (this.props.uploadDestinations.aws) {\n            let request = {\n                distribution: this.props.release.distro,\n                image_requests: [\n                    {\n                        architecture: this.props.release.arch,\n                        image_type: 'ami',\n                        upload_request: {\n                            type: 'aws',\n                            options: {\n                                share_with_accounts: this.props.uploadAWS.shareWithAccounts,\n                            },\n                        },\n                    }],\n                customizations,\n            };\n            requests.push(request);\n        }\n\n        if (this.props.uploadDestinations.google) {\n            let share = '';\n            switch (this.props.uploadGoogle.accountType) {\n                case 'googleAccount':\n                    share = 'user:' + this.props.uploadGoogle.shareWithAccounts[0].user;\n                    break;\n                case 'serviceAccount':\n                    share = 'serviceAccount:' + this.props.uploadGoogle.shareWithAccounts[0].serviceAccount;\n                    break;\n                case 'googleGroup':\n                    share = 'group:' + this.props.uploadGoogle.shareWithAccounts[0].group;\n                    break;\n                case 'domain':\n                    share = 'domain:' + this.props.uploadGoogle.shareWithAccounts[0].domain;\n                    break;\n            }\n\n            let request = {\n                distribution: this.props.release.distro,\n                image_requests: [\n                    {\n                        architecture: this.props.release.arch,\n                        image_type: 'vhd',\n                        upload_request: {\n                            type: 'gcp',\n                            options: {\n                                share_with_accounts: [ share ],\n                            },\n                        },\n                    }],\n                customizations,\n            };\n\n            requests.push(request);\n        }\n\n        if (this.props.uploadDestinations.azure) {\n            let request = {\n                distribution: this.props.release.distro,\n                image_requests: [\n                    {\n                        architecture: this.props.release.arch,\n                        image_type: 'vhd',\n                        upload_request: {\n                            type: 'azure',\n                            options: {\n                                tenant_id: this.props.uploadAzure.tenantId,\n                                subscription_id: this.props.uploadAzure.subscriptionId,\n                                resource_group: this.props.uploadAzure.resourceGroup,\n                            },\n                        },\n                    }],\n                customizations,\n            };\n            requests.push(request);\n        }\n\n        const composeRequests = requests.map(request => this.props.composeStart(request));\n\n        Promise.all(composeRequests)\n            .then(() => {\n                if (!this.props.composesError) {\n                    this.props.addNotification({\n                        variant: 'success',\n                        title: 'Your image is being created',\n                    });\n                    this.props.history.push('/landing');\n                }\n\n                this.setState({ isSaveInProgress: false });\n            });\n    }\n\n    onClose () {\n        this.props.history.push('/landing');\n    }\n\n    render() {\n        const isValidUploadDestination = this.props.uploadDestinations.aws ||\n            this.props.uploadDestinations.azure ||\n            this.props.uploadDestinations.google;\n\n        const StepImageOutput = {\n            name: 'Image output',\n            component: <WizardStepImageOutput />\n        };\n\n        const StepUploadAWS = {\n            name: 'Amazon Web Services',\n            component: <WizardStepUploadAWS\n                errors={ this.state.uploadAWSErrors } />\n        };\n\n        const StepUploadAzure = {\n            name: 'Microsoft Azure',\n            component: <WizardStepUploadAzure\n                errors={ this.state.uploadAzureErrors } />\n        };\n\n        const StepUploadGoogle = {\n            name: 'Google Cloud Platform',\n            component: <WizardStepUploadGoogle\n                errors={ this.state.uploadGoogleErrors } />\n        };\n\n        const uploadDestinationSteps = [];\n        if (this.props.uploadDestinations.aws) {\n            uploadDestinationSteps.push(StepUploadAWS);\n        }\n\n        if (this.props.uploadDestinations.azure) {\n            uploadDestinationSteps.push(StepUploadAzure);\n        }\n\n        if (this.props.uploadDestinations.google) {\n            uploadDestinationSteps.push(StepUploadGoogle);\n        }\n\n        const StepTargetEnv = {\n            name: 'Target environment',\n            steps: uploadDestinationSteps\n        };\n\n        const steps = [\n            StepImageOutput,\n            ...(StepTargetEnv.steps.length > 0 ? [ StepTargetEnv ] : []),\n            {\n                name: 'Registration',\n                component: <WizardStepRegistration\n                    isValidSubscription={ this.state.isValidSubscription } /> },\n            {\n                name: 'Packages',\n                component: <WizardStepPackages /> },\n            {\n                name: 'Review',\n                component: <WizardStepReview\n                    uploadAWSErrors={ this.state.uploadAWSErrors }\n                    isValidSubscription={ this.state.isValidSubscription } />,\n                nextButtonText: 'Create',\n            }\n        ];\n\n        return (\n            <React.Fragment>\n                <Wizard\n                    className=\"image-builder\"\n                    title={ 'Create image' }\n                    description={ <>\n                        Create a RHEL image and push it to cloud providers.\n                        {' '}\n                        <Button\n                            component=\"a\"\n                            target=\"_blank\"\n                            variant=\"link\"\n                            icon={ <ExternalLinkAltIcon /> }\n                            iconPosition=\"right\"\n                            isInline\n                            href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8-beta/\">\n                                Documentation\n                        </Button>\n                    </> }\n                    onNext={ this.onStep }\n                    onGoToStep={ this.onStep }\n                    steps={ steps }\n                    onClose={ this.onClose }\n                    onSave={ this.onSave }\n                    footer={ <ImageWizardFooter\n                        isValidUploadDestination={ isValidUploadDestination }\n                        isSaveInProgress={ this.state.isSaveInProgress }\n                        isValidSubscription={ this.state.isValidSubscription }\n                        error={ this.props.composesError } /> }\n                    isOpen />\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        composesError: state.composes.error,\n        release: state.pendingCompose.release,\n        uploadDestinations: state.pendingCompose.uploadDestinations,\n        uploadAWS: state.pendingCompose.uploadAWS,\n        uploadAzure: state.pendingCompose.uploadAzure,\n        uploadGoogle: state.pendingCompose.uploadGoogle,\n        selectedPackages: state.pendingCompose.selectedPackages,\n        subscription: state.pendingCompose.subscription,\n        subscribeNow: state.pendingCompose.subscribeNow,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        composeUpdated: (compose) => dispatch(actions.composeUpdated(compose)),\n        composeStart: (composeRequest) => dispatch(actions.composeStart(composeRequest)),\n        addNotification: (not) => dispatch(addNotification(not)),\n    };\n}\n\nCreateImageWizard.propTypes = {\n    composesError: PropTypes.string,\n    composeUpdated: PropTypes.func,\n    composeStart: PropTypes.func,\n    addNotification: PropTypes.func,\n    history: PropTypes.object,\n    release: PropTypes.object,\n    uploadDestinations: PropTypes.object,\n    uploadAWS: PropTypes.object,\n    uploadAzure: PropTypes.object,\n    uploadGoogle: PropTypes.object,\n    subscription: PropTypes.object,\n    subscribeNow: PropTypes.bool,\n    selectedPackages: PropTypes.array,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateImageWizard));\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".image-builder .pf-c-wizard__nav-list{padding-right:0px}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/CreateImageWizard/CreateImageWizard.scss\"],\"names\":[],\"mappings\":\"AAAA,sCACuB,iBAAiB\",\"sourcesContent\":[\".image-builder{\\n.pf-c-wizard__nav-list{padding-right:0px}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".image-builder .footer-error{flex-basis:100%;color:var(--pf-global--palette--red-100)}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/CreateImageWizard/ImageWizardFooter.scss\"],\"names\":[],\"mappings\":\"AAAA,6BACc,eAAe,CAAC,wCAAwC\",\"sourcesContent\":[\".image-builder{\\n.footer-error{flex-basis:100%;color:var(--pf-global--palette--red-100)}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".image-builder .tiles{display:flex}.image-builder .tile{flex:1 0 0px}.image-builder .pf-c-tile:focus{--pf-c-tile__title--Color: var(--pf-c-tile__title--Color);--pf-c-tile__icon--Color: var(---pf-global--Color--100);--pf-c-tile--before--BorderWidth: var(--pf-global--BorderWidth--sm);--pf-c-tile--before--BorderColor: var(--pf-global--BorderColor--100)}.image-builder .pf-c-tile.pf-m-selected:focus{--pf-c-tile__title--Color: var(--pf-c-tile--focus__title--Color);--pf-c-tile__icon--Color: var(--pf-c-tile--focus__icon--Color);--pf-c-tile--before--BorderWidth: var(--pf-c-tile--focus--before--BorderWidth);--pf-c-tile--before--BorderColor: var(--pf-c-tile--focus--before--BorderColor)}.image-builder .provider-icon{width:1em;height:1em}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/CreateImageWizard/WizardStepImageOutput.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACO,YAAY,CADnB,qBAC0B,YAAY,CADtC,gCACwD,yDAA0B,CAAgC,uDAAyB,CAA+B,mEAAiC,CAAmC,oEAAiC,CAD/Q,8CACkV,gEAA0B,CAAuC,8DAAyB,CAAsC,8EAAiC,CAA8C,8EAAiC,CADlkB,8BAC+nB,SAAS,CAAC,UAAU\",\"sourcesContent\":[\".image-builder{\\n.tiles{display:flex}.tile{flex:1 0 0px}.pf-c-tile:focus{--pf-c-tile__title--Color: var(--pf-c-tile__title--Color);--pf-c-tile__icon--Color: var(---pf-global--Color--100);--pf-c-tile--before--BorderWidth: var(--pf-global--BorderWidth--sm);--pf-c-tile--before--BorderColor: var(--pf-global--BorderColor--100)}.pf-c-tile.pf-m-selected:focus{--pf-c-tile__title--Color: var(--pf-c-tile--focus__title--Color);--pf-c-tile__icon--Color: var(--pf-c-tile--focus__icon--Color);--pf-c-tile--before--BorderWidth: var(--pf-c-tile--focus--before--BorderWidth);--pf-c-tile--before--BorderColor: var(--pf-c-tile--focus--before--BorderColor)}.provider-icon{width:1em;height:1em}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".image-builder .error{color:var(--pf-global--danger-color--100)}.image-builder .textcontent-review h3{margin-top:var(--pf-global--spacer--xl)}@media screen and (min-width: 576px){.image-builder .textcontent-review dl{grid-template:1fr / 25% 1fr;grid-gap:var(--pf-global--spacer--sm)}}.image-builder #destination-header{font-size:18px;margin-bottom:var(--pf-global--spacer--sm)}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/CreateImageWizard/WizardStepReview.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACO,yCAAyC,CADhD,sCACwE,uCAAuC,CAAC,qCADhH,sCAC4K,2BAA2B,CAAC,qCAAqC,CAAE,CAD/O,mCACmQ,cAAc,CAAC,0CAA0C\",\"sourcesContent\":[\".image-builder{\\n.error{color:var(--pf-global--danger-color--100)}.textcontent-review h3{margin-top:var(--pf-global--spacer--xl)}@media screen and (min-width: 576px){.textcontent-review dl{grid-template:1fr / 25% 1fr;grid-gap:var(--pf-global--spacer--sm)}}#destination-header{font-size:18px;margin-bottom:var(--pf-global--spacer--sm)}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".image-builder .textcontent-azure{margin-bottom:var(--pf-global--spacer--lg)}.image-builder .textcontent-azure h3,.image-builder .textcontent-azure h4{margin-top:var(--pf-global--spacer--sm);margin-bottom:var(--pf-global--spacer--xs)}.image-builder .textcontent-azure p{margin-bottom:0}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/CreateImageWizard/WizardStepUploadAzure.scss\"],\"names\":[],\"mappings\":\"AAAA,kCACmB,0CAA0C,CAD7D,0EAC0G,uCAAuC,CAAC,0CAA0C,CAD5L,oCACkN,eAAe\",\"sourcesContent\":[\".image-builder{\\n.textcontent-azure{margin-bottom:var(--pf-global--spacer--lg)}.textcontent-azure h3,.textcontent-azure h4{margin-top:var(--pf-global--spacer--sm);margin-bottom:var(--pf-global--spacer--xs)}.textcontent-azure p{margin-bottom:0}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ImageWizardFooter.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ImageWizardFooter.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepImageOutput.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepImageOutput.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepReview.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepReview.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepUploadAzure.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepUploadAzure.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}