{"version":3,"sources":["webpack:///./src/PresentationalComponents/ImageBuildStatus/ImageBuildStatus.scss","webpack:///./src/PresentationalComponents/ImageBuildStatus/ImageBuildStatus.scss?3827","webpack:///./src/PresentationalComponents/ImageBuildStatus/ImageBuildStatus.js","webpack:///./src/PresentationalComponents/Release/Release.js","webpack:///./src/SmartComponents/ImagesTable/ImagesTable.js","webpack:///./src/SmartComponents/LandingPage/LandingPage.js"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","ImageBuildStatus","props","messages","success","icon","className","text","failure","pending","building","Spinner","size","uploading","registering","Fragment","status","map","message","Flex","propTypes","PropTypes","string","Release","releaseOptions","release","Label","color","ImagesTable","state","columns","title","columnTransforms","classNames","Visibility","hiddenOnXs","hiddenOnSm","hiddenOnMd","visibleOnLg","pollComposeStatuses","bind","this","interval","setInterval","clearInterval","updateCompose","composes","Object","entries","id","compose","api","getComposeStatus","then","response","newCompose","assign","uploadOptions","aws","rows","cells","image_type","distribution","ToolbarGroup","ToolbarItem","to","data-testid","Table","aria-label","Component","object","func","connect","dispatch","actions","LandingPage","withRouter"],"mappings":"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","file":"js/9.16918597c0ef177a975a.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".error{color:var(--pf-global--danger-color--100)}.success{color:var(--pf-global--success-color--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./ImageBuildStatus.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./ImageBuildStatus.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./ImageBuildStatus.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Flex, Spinner } from '@patternfly/react-core';\nimport { CheckCircleIcon, PendingIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport './ImageBuildStatus.scss';\n\nconst ImageBuildStatus = (props) => {\n    const messages = {\n        success: [\n            {\n                icon: <CheckCircleIcon className=\"success\" />,\n                text: 'Ready'\n            }\n        ],\n        failure: [\n            {\n                icon: <ExclamationCircleIcon className=\"error\" />,\n                text: 'Image build failed'\n            }\n        ],\n        pending: [\n            {\n                icon: <PendingIcon />,\n                text: 'Image build, Upload, Cloud registration pending'\n            }\n        ],\n        building: [\n            {\n                icon: <Spinner size=\"md\" />,\n                text: 'Image build in progress'\n            },\n            {\n                icon: <PendingIcon />,\n                text: 'Upload, Cloud registration pending'\n            }\n        ],\n        uploading: [\n            {\n                icon: <Spinner size=\"md\" />,\n                text: 'Upload in progress'\n            },\n            {\n                icon: <PendingIcon />,\n                text: 'Cloud registration pending'\n            }\n        ],\n        registering: [\n            {\n                icon: <Spinner size=\"md\" />,\n                text: 'Cloud registration in progress'\n            }\n        ]\n    };\n    return (\n        <React.Fragment>\n            {messages[props.status] &&\n                messages[props.status].map((message, key) => (\n                    <Flex key={ key } className=\"pf-u-align-items-baseline pf-m-nowrap\">\n                        <div>{message.icon}</div>\n                        <small>{message.text}</small>\n                    </Flex>\n                ))\n            }\n        </React.Fragment>\n    );\n};\n\nImageBuildStatus.propTypes = {\n    status: PropTypes.string,\n};\n\nexport default ImageBuildStatus;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Label } from '@patternfly/react-core';\n\nconst Release = (props) => {\n    const releaseOptions = {\n        'rhel-8': 'RHEL 8.3'\n    };\n    const release = releaseOptions[props.release] ? releaseOptions[props.release] : props.release;\n    return <Label color='blue'>{release}</Label>;\n};\n\nRelease.propTypes = {\n    release: PropTypes.string,\n};\n\nexport default Release;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../redux';\nimport { Link } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, classNames, Visibility } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\n\nimport ImageBuildStatus from '../../PresentationalComponents/ImageBuildStatus/ImageBuildStatus';\nimport Release from '../../PresentationalComponents/Release/Release';\n\nimport api from '../../api.js';\n\nclass ImagesTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [\n                {\n                    title: 'Image'\n                },\n                'Target',\n                'Release',\n                'Status',\n                {\n                    title: '',\n                    props: { className: 'pf-u-text-align-right' },\n                    columnTransforms: [\n                        classNames(\n                            Visibility.hiddenOnXs,\n                            Visibility.hiddenOnSm,\n                            Visibility.hiddenOnMd,\n                            Visibility.visibleOnLg\n                        )\n                    ]\n                }\n            ]\n        };\n        this.pollComposeStatuses = this.pollComposeStatuses.bind(this);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.pollComposeStatuses(), 8000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    pollComposeStatuses() {\n        let { updateCompose, composes } = this.props;\n        Object.entries(composes).map(([ id, compose ]) => {\n            api.getComposeStatus(id).then(response => {\n                let newCompose = {};\n                newCompose[id] = Object.assign({}, compose, { status: response.status });\n                updateCompose(newCompose);\n            });\n        });\n    }\n\n    render() {\n        let { composes } = this.props;\n        const uploadOptions = {\n            aws: 'Amazon Web Services'\n        };\n        const rows = Object.entries(composes).map(([ id, compose ]) => {\n            return {\n                cells: [\n                    id,\n                    uploadOptions[compose.image_type] ? uploadOptions[compose.image_type] : compose.image_type,\n                    { title: <Release release={ compose.distribution } /> },\n                    { title: <ImageBuildStatus status={ compose.status } /> },\n                    ''\n                ]\n            };\n        });\n        return (\n            <React.Fragment>\n                <TableToolbar>\n                    <ToolbarGroup>\n                        <ToolbarItem>\n                            <Link to=\"/imagewizard\" className=\"pf-c-button pf-m-primary\" data-testid=\"create-image-action\">\n                                Create image\n                            </Link>\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                </TableToolbar>\n                <Table\n                    aria-label=\"Images\"\n                    rows={ rows }\n                    cells={ this.state.columns }\n                    data-testid=\"images-table\">\n                    <TableHeader />\n                    <TableBody />\n                </Table>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        composes: state.composes,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateCompose: (compose) => dispatch(actions.updateCompose(compose)),\n    };\n}\n\nImagesTable.propTypes = {\n    composes: PropTypes.object,\n    updateCompose: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagesTable);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\n\nimport ImagesTable from '../ImagesTable/ImagesTable';\n\nclass LandingPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='Images' />\n                </PageHeader>\n                <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n                    <ImagesTable />\n                </section>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(LandingPage);\n"],"sourceRoot":""}