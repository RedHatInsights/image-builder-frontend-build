{"version":3,"sources":["webpack:///./src/SmartComponents/ImagesTable/ImagesTable.js","webpack:///./src/SmartComponents/LandingPage/LandingPage.js"],"names":["ImagesTable","props","state","columns","title","className","columnTransforms","classNames","Visibility","hiddenOnXs","hiddenOnSm","hiddenOnMd","visibleOnLg","pollComposeStatuses","bind","this","interval","setInterval","clearInterval","updateCompose","composes","Object","entries","map","id","compose","api","getComposeStatus","then","response","newCompose","assign","status","rows","cells","image_type","distribution","Fragment","to","data-testid","Table","aria-label","Component","propTypes","PropTypes","object","func","connect","dispatch","actions","LandingPage","withRouter"],"mappings":"ilBAUMA,E,uLACF,WAAYC,GAAO,0BACf,cAAMA,IACDC,MAAQ,CACTC,QAAS,CACL,CACIC,MAAO,SAEX,SACA,UACA,SACA,CACIA,MAAO,GACPH,MAAO,CAAEI,UAAW,yBACpBC,iBAAkB,CACdC,YACIC,IAAWC,WACXD,IAAWE,WACXF,IAAWG,WACXH,IAAWI,iBAM/B,EAAKC,oBAAsB,EAAKA,oBAAoBC,KAAzB,QAxBZ,E,wDA2BC,WAChBC,KAAKC,SAAWC,aAAY,kBAAM,EAAKJ,wBAAuB,O,6CAI9DK,cAAcH,KAAKC,Y,4CAGD,MACgBD,KAAKd,MAAjCkB,EADY,EACZA,cAAeC,EADH,EACGA,SACrBC,OAAOC,QAAQF,GAAUG,KAAI,YAAqB,eAAlBC,EAAkB,KAAdC,EAAc,KAC9CC,IAAIC,iBAAiBH,GAAII,MAAK,SAAAC,GAC1B,IAAIC,EAAa,GACjBA,EAAWN,GAAMH,OAAOU,OAAO,GAAIN,EAAS,CAAEO,OAAQH,EAASG,SAC/Db,EAAcW,W,+BAKjB,IACCV,EAAaL,KAAKd,MAAlBmB,SACAa,EAAOZ,OAAOC,QAAQF,GAAUG,KAAI,YAAqB,eAAlBC,EAAkB,KAAdC,EAAc,KAC3D,MAAO,CACHS,MAAO,CACHV,EACAC,EAAQU,WACRV,EAAQW,aACRX,EAAQO,OACR,QAIZ,OACI,kBAAC,IAAMK,SAAP,KACI,kBAAC,eAAD,KACI,kBAAC,OAAD,CAAMC,GAAG,eAAejC,UAAU,2BAA2BkC,cAAY,uBAAzE,iBAIJ,kBAACC,EAAA,EAAD,CACIC,aAAW,SACXR,KAAOA,EACPC,MAAQnB,KAAKb,MAAMC,QACnBoC,cAAY,gBACZ,kBAAC,IAAD,MACA,kBAAC,IAAD,Y,GAzEMG,aA4F1B1C,EAAY2C,UAAY,CACpBvB,SAAUwB,IAAUC,OACpB1B,cAAeyB,IAAUE,MAGdC,yBAjBf,SAAyB7C,GACrB,MAAO,CACHkB,SAAUlB,EAAMkB,aAIxB,SAA4B4B,GACxB,MAAO,CACH7B,cAAe,SAACM,GAAD,OAAauB,EAASC,IAAQ9B,cAAcM,QASpDsB,CAA6C/C,G,8PCpGtDkD,E,uLACF,WAAYjD,GAAO,+BACTA,G,6CAIN,OACI,kBAAC,IAAMoC,SAAP,KACI,kBAAC,aAAD,KACI,kBAAC,kBAAD,CAAiBjC,MAAM,YAE3B,6BAASC,UAAU,mDACf,kBAAC,EAAD,Y,GAZMqC,aAmBXS,sBAAWD","file":"js/4.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../redux';\nimport { Link } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, classNames, Visibility } from '@patternfly/react-table';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components';\n\nimport api from '../../api.js';\n\nclass ImagesTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [\n                {\n                    title: 'Image'\n                },\n                'Target',\n                'Release',\n                'Status',\n                {\n                    title: '',\n                    props: { className: 'pf-u-text-align-right' },\n                    columnTransforms: [\n                        classNames(\n                            Visibility.hiddenOnXs,\n                            Visibility.hiddenOnSm,\n                            Visibility.hiddenOnMd,\n                            Visibility.visibleOnLg\n                        )\n                    ]\n                }\n            ]\n        };\n        this.pollComposeStatuses = this.pollComposeStatuses.bind(this);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.pollComposeStatuses(), 8000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    pollComposeStatuses() {\n        let { updateCompose, composes } = this.props;\n        Object.entries(composes).map(([ id, compose ]) => {\n            api.getComposeStatus(id).then(response => {\n                let newCompose = {};\n                newCompose[id] = Object.assign({}, compose, { status: response.status });\n                updateCompose(newCompose);\n            });\n        });\n    }\n\n    render() {\n        let { composes } = this.props;\n        const rows = Object.entries(composes).map(([ id, compose ]) => {\n            return {\n                cells: [\n                    id,\n                    compose.image_type,\n                    compose.distribution,\n                    compose.status,\n                    ''\n                ]\n            };\n        });\n        return (\n            <React.Fragment>\n                <TableToolbar>\n                    <Link to=\"/imagewizard\" className=\"pf-c-button pf-m-primary\" data-testid=\"create-image-action\">\n                        Create image\n                    </Link>\n                </TableToolbar>\n                <Table\n                    aria-label=\"Images\"\n                    rows={ rows }\n                    cells={ this.state.columns }\n                    data-testid=\"images-table\">\n                    <TableHeader />\n                    <TableBody />\n                </Table>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        composes: state.composes,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateCompose: (compose) => dispatch(actions.updateCompose(compose)),\n    };\n}\n\nImagesTable.propTypes = {\n    composes: PropTypes.object,\n    updateCompose: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagesTable);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\n\nimport ImagesTable from '../ImagesTable/ImagesTable';\n\nclass LandingPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='Images' />\n                </PageHeader>\n                <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n                    <ImagesTable />\n                </section>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(LandingPage);\n"],"sourceRoot":""}