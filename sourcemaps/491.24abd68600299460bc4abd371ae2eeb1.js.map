{"version":3,"file":"js/491.390df7df896b58c30f28.js","mappings":"uLAiCA,QANqB,WAAH,OAChBA,IAAAA,cAACC,EAAAA,GAAQ,CAACC,MAAOA,EAAAA,GACfF,IAAAA,cAACG,EAAAA,EAAG,MACK,GCxBAC,EAAAA,EAAAA,GAAWC,SAASC,eAAe,SAE3CC,OAAOP,IAAAA,cAACQ,EAAY,M,sBCNrBC,EAAI,EAAQ,OAEdC,EAAQ,EAAaD,EAAEL,WACDK,EAAEE,W","sources":["webpack:///./src/AppEntry.js","webpack:///./src/bootstrap.js","webpack:///./node_modules/react-dom/client.js"],"sourcesContent":["import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store';\n\nif (process.env.NODE_ENV === 'development' && process.env.MSW === true) {\n  // process.env.MSW is set in the webpack config using DefinePlugin\n  const { worker } = require('./test/mocks/browser');\n  worker.start({\n    serviceWorker: {\n      url: '/beta/apps/image-builder/mockServiceWorker.js',\n      options: {\n        /* \n        Service workers can only intercept requests made from within their scope.\n        mockServiceWorker.js is served from /beta/apps/image-builder/, which becomes\n        the worker's default scope. Set scope to '/' so that all requests are in scope \n        and can be intercepted. Note that the Service-Worker-Allowed header must\n        be set to '/' for this to work, and is done in the webpack config. \n        */\n        scope: '../../../',\n      },\n    },\n  });\n}\n\nconst ImageBuilder = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nexport default ImageBuilder;\n","import React from 'react';\n\nimport { createRoot } from 'react-dom/client';\n\nimport ImageBuilder from './AppEntry';\n\nconst root = createRoot(document.getElementById('root'));\n\nroot.render(<ImageBuilder />);\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["React","Provider","store","App","createRoot","document","getElementById","render","ImageBuilder","m","exports","hydrateRoot"],"sourceRoot":""}