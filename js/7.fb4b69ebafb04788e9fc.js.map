{"version":3,"sources":["webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepImageOutput.scss","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepReview.scss","webpack:///./src/SmartComponents/CreateImageWizard/CreateImageWizard.scss","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepImageOutput.scss?1601","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepReview.scss?a1e2","webpack:///./src/SmartComponents/CreateImageWizard/CreateImageWizard.scss?837f","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepImageOutput.js","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepUploadAWS.js","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepRegistration.js","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepReview.js","webpack:///./src/SmartComponents/CreateImageWizard/CreateImageWizard.js"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","WizardStepImageOutput","props","Form","Title","headingLevel","size","FormGroup","isRequired","label","fieldId","FormSelect","value","onChange","setRelease","aria-label","id","data-testid","map","option","FormSelectOption","className","Tile","title","icon","src","onClick","toggleUploadDestination","isSelected","uploadDestinations","aws","isStacked","isDisplayLarge","azure","isDisabled","google","propTypes","toggleUploadAWS","PropTypes","func","object","string","WizardStepUploadAWS","helperTextInvalid","errors","validated","TextInput","uploadAWS","share_with_accounts","type","setUploadOptions","Object","assign","WizardStepRegistration","Radio","name","isChecked","subscribeNow","setSubscribeNow","subscription","organization","setSubscription","bool","WizardStepReview","keys","uploadAWSErrors","length","subscriptionErrors","Alert","variant","isInline","TextContent","release","entries","error","Fragment","CreateImageWizard","bind","onStep","onSave","onClose","validate","validateUploadAmazon","validateSubscription","state","arch","imageType","uploadAzure","temp","uploadGoogle","insights","uploadAzureErrors","uploadGoogleErrors","chrome","auth","getUser","user","this","setState","Number","identity","internal","org_id","step","forEach","provider","share","isNaN","prevState","uploadOptions","requests","request","distribution","image_requests","architecture","image_type","upload_requests","customizations","composeRequests","composeRequest","api","composeImage","then","response","compose","image_status","status","updateCompose","Promise","all","history","StepImageOutput","component","StepUploadAWS","uploadDestinationSteps","StepTargetEnv","steps","nextButtonText","Wizard","onNext","onGoToStep","isOpen","Component","connect","dispatch","actions","withRouter"],"mappings":"8EAEAA,EADkC,EAAQ,EAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,EAAI,ypBAA0pB,KAEnrBD,EAAOH,QAAUA,G,qBCJjBA,EADkC,EAAQ,EAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,EAAI,mRAAoR,KAE7SD,EAAOH,QAAUA,G,qBCJjBA,EADkC,EAAQ,EAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,EAAI,8CAA+C,KAExED,EAAOH,QAAUA,G,oBCLjB,IAAIK,EAAU,EAAQ,KAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACF,EAAOC,EAAIC,EAAS,MAOhE,IAAIC,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBC,GAEjBC,EAAS,EAAQ,EAAR,CAAgEJ,EAASC,GAEnFD,EAAQK,SAAQP,EAAOH,QAAUK,EAAQK,QAG3CP,EAAOQ,IAAIC,OAAO,KAA6H,WAC9I,IAAIC,EAAa,EAAQ,KAiBzB,GAfyB,iBAAfA,IAAyBA,EAAa,CAAC,CAACV,EAAOC,EAAIS,EAAY,OAE3D,SAASC,EAAGC,GACzB,IAAIC,EAAKC,EAAM,EAEf,IAAID,KAAOF,EAAG,CACb,IAAIC,GAAKD,EAAEE,KAASD,EAAEC,GAAM,OAAO,EACnCC,IAGD,IAAID,KAAOD,EAAGE,IAEd,OAAe,IAARA,EAVK,CAWXZ,EAAQK,OAAQG,EAAWH,QAEjB,MAAM,IAAIQ,MAAM,uDAE5BT,EAAOI,MAGRV,EAAOQ,IAAIQ,SAAQ,WAAaV,Q,oBC1CjC,IAAIJ,EAAU,EAAQ,KAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACF,EAAOC,EAAIC,EAAS,MAOhE,IAAIC,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBC,GAEjBC,EAAS,EAAQ,EAAR,CAAgEJ,EAASC,GAEnFD,EAAQK,SAAQP,EAAOH,QAAUK,EAAQK,QAG3CP,EAAOQ,IAAIC,OAAO,KAAwH,WACzI,IAAIC,EAAa,EAAQ,KAiBzB,GAfyB,iBAAfA,IAAyBA,EAAa,CAAC,CAACV,EAAOC,EAAIS,EAAY,OAE3D,SAASC,EAAGC,GACzB,IAAIC,EAAKC,EAAM,EAEf,IAAID,KAAOF,EAAG,CACb,IAAIC,GAAKD,EAAEE,KAASD,EAAEC,GAAM,OAAO,EACnCC,IAGD,IAAID,KAAOD,EAAGE,IAEd,OAAe,IAARA,EAVK,CAWXZ,EAAQK,OAAQG,EAAWH,QAEjB,MAAM,IAAIQ,MAAM,uDAE5BT,EAAOI,MAGRV,EAAOQ,IAAIQ,SAAQ,WAAaV,Q,oBC1CjC,IAAIJ,EAAU,EAAQ,KAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACF,EAAOC,EAAIC,EAAS,MAOhE,IAAIC,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBC,GAEjBC,EAAS,EAAQ,EAAR,CAAgEJ,EAASC,GAEnFD,EAAQK,SAAQP,EAAOH,QAAUK,EAAQK,QAG3CP,EAAOQ,IAAIC,OAAO,KAAyH,WAC1I,IAAIC,EAAa,EAAQ,KAiBzB,GAfyB,iBAAfA,IAAyBA,EAAa,CAAC,CAACV,EAAOC,EAAIS,EAAY,OAE3D,SAASC,EAAGC,GACzB,IAAIC,EAAKC,EAAM,EAEf,IAAID,KAAOF,EAAG,CACb,IAAIC,GAAKD,EAAEE,KAASD,EAAEC,GAAM,OAAO,EACnCC,IAGD,IAAID,KAAOD,EAAGE,IAEd,OAAe,IAARA,EAVK,CAWXZ,EAAQK,OAAQG,EAAWH,QAEjB,MAAM,IAAIQ,MAAM,uDAE5BT,EAAOI,MAGRV,EAAOQ,IAAIQ,SAAQ,WAAaV,Q,0VCpC3BW,G,OAAwB,SAACC,GAM3B,OACI,oCACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAA9B,gBACA,kBAACC,EAAA,EAAD,CAAWC,YAAU,EAACC,MAAM,UAAUC,QAAQ,kBAC1C,kBAACC,EAAA,EAAD,CAAYC,MAAQV,EAAMU,MAAQC,SAAW,SAAAD,GAAK,OAAIV,EAAMY,WAAWF,IAASJ,YAAU,EACtFO,aAAW,uBAAuBC,GAAG,iBAAiBC,cAAY,kBAX/D,CACnB,CAAEL,MAAO,SAAUH,MAAO,uCAC1B,CAAEG,MAAO,WAAYH,MAAO,oBAUKS,KAAI,SAAAC,GAAM,OAAI,kBAACC,EAAA,EAAD,CAAkBvB,IAAMsB,EAAOP,MAAQA,MAAQO,EAAOP,MAAQH,MAAQU,EAAOV,aAGpH,kBAACF,EAAA,EAAD,CAAWC,YAAU,EAACC,MAAM,4BAA4BQ,cAAY,iBAChE,yBAAKI,UAAU,SACX,kBAACC,EAAA,EAAD,CACID,UAAU,kBACVJ,cAAY,aACZM,MAAM,sBACNC,KAAO,yBACHH,UAAU,gBACVI,IAAM,iDACVC,QAAU,kBAAMxB,EAAMyB,wBAAwB,QAC9CC,WAAa1B,EAAM2B,mBAAmBC,IACtCC,WAAS,EACTC,gBAAc,IAClB,kBAACV,EAAA,EAAD,CACID,UAAU,kBACVJ,cAAY,eACZM,MAAM,kBACNC,KAAO,yBACHH,UAAU,gBACVI,IAAM,mEACVC,QAAU,kBAAMxB,EAAMyB,wBAAwB,UAC9CC,WAAa1B,EAAM2B,mBAAmBI,MACtCF,WAAS,EACTC,gBAAc,EACdE,YAAU,IACd,kBAACZ,EAAA,EAAD,CACID,UAAU,OACVJ,cAAY,gBACZM,MAAM,wBACNC,KAAO,yBACHH,UAAU,gBACVI,IAAM,gEACVC,QAAU,kBAAMxB,EAAMyB,wBAAwB,WAC9CC,WAAa1B,EAAM2B,mBAAmBM,OACtCJ,WAAS,EACTC,gBAAc,EACdE,YAAU,UAQtCjC,EAAsBmC,UAAY,CAC9BC,gBAAiBC,IAAUC,KAC3BV,mBAAoBS,IAAUE,OAC9B1B,WAAYwB,IAAUC,KACtB3B,MAAO0B,IAAUG,OACjBd,wBAAyBW,IAAUC,MAGxBtC,Q,SCtETyC,EAAsB,SAACxC,GACzB,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAA9B,iBACA,yKAEgE,6BAFhE,6JAMA,kBAACC,EAAA,EAAD,CAAWC,YAAU,EAACC,MAAM,iBAAiBC,QAAQ,iBACjDiC,kBAAqBzC,EAAM0C,OAAO,mBAAqB1C,EAAM0C,OAAO,kBAAkBhC,OAAU,GAChGiC,UAAa3C,EAAM0C,OAAO,kBAAqB,QAAY,WAC3D,kBAACE,EAAA,EAAD,CAAWlC,MAAQV,EAAM6C,UAAU5D,QAAQ6D,qBAAuB,GAC9DC,KAAK,OAAOlC,aAAW,iBAAiBC,GAAG,iBAC3CC,cAAY,iBAAiBT,YAAU,EACvCK,SAAW,SAAAD,GAAK,OACZV,EAAMgD,iBAAiB,MAAOC,OAAOC,OAAOlD,EAAM6C,UAAU5D,QAAS,CAAE6D,oBAAqB,CAAEpC,YAMtH8B,EAAoBN,UAAY,CAC5Bc,iBAAkBZ,IAAUC,KAC5BQ,UAAWT,IAAUE,OACrBI,OAAQN,IAAUE,QAGPE,Q,SC7BTW,EAAyB,SAACnD,GAC5B,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAA9B,gBACA,kBAACC,EAAA,EAAD,CAAWC,YAAU,EAACC,MAAM,uBACxB,kBAAC6C,EAAA,EAAD,CAAOC,KAAK,sBAAsBC,UAAYtD,EAAMuD,aAAezC,GAAG,sBAClEP,MAAM,6DACNI,SAAW,kBAAMX,EAAMwD,iBAAgB,IACvCzC,cAAY,8BAChB,kBAACqC,EAAA,EAAD,CAAOC,KAAK,wBAAwBC,WAAatD,EAAMuD,aACnDhD,MAAM,4BAA4BO,GAAG,wBACrCH,SAAW,kBAAMX,EAAMwD,iBAAgB,IACvCzC,cAAY,iCAElBf,EAAMuD,cACN,oCACI,kBAAClD,EAAA,EAAD,CAAWE,MAAM,kBAAkBC,QAAQ,6BACvC,kBAACoC,EAAA,EAAD,CAAWZ,YAAU,EAACtB,MAAQV,EAAMyD,aAAaC,cAAgB,GAAKX,KAAK,OACvEjC,GAAG,4BAA4BD,aAAW,+BAC1CE,cAAY,qBAEpB,kBAACV,EAAA,EAAD,CAAWC,YAAU,EAACC,MAAM,iBAAiBC,QAAQ,0BACjDiC,kBAAqBzC,EAAM0C,OAAO,4BAA8B1C,EAAM0C,OAAO,2BAA2BhC,OAAU,GAClHiC,UAAa3C,EAAM0C,OAAO,2BAA8B,QAAY,WACpE,kBAACE,EAAA,EAAD,CAAWlC,MAAQV,EAAMyD,aAAa,mBAAqB,GAAKV,KAAK,WACjEhC,cAAY,0BAA0BT,YAAU,EAChDQ,GAAG,0BAA0BD,aAAW,8BACxCF,SAAW,SAAAD,GAAK,OAAIV,EAAM2D,gBAAgBV,OAAOC,OAAOlD,EAAMyD,aAAc,CAAE,iBAAkB/C,YAO1HyC,EAAuBjB,UAAY,CAC/ByB,gBAAiBvB,IAAUC,KAC3BmB,gBAAiBpB,IAAUC,KAC3BoB,aAAcrB,IAAUE,OACxBiB,aAAcnB,IAAUwB,KACxBlB,OAAQN,IAAUE,QAGPa,Q,6CCvCTU,G,OAAmB,SAAC7D,GAQtB,OACI,qCACOiD,OAAOa,KAAK9D,EAAM+D,iBAAiBC,OAAS,GAC5Cf,OAAOa,KAAK9D,EAAMiE,oBAAoBD,OAAS,IAChD,kBAACE,EAAA,EAAD,CAAOC,QAAQ,SAAShD,UAAU,aAAaiD,UAAQ,EAAC/C,MAAM,oCAChE,kBAACnB,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAA9B,gBACA,kBAACiE,EAAA,EAAD,KACI,kIAIA,4CACA,wBAAItD,cAAY,uBACZ,uCAGA,4BAvBO,CACnB,SAAU,sCACV,WAAY,mBAsBqBf,EAAMsE,UAE3B,kDAGA,4BACMtE,EAAM6C,WAAa,oCAzBhC,yBA4BKI,OAAOsB,QAAQvE,EAAM+D,iBAAiBC,OAAS,GAC7C,6CAEJ,4BACMf,OAAOsB,QAAQvE,EAAM+D,iBAAiB/C,KAAI,YAAoB,eAAjBrB,EAAiB,KAAZ6E,EAAY,KAC5D,OAAQ,kBAAC,IAAMC,SAAP,CAAgB9E,IAAMA,GAC1B,4BACM6E,EAAMjE,OAEZ,4BACI,kBAAC,IAAD,CAAuBY,UAAU,UADrC,IACkDqD,EAAM9D,YAKpE,4CACA,4BACI,6CAGGV,EAAMuD,cACP,yDAGAvD,EAAMuD,cACN,iEAGAN,OAAOsB,QAAQvE,EAAMiE,oBAAoBjD,KAAI,YAAoB,eAAjBrB,EAAiB,KAAZ6E,EAAY,KAC/D,OAAQ,kBAAC,IAAMC,SAAP,CAAgB9E,IAAMA,GAC1B,4BACM6E,EAAMjE,OAEZ,4BACI,kBAAC,IAAD,CAAuBY,UAAU,UADrC,IACkDqD,EAAM9D,gBAUpFmD,EAAiB3B,UAAY,CACzBoC,QAASlC,IAAUG,OACnBM,UAAWT,IAAUE,OACrBmB,aAAcrB,IAAUE,OACxBiB,aAAcnB,IAAUwB,KACxBG,gBAAiB3B,IAAUE,OAC3B2B,mBAAoB7B,IAAUE,QAGnBuB,Q,i1BC/ETa,G,0LACF,WAAY1E,GAAO,0BACf,cAAMA,IAEDY,WAAa,EAAKA,WAAW+D,KAAhB,QAClB,EAAK3B,iBAAmB,EAAKA,iBAAiB2B,KAAtB,QACxB,EAAKhB,gBAAkB,EAAKA,gBAAgBgB,KAArB,QACvB,EAAKnB,gBAAkB,EAAKA,gBAAgBmB,KAArB,QACvB,EAAKlD,wBAA0B,EAAKA,wBAAwBkD,KAA7B,QAC/B,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,QACd,EAAKE,OAAS,EAAKA,OAAOF,KAAZ,QACd,EAAKG,QAAU,EAAKA,QAAQH,KAAb,QACf,EAAKI,SAAW,EAAKA,SAASJ,KAAd,QAChB,EAAKK,qBAAuB,EAAKA,qBAAqBL,KAA1B,QAC5B,EAAKM,qBAAuB,EAAKA,qBAAqBN,KAA1B,QAE5B,EAAKO,MAAQ,CACTC,KAAM,SACNC,UAAW,QACXd,QAAS,SACTzB,UAAW,CACPE,KAAM,MACN9D,QAAS,CACL6D,oBAAqB,KAG7BuC,YAAa,CACTtC,KAAM,QACN9D,QAAS,CACLqG,KAAM,KAGdC,aAAc,CACVxC,KAAM,SACN9D,QAAS,CACLqG,KAAM,KAGd3D,mBAAoB,CAChBC,KAAK,EACLG,OAAO,EACPE,QAAQ,GAEZwB,aAAc,CACVC,aAAc,KACd,iBAAkB,KAClB,aAAc,+BACd,WAAY,0BACZ8B,UAAU,GAEdjC,cAAc,EAEdQ,gBAAiB,GACjB0B,kBAAmB,GACnBC,mBAAoB,GACpBzB,mBAAoB,IAtDT,E,kKA2DEuB,SAASG,OAAOC,KAAKC,U,OAAlCC,E,OACJC,KAAKC,SAAS,CACVvC,aAAc,CACVC,aAAcuC,OAAOH,EAAKI,SAASC,SAASC,W,0HAKjDC,GACe,WAAdA,EAAKhD,MACL0C,KAAKhB,a,iCAIF,WAEP9B,OAAOa,KAAKiC,KAAKb,MAAMvD,oBAAoB2E,SAAQ,SAAAC,GAC/C,OAAQA,GACJ,IAAK,MACD,EAAKvB,uBACL,MACJ,IAAK,QAEL,IAAK,SACD,MACJ,QACI,EAAKgB,SAAS,CACVjC,gBAAiB,GACjB0B,kBAAmB,GACnBC,mBAAoB,SAMhCK,KAAKb,MAAM3B,aACXwC,KAAKd,uBAELc,KAAKC,SAAS,CAAE/B,mBAAoB,O,6CAKxC,IAAIF,EAAkB,GAClByC,EAAQT,KAAKb,MAAMrC,UAAU5D,QAAQ6D,qBACpB,IAAjB0D,EAAMxC,QAAoC,KAApBwC,EAAM,GAAGxC,QAAiByC,MAAMD,EAAM,OAC5DzC,EAAgB,kBACZ,CAAExD,MAAO,iBAAkBG,MAAO,kCAG1CqF,KAAKC,SAAS,CAAEjC,sB,6CAIhB,IAAIE,EAAqB,GACpB8B,KAAKb,MAAMzB,aAAa,oBACzBQ,EAAmB,2BACf,CAAE1D,MAAO,iBAAkBG,MAAO,wBAG1CqF,KAAKC,SAAS,CAAE/B,yB,iCAGTK,GACPyB,KAAKC,SAAS,CAAE1B,c,8CAGIiC,GACpBR,KAAKC,UAAS,SAAAU,GAAS,aAChBA,EADgB,CAEnB/E,mBAAoB,GAAF,GACX+E,EAAU/E,mBADC,OAEb4E,GAAYG,EAAU/E,mBAAmB4E,Y,uCAKrCA,EAAUI,GACvB,OAAQJ,GACJ,IAAK,MACDR,KAAKC,SAAS,CACVnD,UAAW,CACPE,KAAMwD,EACNtH,QAAS0H,KAGjB,MACJ,IAAK,QACDZ,KAAKC,SAAS,CACVX,YAAa,CACTtC,KAAMwD,EACNtH,QAAS0H,KAGjB,MACJ,IAAK,SACDZ,KAAKC,SAAS,CACVT,aAAc,CACVxC,KAAMwD,EACNtH,QAAS0H,Q,sCASbpD,GACZwC,KAAKC,SAAS,CAAEzC,mB,sCAGJE,GACZsC,KAAKC,SAAS,CAAEvC,gBAAgBsC,KAAKhB,Y,+BAG/B,WACF6B,EAAW,GACf3D,OAAOa,KAAKiC,KAAKb,MAAMvD,oBAAoB2E,SAAQ,SAAAC,GAC/C,OAAQA,GACJ,IAAK,MACD,IAAIM,EAAU,CACVC,aAAc,EAAK5B,MAAMZ,QACzByC,eAAgB,CACZ,CACIC,aAAc,EAAK9B,MAAMC,KACzB8B,WAAY,MACZC,gBAAiB,CAAE,EAAKhC,MAAMrC,aAEtCsE,eAAgB,CACZ1D,aAAc,EAAKyB,MAAMzB,eAGjCmD,EAAS/H,KAAKgI,OAa1B,IAAMO,EAAkB,GACxBR,EAASN,SAAQ,SAAAO,GACb,IAAMQ,EAAiBC,IAAIC,aAAaV,GAASW,MAAK,SAAAC,GAClD,IAAIC,EAAU,GACdA,EAAQD,EAAS3G,IAAM,CACnB6G,aAAc,CACVC,OAAQ,WAEZd,aAAcD,EAAQC,aACtBE,aAAcH,EAAQE,eAAe,GAAGC,aACxCC,WAAYJ,EAAQE,eAAe,GAAGE,YAE1C,EAAKjH,MAAM6H,cAAcH,MAE7BN,EAAgBvI,KAAKwI,MAEzBS,QAAQC,IAAIX,GAAiBI,MAAK,kBAAM,EAAKxH,MAAMgI,QAAQnJ,KAAK,iB,gCAIhEkH,KAAK/F,MAAMgI,QAAQnJ,KAAK,c,+BAIxB,IAAMoJ,EAAkB,CACpB5E,KAAM,eACN6E,UAAW,kBAAC,EAAD,CACPxH,MAAQqF,KAAKb,MAAMZ,QACnB1D,WAAamF,KAAKnF,WAClBa,wBAA0BsE,KAAKtE,wBAC/BE,mBAAqBoE,KAAKb,MAAMvD,sBAGlCwG,EAAgB,CAClB9E,KAAM,sBACN6E,UAAW,kBAAC,EAAD,CACPrF,UAAYkD,KAAKb,MAAMrC,UACvBG,iBAAmB+C,KAAK/C,iBACxBN,OAASqD,KAAKb,MAAMnB,mBAWtBqE,EAAyB,GAC3BrC,KAAKb,MAAMvD,mBAAmBC,KAC9BwG,EAAuBvJ,KAAKsJ,GAG5BpC,KAAKb,MAAMvD,mBAAmBI,OAC9BqG,EAAuBvJ,KAdH,CACpBwE,KAAM,oBAgBN0C,KAAKb,MAAMvD,mBAAmBM,QAC9BmG,EAAuBvJ,KAdF,CACrBwE,KAAM,0BAgBV,IAAMgF,EAAgB,CAClBhF,KAAM,qBACNiF,MAAOF,GAGLE,EAAQ,CACVL,GADO,WAEHI,EAAcC,MAAMtE,OAAS,EAAI,CAAEqE,GAAkB,IAFlD,CAGP,CACIhF,KAAM,eACN6E,UAAW,kBAAC,EAAD,CACPzE,aAAesC,KAAKb,MAAMzB,aAC1BF,aAAewC,KAAKb,MAAM3B,aAC1BI,gBAAkBoC,KAAKpC,gBACvBH,gBAAkBuC,KAAKvC,gBACvBd,OAASqD,KAAKb,MAAMjB,sBAC5B,CACIZ,KAAM,SACN6E,UAAW,kBAAC,EAAD,CACP5D,QAAUyB,KAAKb,MAAMZ,QACrBzB,UAAYkD,KAAKb,MAAMrC,UACvBY,aAAesC,KAAKb,MAAMzB,aAC1BF,aAAewC,KAAKb,MAAM3B,aAC1BQ,gBAAkBgC,KAAKb,MAAMnB,gBAC7BE,mBAAqB8B,KAAKb,MAAMjB,qBACpCsE,eAAgB,YAGxB,OACI,kBAAC,IAAM9D,SAAP,KACI,kBAAC+D,EAAA,EAAD,CACInH,MAAQ,eACRoH,OAAS1C,KAAKnB,OACd8D,WAAa3C,KAAKnB,OAClB0D,MAAQA,EACRxD,QAAUiB,KAAKjB,QACfD,OAASkB,KAAKlB,OACd8D,QAAM,S,GAjTMC,aA6ThClE,GAAkBxC,UAAY,CAC1B2F,cAAezF,IAAUC,KACzB2F,QAAS5F,IAAUE,QAGRuG,4BAAQ,MAXvB,SAA4BC,GACxB,MAAO,CACHjB,cAAe,SAACH,GAAD,OAAaoB,EAASC,IAAQlB,cAAcH,QASpDmB,CAAkCG,YAAWtE","file":"js/7.fb4b69ebafb04788e9fc.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".tiles{display:flex}.tile{flex:1 0 0px}.pf-c-tile:focus{--pf-c-tile__title--Color: var(--pf-c-tile__title--Color);--pf-c-tile__icon--Color: var(---pf-global--Color--100);--pf-c-tile--before--BorderWidth: var(--pf-global--BorderWidth--sm);--pf-c-tile--before--BorderColor: var(--pf-global--BorderColor--100)}.pf-c-tile.pf-m-selected:focus{--pf-c-tile__title--Color: var(--pf-c-tile--focus__title--Color);--pf-c-tile__icon--Color: var(--pf-c-tile--focus__icon--Color);--pf-c-tile--before--BorderWidth: var(--pf-c-tile--focus--before--BorderWidth);--pf-c-tile--before--BorderColor: var(--pf-c-tile--focus--before--BorderColor)}.provider-icon{width:1em;height:1em}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".error{color:var(--pf-global--danger-color--100)}.pf-c-content h3{margin-top:var(--pf-global--spacer--xl);margin-bottom:var(--pf-global--spacer--md)}@media screen and (min-width: 576px){.pf-c-content dl{grid-template:1fr / 25% 1fr;grid-gap:var(--pf-global--spacer--sm)}}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-wizard__nav-list{padding-right:0px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepImageOutput.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepImageOutput.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepImageOutput.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepReview.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepReview.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepReview.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form, FormGroup, FormSelect, FormSelectOption, Tile, Title } from '@patternfly/react-core';\n\nimport './WizardStepImageOutput.scss';\n\nconst WizardStepImageOutput = (props) => {\n    const releaseOptions = [\n        { value: 'rhel-8', label: 'Red Hat Enterprise Linux (RHEL) 8.3' },\n        { value: 'centos-8', label: 'CentOS Stream 8' },\n    ];\n\n    return (\n        <>\n            <Form>\n                <Title headingLevel=\"h2\" size=\"xl\">Image output</Title>\n                <FormGroup isRequired label=\"Release\" fieldId=\"release-select\">\n                    <FormSelect value={ props.value } onChange={ value => props.setRelease(value) } isRequired\n                        aria-label=\"Select release input\" id=\"release-select\" data-testid=\"release-select\">\n                        { releaseOptions.map(option => <FormSelectOption key={ option.value } value={ option.value } label={ option.label } />) }\n                    </FormSelect>\n                </FormGroup>\n                <FormGroup isRequired label=\"Select target environment\" data-testid=\"target-select\">\n                    <div className=\"tiles\">\n                        <Tile\n                            className=\"tile pf-u-mr-sm\"\n                            data-testid=\"upload-aws\"\n                            title=\"Amazon Web Services\"\n                            icon={ <img\n                                className='provider-icon'\n                                src={ '/apps/frontend-assets/partners-icons/aws.svg' } /> }\n                            onClick={ () => props.toggleUploadDestination('aws') }\n                            isSelected={ props.uploadDestinations.aws }\n                            isStacked\n                            isDisplayLarge />\n                        <Tile\n                            className=\"tile pf-u-mr-sm\"\n                            data-testid=\"upload-azure\"\n                            title=\"Microsoft Azure\"\n                            icon={ <img\n                                className='provider-icon'\n                                src={ '/apps/frontend-assets/partners-icons/microsoft-azure-short.svg' } /> }\n                            onClick={ () => props.toggleUploadDestination('azure') }\n                            isSelected={ props.uploadDestinations.azure }\n                            isStacked\n                            isDisplayLarge\n                            isDisabled />\n                        <Tile\n                            className=\"tile\"\n                            data-testid=\"upload-google\"\n                            title=\"Google Cloud Platform\"\n                            icon={ <img\n                                className='provider-icon'\n                                src={ '/apps/frontend-assets/partners-icons/google-cloud-short.svg' } /> }\n                            onClick={ () => props.toggleUploadDestination('google') }\n                            isSelected={ props.uploadDestinations.google }\n                            isStacked\n                            isDisplayLarge\n                            isDisabled />\n                    </div>\n                </FormGroup>\n            </Form>\n        </>\n    );\n};\n\nWizardStepImageOutput.propTypes = {\n    toggleUploadAWS: PropTypes.func,\n    uploadDestinations: PropTypes.object,\n    setRelease: PropTypes.func,\n    value: PropTypes.string,\n    toggleUploadDestination: PropTypes.func,\n};\n\nexport default WizardStepImageOutput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form, FormGroup, TextInput, Title } from '@patternfly/react-core';\n\nconst WizardStepUploadAWS = (props) => {\n    return (\n        <Form>\n            <Title headingLevel=\"h2\" size=\"xl\">Upload to AWS</Title>\n            <p>\n            Your image will be uploaded to a temporary account on Amazon Web Services.\n            The image will be shared with the account ID you provide below. <br />\n            Within the next 14 days you will need to copy the shared image to your own account.\n            After 14 days it will be unavailable and will have to be regenerated.\n            </p>\n            <FormGroup isRequired label=\"AWS account ID\" fieldId=\"aws-account-id\"\n                helperTextInvalid={ (props.errors['aws-account-id'] && props.errors['aws-account-id'].value) || '' }\n                validated={ (props.errors['aws-account-id'] && 'error') || 'default' }>\n                <TextInput value={ props.uploadAWS.options.share_with_accounts || '' }\n                    type=\"text\" aria-label=\"AWS account ID\" id=\"aws-account-id\"\n                    data-testid=\"aws-account-id\" isRequired\n                    onChange={ value =>\n                        props.setUploadOptions('aws', Object.assign(props.uploadAWS.options, { share_with_accounts: [ value ]})) } />\n            </FormGroup>\n        </Form>\n    );\n};\n\nWizardStepUploadAWS.propTypes = {\n    setUploadOptions: PropTypes.func,\n    uploadAWS: PropTypes.object,\n    errors: PropTypes.object,\n};\n\nexport default WizardStepUploadAWS;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form, FormGroup, TextInput, Radio, Title } from '@patternfly/react-core';\n\nconst WizardStepRegistration = (props) => {\n    return (\n        <Form>\n            <Title headingLevel=\"h2\" size=\"xl\">Registration</Title>\n            <FormGroup isRequired label=\"Register the system\">\n                <Radio name=\"subscribe-now-radio\" isChecked={ props.subscribeNow } id=\"subscribe-now-radio\"\n                    label=\"Embed an activation key and register systems on first boot\"\n                    onChange={ () => props.setSubscribeNow(true) }\n                    data-testid=\"register-now-radio-button\" />\n                <Radio name=\"subscribe-later-radio\" isChecked={ !props.subscribeNow }\n                    label=\"Register the system later\" id=\"subscribe-later-radio\"\n                    onChange={ () => props.setSubscribeNow(false) }\n                    data-testid=\"register-later-radio-button\" />\n            </FormGroup>\n            { props.subscribeNow &&\n              <>\n                  <FormGroup label=\"Organization ID\" fieldId=\"subscription-organization\">\n                      <TextInput isDisabled value={ props.subscription.organization || '' } type=\"text\"\n                          id=\"subscription-organization\" aria-label=\"Subscription organization ID\"\n                          data-testid=\"organization-id\" />\n                  </FormGroup>\n                  <FormGroup isRequired label=\"Activation key\" fieldId=\"subscription-activation\"\n                      helperTextInvalid={ (props.errors['subscription-activation'] && props.errors['subscription-activation'].value) || '' }\n                      validated={ (props.errors['subscription-activation'] && 'error') || 'default' }>\n                      <TextInput value={ props.subscription['activation-key'] || '' } type=\"password\"\n                          data-testid=\"subscription-activation\" isRequired\n                          id=\"subscription-activation\" aria-label=\"Subscription activation key\"\n                          onChange={ value => props.setSubscription(Object.assign(props.subscription, { 'activation-key': value })) } />\n                  </FormGroup>\n              </> }\n        </Form>\n    );\n};\n\nWizardStepRegistration.propTypes = {\n    setSubscription: PropTypes.func,\n    setSubscribeNow: PropTypes.func,\n    subscription: PropTypes.object,\n    subscribeNow: PropTypes.bool,\n    errors: PropTypes.object,\n};\n\nexport default WizardStepRegistration;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Alert, TextContent, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport './WizardStepReview.scss';\n\nconst WizardStepReview = (props) => {\n    const releaseOptions = {\n        'rhel-8': 'Red Hat Enterprise Linux (RHEL) 8.3',\n        'centos-8': 'CentOS Stream 8'\n    };\n    const uploadOptions = {\n        aws: 'Amazon Web Services'\n    };\n    return (\n        <>\n            { (Object.keys(props.uploadAWSErrors).length > 0 ||\n               Object.keys(props.subscriptionErrors).length > 0) &&\n              <Alert variant=\"danger\" className=\"pf-u-mb-xl\" isInline title=\"Required information is missing\" /> }\n            <Title headingLevel=\"h2\" size=\"xl\">Create image</Title>\n            <TextContent>\n                <small>\n                    Review the information and click Create image\n                    to create the image using the following criteria.\n                </small>\n                <h3>Image output</h3>\n                <dl data-testid='review-image-output'>\n                    <dt>\n                        Release\n                    </dt>\n                    <dd>\n                        { releaseOptions[props.release] }\n                    </dd>\n                    <dt>\n                        Target environment\n                    </dt>\n                    <dd>\n                        { props.uploadAWS && <>{ uploadOptions.aws }</> }\n                    </dd>\n                </dl>\n                { Object.entries(props.uploadAWSErrors).length > 0 && (\n                    <h3>Upload to AWS</h3>\n                )}\n                <dl>\n                    { Object.entries(props.uploadAWSErrors).map(([ key, error ]) => {\n                        return (<React.Fragment key={ key }>\n                            <dt>\n                                { error.label }\n                            </dt>\n                            <dd>\n                                <ExclamationCircleIcon className=\"error\" /> { error.value }\n                            </dd>\n                        </React.Fragment>);\n                    })}\n                </dl>\n                <h3>Registration</h3>\n                <dl>\n                    <dt>\n                        Subscription\n                    </dt>\n                    { !props.subscribeNow &&\n                      <dd>\n                          Register the system later\n                      </dd> }\n                    { props.subscribeNow &&\n                      <dd>\n                          Register the system on first boot\n                      </dd> }\n                    { Object.entries(props.subscriptionErrors).map(([ key, error ]) => {\n                        return (<React.Fragment key={ key }>\n                            <dt>\n                                { error.label }\n                            </dt>\n                            <dd>\n                                <ExclamationCircleIcon className=\"error\" /> { error.value }\n                            </dd>\n                        </React.Fragment>);\n                    })}\n                </dl>\n            </TextContent>\n        </>\n    );\n};\n\nWizardStepReview.propTypes = {\n    release: PropTypes.string,\n    uploadAWS: PropTypes.object,\n    subscription: PropTypes.object,\n    subscribeNow: PropTypes.bool,\n    uploadAWSErrors: PropTypes.object,\n    subscriptionErrors: PropTypes.object,\n};\n\nexport default WizardStepReview;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from '../redux';\n\nimport { Wizard } from '@patternfly/react-core';\n\nimport WizardStepImageOutput from '../../PresentationalComponents/CreateImageWizard/WizardStepImageOutput';\nimport WizardStepUploadAWS from '../../PresentationalComponents/CreateImageWizard/WizardStepUploadAWS';\nimport WizardStepRegistration from '../../PresentationalComponents/CreateImageWizard/WizardStepRegistration';\nimport WizardStepReview from '../../PresentationalComponents/CreateImageWizard/WizardStepReview';\n\nimport api from './../../api.js';\nimport './CreateImageWizard.scss';\n\nclass CreateImageWizard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.setRelease = this.setRelease.bind(this);\n        this.setUploadOptions = this.setUploadOptions.bind(this);\n        this.setSubscription = this.setSubscription.bind(this);\n        this.setSubscribeNow = this.setSubscribeNow.bind(this);\n        this.toggleUploadDestination = this.toggleUploadDestination.bind(this);\n        this.onStep = this.onStep.bind(this);\n        this.onSave = this.onSave.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.validate = this.validate.bind(this);\n        this.validateUploadAmazon = this.validateUploadAmazon.bind(this);\n        this.validateSubscription = this.validateSubscription.bind(this);\n\n        this.state = {\n            arch: 'x86_64',\n            imageType: 'qcow2',\n            release: 'rhel-8',\n            uploadAWS: {\n                type: 'aws',\n                options: {\n                    share_with_accounts: []\n                }\n            },\n            uploadAzure: {\n                type: 'azure',\n                options: {\n                    temp: ''\n                }\n            },\n            uploadGoogle: {\n                type: 'google',\n                options: {\n                    temp: ''\n                }\n            },\n            uploadDestinations: {\n                aws: false,\n                azure: false,\n                google: false\n            },\n            subscription: {\n                organization: null,\n                'activation-key': null,\n                'server-url': 'subscription.rhsm.redhat.com',\n                'base-url': 'https://cdn.redhat.com/',\n                insights: true\n            },\n            subscribeNow: true,\n            /* errors take form of $fieldId: error */\n            uploadAWSErrors: {},\n            uploadAzureErrors: {},\n            uploadGoogleErrors: {},\n            subscriptionErrors: {},\n        };\n    }\n\n    async componentDidMount() {\n        let user = await insights.chrome.auth.getUser();\n        this.setState({\n            subscription: {\n                organization: Number(user.identity.internal.org_id)\n            }\n        });\n    }\n\n    onStep(step) {\n        if (step.name === 'Review') {\n            this.validate();\n        }\n    }\n\n    validate() {\n        /* upload */\n        Object.keys(this.state.uploadDestinations).forEach(provider => {\n            switch (provider) {\n                case 'aws':\n                    this.validateUploadAmazon();\n                    break;\n                case 'azure':\n                    break;\n                case 'google':\n                    break;\n                default:\n                    this.setState({\n                        uploadAWSErrors: {},\n                        uploadAzureErrors: {},\n                        uploadGoogleErrors: {},\n                    });\n            }\n        });\n\n        /* subscription */\n        if (this.state.subscribeNow) {\n            this.validateSubscription();\n        } else {\n            this.setState({ subscriptionErrors: {}});\n        }\n    }\n\n    validateUploadAmazon() {\n        let uploadAWSErrors = {};\n        let share = this.state.uploadAWS.options.share_with_accounts;\n        if (share.length === 0 || share[0].length !== 12 || isNaN(share[0])) {\n            uploadAWSErrors['aws-account-id'] =\n                { label: 'AWS account ID', value: 'A 12-digit number is required' };\n        }\n\n        this.setState({ uploadAWSErrors });\n    }\n\n    validateSubscription() {\n        let subscriptionErrors = {};\n        if (!this.state.subscription['activation-key']) {\n            subscriptionErrors['subscription-activation'] =\n                { label: 'Activation key', value: 'A value is required' };\n        }\n\n        this.setState({ subscriptionErrors });\n    }\n\n    setRelease(release) {\n        this.setState({ release });\n    }\n\n    toggleUploadDestination(provider) {\n        this.setState(prevState => ({\n            ...prevState,\n            uploadDestinations: {\n                ...prevState.uploadDestinations,\n                [provider]: !prevState.uploadDestinations[provider]\n            }\n        }));\n    }\n\n    setUploadOptions(provider, uploadOptions) {\n        switch (provider) {\n            case 'aws':\n                this.setState({\n                    uploadAWS: {\n                        type: provider,\n                        options: uploadOptions\n                    }\n                });\n                break;\n            case 'azure':\n                this.setState({\n                    uploadAzure: {\n                        type: provider,\n                        options: uploadOptions\n                    }\n                });\n                break;\n            case 'google':\n                this.setState({\n                    uploadGoogle: {\n                        type: provider,\n                        options: uploadOptions\n                    }\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    setSubscribeNow(subscribeNow) {\n        this.setState({ subscribeNow });\n    }\n\n    setSubscription(subscription) {\n        this.setState({ subscription }, this.validate);\n    }\n\n    onSave () {\n        let requests = [];\n        Object.keys(this.state.uploadDestinations).forEach(provider => {\n            switch (provider) {\n                case 'aws': {\n                    let request = {\n                        distribution: this.state.release,\n                        image_requests: [\n                            {\n                                architecture: this.state.arch,\n                                image_type: 'ami',\n                                upload_requests: [ this.state.uploadAWS ],\n                            }],\n                        customizations: {\n                            subscription: this.state.subscription,\n                        },\n                    };\n                    requests.push(request);\n                    break;\n                }\n\n                case 'azure':\n                    break;\n                case 'google':\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const composeRequests = [];\n        requests.forEach(request => {\n            const composeRequest = api.composeImage(request).then(response => {\n                let compose = {};\n                compose[response.id] = {\n                    image_status: {\n                        status: 'pending',\n                    },\n                    distribution: request.distribution,\n                    architecture: request.image_requests[0].architecture,\n                    image_type: request.image_requests[0].image_type,\n                };\n                this.props.updateCompose(compose);\n            });\n            composeRequests.push(composeRequest);\n        });\n        Promise.all(composeRequests).then(() => this.props.history.push('/landing'));\n    }\n\n    onClose () {\n        this.props.history.push('/landing');\n    }\n\n    render() {\n        const StepImageOutput = {\n            name: 'Image output',\n            component: <WizardStepImageOutput\n                value={ this.state.release }\n                setRelease={ this.setRelease }\n                toggleUploadDestination={ this.toggleUploadDestination }\n                uploadDestinations={ this.state.uploadDestinations } />\n        };\n\n        const StepUploadAWS = {\n            name: 'Amazon Web Services',\n            component: <WizardStepUploadAWS\n                uploadAWS={ this.state.uploadAWS }\n                setUploadOptions={ this.setUploadOptions }\n                errors={ this.state.uploadAWSErrors } />\n        };\n\n        const StepUploadAzure = {\n            name: 'Microsoft Azure'\n        };\n\n        const StepUploadGoogle = {\n            name: 'Google Cloud Platform'\n        };\n\n        const uploadDestinationSteps = [];\n        if (this.state.uploadDestinations.aws) {\n            uploadDestinationSteps.push(StepUploadAWS);\n        }\n\n        if (this.state.uploadDestinations.azure) {\n            uploadDestinationSteps.push(StepUploadAzure);\n        }\n\n        if (this.state.uploadDestinations.google) {\n            uploadDestinationSteps.push(StepUploadGoogle);\n        }\n\n        const StepTargetEnv = {\n            name: 'Target environment',\n            steps: uploadDestinationSteps\n        };\n\n        const steps = [\n            StepImageOutput,\n            ...(StepTargetEnv.steps.length > 0 ? [ StepTargetEnv ] : []),\n            {\n                name: 'Registration',\n                component: <WizardStepRegistration\n                    subscription={ this.state.subscription }\n                    subscribeNow={ this.state.subscribeNow }\n                    setSubscription={ this.setSubscription }\n                    setSubscribeNow={ this.setSubscribeNow }\n                    errors={ this.state.subscriptionErrors } /> },\n            {\n                name: 'Review',\n                component: <WizardStepReview\n                    release={ this.state.release }\n                    uploadAWS={ this.state.uploadAWS }\n                    subscription={ this.state.subscription }\n                    subscribeNow={ this.state.subscribeNow }\n                    uploadAWSErrors={ this.state.uploadAWSErrors }\n                    subscriptionErrors={ this.state.subscriptionErrors } />,\n                nextButtonText: 'Create',\n            }\n        ];\n        return (\n            <React.Fragment>\n                <Wizard\n                    title={ 'Create image' }\n                    onNext={ this.onStep }\n                    onGoToStep={ this.onStep }\n                    steps={ steps }\n                    onClose={ this.onClose }\n                    onSave={ this.onSave }\n                    isOpen />\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateCompose: (compose) => dispatch(actions.updateCompose(compose)),\n    };\n}\n\nCreateImageWizard.propTypes = {\n    updateCompose: PropTypes.func,\n    history: PropTypes.object,\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(CreateImageWizard));\n"],"sourceRoot":""}