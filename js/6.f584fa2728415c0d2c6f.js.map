{"version":3,"sources":["webpack:///./src/SmartComponents/CreateImageWizard/WizardStepImageOutput.scss","webpack:///./src/SmartComponents/CreateImageWizard/WizardStepUploadAzure.scss","webpack:///./src/SmartComponents/CreateImageWizard/WizardStepReview.scss","webpack:///./src/SmartComponents/CreateImageWizard/ImageWizardFooter.scss","webpack:///./src/SmartComponents/CreateImageWizard/CreateImageWizard.scss","webpack:///./src/SmartComponents/CreateImageWizard/WizardStepImageOutput.scss?e2c0","webpack:///./src/SmartComponents/CreateImageWizard/WizardStepUploadAzure.scss?6888","webpack:///./src/SmartComponents/CreateImageWizard/WizardStepReview.scss?2c48","webpack:///./src/SmartComponents/CreateImageWizard/ImageWizardFooter.scss?d25c","webpack:///./src/SmartComponents/CreateImageWizard/CreateImageWizard.scss?837f","webpack:///./src/SmartComponents/CreateImageWizard/WizardStepImageOutput.js","webpack:///./src/SmartComponents/CreateImageWizard/WizardStepUploadAWS.js","webpack:///./src/SmartComponents/CreateImageWizard/WizardStepUploadAzure.js","webpack:///./src/SmartComponents/CreateImageWizard/WizardStepPackages.js","webpack:///./src/SmartComponents/CreateImageWizard/WizardStepUploadGoogle.js","webpack:///./src/SmartComponents/CreateImageWizard/WizardStepRegistration.js","webpack:///./src/SmartComponents/CreateImageWizard/WizardStepReview.js","webpack:///./src/SmartComponents/CreateImageWizard/ImageWizardFooter.js","webpack:///./src/SmartComponents/CreateImageWizard/CreateImageWizard.js"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","WizardStepImageOutput","props","setDistro","bind","toggleUploadDestination","distro","this","setRelease","arch","provider","setUploadDestinations","uploadDestinations","Form","Title","headingLevel","size","FormGroup","isRequired","label","fieldId","FormSelect","value","release","onChange","aria-label","id","data-testid","map","option","FormSelectOption","className","Tile","title","icon","src","onClick","isSelected","aws","isStacked","isDisplayLarge","azure","google","Component","propTypes","PropTypes","func","object","connect","state","pendingCompose","dispatch","actions","d","WizardStepUploadAWS","helperTextInvalid","errors","validated","TextInput","uploadAWS","shareWithAccounts","type","setUploadAWS","u","WizardStepUploadAzure","TextContent","Text","href","target","rel","uploadAzure","tenantId","setUploadAzure","Object","assign","subscriptionId","resourceGroup","WizardStepPackages","setPackagesSearchName","handlePackagesSearch","handlePackagesFilter","packageListChange","mapPackagesToComponent","packagesAvailableComponents","packagesSelectedComponents","packagesFilteredComponents","packagesSelectedNames","packagesSearchName","setState","packages","pack","name","summary","component","children","api","getPackages","then","response","packageComponents","data","filter","filteredPackages","mapComponentToPackageName","includes","newAvailablePackages","newChosenPackages","chosenNames","setSelectedPackages","availableOptionsActions","Button","DualListSelector","isSearchable","availableOptions","chosenOptions","addSelected","removeSelected","addAll","removeAll","onAvailableOptionsSearchInputChanged","onChosenOptionsSearchInputChanged","filterOption","selectedPackages","array","p","accountTypePopover","Popover","hasAutoWidth","maxWidth","headerContent","bodyContent","TextList","TextListItem","aria-describedby","WizardStepUploadGoogle","labelIcon","Radio","setUploadGoogle","accountType","user","isChecked","uploadGoogle","serviceAccount","group","domain","WizardStepRegistration","insights","chrome","auth","getUser","setSubscription","subscription","organization","identity","internal","org_id","subscribeNow","setSubscribeNow","isDisabled","isValidSubscription","activationKey","bool","s","WizardStepReview","awsReview","TextListVariants","dl","TextListItemVariants","dt","uploadAWSErrors","dd","googleReview","subscriptionReview","repeat","length","keys","Alert","variant","isInline","TextVariants","small","h3","string","ImageWizardFooter","WizardFooter","WizardContext","activeStep","onNext","onBack","onClose","nextButtonText","isSaveInProgress","nextButtonIsDisabled","isValidUploadDestination","ButtonVariant","primary","secondary","link","error","CreateImageWizard","onStep","onSave","validate","validateUploadAmazon","uploadAzureErrors","uploadGoogleErrors","onSaveError","Number","step","forEach","validateUploadAzure","share","isNaN","tenant_id","resource_group","customizations","requests","request","distribution","image_requests","architecture","image_type","upload_request","share_with_accounts","subscription_id","composeRequests","composeRequest","composeImage","compose","image_status","status","upload_type","updateCompose","Promise","all","addNotification","history","err","console","log","StepImageOutput","StepUploadAWS","StepUploadAzure","StepUploadGoogle","uploadDestinationSteps","StepTargetEnv","steps","Fragment","Wizard","onGoToStep","footer","isOpen","not","withRouter"],"mappings":"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","file":"js/6.f584fa2728415c0d2c6f.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".tiles{display:flex}.tile{flex:1 0 0px}.pf-c-tile:focus{--pf-c-tile__title--Color: var(--pf-c-tile__title--Color);--pf-c-tile__icon--Color: var(---pf-global--Color--100);--pf-c-tile--before--BorderWidth: var(--pf-global--BorderWidth--sm);--pf-c-tile--before--BorderColor: var(--pf-global--BorderColor--100)}.pf-c-tile.pf-m-selected:focus{--pf-c-tile__title--Color: var(--pf-c-tile--focus__title--Color);--pf-c-tile__icon--Color: var(--pf-c-tile--focus__icon--Color);--pf-c-tile--before--BorderWidth: var(--pf-c-tile--focus--before--BorderWidth);--pf-c-tile--before--BorderColor: var(--pf-c-tile--focus--before--BorderColor)}.provider-icon{width:1em;height:1em}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".textcontent-azure{margin-bottom:var(--pf-global--spacer--lg)}.textcontent-azure h3,.textcontent-azure h4{margin-top:var(--pf-global--spacer--sm);margin-bottom:var(--pf-global--spacer--xs)}.textcontent-azure p{margin-bottom:0}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".error{color:var(--pf-global--danger-color--100)}.textcontent-review h3{margin-top:var(--pf-global--spacer--xl)}@media screen and (min-width: 576px){.textcontent-review dl{grid-template:1fr / 25% 1fr;grid-gap:var(--pf-global--spacer--sm)}}#destination-header{font-size:18px;margin-bottom:var(--pf-global--spacer--sm)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".footer-error{flex-basis:100%;color:var(--pf-global--palette--red-100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-wizard__nav-list{padding-right:0px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepImageOutput.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepImageOutput.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepImageOutput.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepUploadAzure.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepUploadAzure.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepUploadAzure.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepReview.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepReview.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepReview.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./ImageWizardFooter.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./ImageWizardFooter.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./ImageWizardFooter.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from '../../store/actions';\n\nimport { Form, FormGroup, FormSelect, FormSelectOption, Tile, Title } from '@patternfly/react-core';\n\nimport './WizardStepImageOutput.scss';\n\nclass WizardStepImageOutput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.setDistro = this.setDistro.bind(this);\n        this.toggleUploadDestination = this.toggleUploadDestination.bind(this);\n    }\n\n    setDistro(distro) {\n        this.props.setRelease({ arch: 'x86_64', distro });\n    }\n\n    toggleUploadDestination(provider) {\n        this.props.setUploadDestinations({\n            ...this.props.uploadDestinations,\n            [provider]: !this.props.uploadDestinations[provider]\n        });\n    }\n\n    render() {\n        const releaseOptions = [\n            { value: 'rhel-8', label: 'Red Hat Enterprise Linux (RHEL) 8.3' },\n            { value: 'centos-8', label: 'CentOS Stream 8' },\n        ];\n\n        return (\n            <>\n                <Form>\n                    <Title headingLevel=\"h2\" size=\"xl\">Image output</Title>\n                    <FormGroup isRequired label=\"Release\" fieldId=\"release-select\">\n                        <FormSelect value={ this.props.release.distro } onChange={ value => this.setDistro(value) } isRequired\n                            aria-label=\"Select release input\" id=\"release-select\" data-testid=\"release-select\">\n                            { releaseOptions.map(option => <FormSelectOption key={ option.value } value={ option.value } label={ option.label } />) }\n                        </FormSelect>\n                    </FormGroup>\n                    <FormGroup isRequired label=\"Select target environment\" data-testid=\"target-select\">\n                        <div className=\"tiles\">\n                            <Tile\n                                className=\"tile pf-u-mr-sm\"\n                                data-testid=\"upload-aws\"\n                                title=\"Amazon Web Services\"\n                                icon={ <img\n                                    className='provider-icon'\n                                    src={ '/apps/frontend-assets/partners-icons/aws.svg' } /> }\n                                onClick={ () => this.toggleUploadDestination('aws') }\n                                isSelected={ this.props.uploadDestinations.aws }\n                                isStacked\n                                isDisplayLarge />\n                            <Tile\n                                className=\"tile pf-u-mr-sm\"\n                                data-testid=\"upload-azure\"\n                                title=\"Microsoft Azure\"\n                                icon={ <img\n                                    className='provider-icon'\n                                    src={ '/apps/frontend-assets/partners-icons/microsoft-azure-short.svg' } /> }\n                                onClick={ () => this.toggleUploadDestination('azure') }\n                                isSelected={ this.props.uploadDestinations.azure }\n                                isStacked\n                                isDisplayLarge />\n                            <Tile\n                                className=\"tile\"\n                                data-testid=\"upload-google\"\n                                title=\"Google Cloud Platform\"\n                                icon={ <img\n                                    className='provider-icon'\n                                    src={ '/apps/frontend-assets/partners-icons/google-cloud-short.svg' } /> }\n                                onClick={ () => this.toggleUploadDestination('google') }\n                                isSelected={ this.props.uploadDestinations.google }\n                                isStacked\n                                isDisplayLarge />\n                        </div>\n                    </FormGroup>\n                </Form>\n            </>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        release: state.pendingCompose.release,\n        uploadDestinations: state.pendingCompose.uploadDestinations,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setRelease: i => dispatch(actions.setRelease(i)),\n        setUploadDestinations: d => dispatch(actions.setUploadDestinations(d)),\n    };\n}\n\nWizardStepImageOutput.propTypes = {\n    setRelease: PropTypes.func,\n    setUploadDestinations: PropTypes.func,\n    release: PropTypes.object,\n    uploadDestinations: PropTypes.object,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WizardStepImageOutput);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from '../../store/actions';\n\nimport { Form, FormGroup, TextInput, Title } from '@patternfly/react-core';\n\nclass WizardStepUploadAWS extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Form>\n                <Title headingLevel=\"h2\" size=\"xl\">Target Environment - Upload to AWS</Title>\n                <p>\n            Your image will be uploaded to a temporary account on Amazon Web Services. <br />\n            The image will be shared with the account you provide below. <br />\n            Within the next 14 days you will need to copy the shared image to your own account.\n            After 14 days it will be unavailable and will have to be regenerated.\n                </p>\n                <FormGroup isRequired label=\"AWS account ID\" fieldId=\"aws-account-id\"\n                    helperTextInvalid={ (this.props.errors['aws-account-id'] && this.props.errors['aws-account-id'].value) || '' }\n                    validated={ (this.props.errors['aws-account-id'] && 'error') || 'default' }>\n                    <TextInput value={ this.props.uploadAWS.shareWithAccounts || '' }\n                        type=\"text\" aria-label=\"AWS account ID\" id=\"aws-account-id\"\n                        data-testid=\"aws-account-id\" isRequired\n                        onChange={ value => this.props.setUploadAWS({ shareWithAccounts: [ value ]}) } />\n                </FormGroup>\n            </Form>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        uploadAWS: state.pendingCompose.uploadAWS,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setUploadAWS: u => dispatch(actions.setUploadAWS(u)),\n    };\n}\n\nWizardStepUploadAWS.propTypes = {\n    setUploadAWS: PropTypes.func,\n    uploadAWS: PropTypes.object,\n    errors: PropTypes.object,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WizardStepUploadAWS);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from '../../store/actions';\n\nimport { Form, FormGroup, Text, TextContent, TextInput, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport './WizardStepUploadAzure.scss';\n\nclass WizardStepUploadAzure extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <>\n                <TextContent className=\"textcontent-azure\">\n                    <Title headingLevel=\"h2\">Target Environment - Upload to Azure</Title>\n                    <Text>\n            Image Builder will send an image to an authorized Azure account.\n                    </Text>\n                    <Title headingLevel=\"h3\">OAuth permissions</Title>\n                    <Text>\n            In order to use Image Builder to push images to Azure, Image Builder must\n            be configured as an authorized application, and given the role of &quot;Contributor&quot; to at least one resource group.<br />\n            Image Builder must be authorized by an account owner.<br />\n                        <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow\">\n                            <small>Learn more</small></a>\n                    </Text>\n\n                    <a href=\"https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=b94bb246-b02c-4985-9c22-d44e66f657f4\n&scope=openid&response_type=code&response_mode=form_post\n&redirect_uri=https%3A%2F%2Flogin.microsoftonline.com%2Fcommon%2Foauth2%2Fnativeclient\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Authorize Image Builder on Azure <ExternalLinkAltIcon />\n                    </a>\n                </TextContent>\n\n                <Title headingLevel=\"h3\">Destination</Title>\n                <Text>\n            Your image will be uploaded to the resource group in the subscription you specify.\n                </Text>\n                <Form>\n                    <FormGroup isRequired label=\"Tenant ID\" fieldId=\"azure-tenant-id\"\n                        helperTextInvalid={ (this.props.errors['azure-tenant-id'] && this.props.errors['azure-tenant-id'].value) || '' }\n                        validated={ (this.props.errors['azure-tenant-id'] && 'error') || 'default' }>\n                        <TextInput value={ this.props.uploadAzure.tenantId || '' }\n                            type=\"text\" aria-label=\"Azure tenant-id\" id=\"azure-tenant-id\"\n                            data-testid=\"azure-tenant-id\" isRequired\n                            onChange={ value =>\n                                this.props.setUploadAzure(Object.assign(this.props.uploadAzure, { tenantId: value })) } />\n                    </FormGroup>\n                    <FormGroup isRequired label=\"Subscription ID\" fieldId=\"azure-subscription-id\"\n                        helperTextInvalid={ (this.props.errors['azure-subscription-id'] &&\n                             this.props.errors['azure-subscription-id'].value) || '' }\n                        validated={ (this.props.errors['azure-subscription-id'] && 'error') || 'default' }>\n                        <TextInput value={ this.props.uploadAzure.subscriptionId || '' }\n                            type=\"text\" aria-label=\"Azure subscription-id\" id=\"azure-subscription-id\"\n                            data-testid=\"azure-subscription-id\" isRequired\n                            onChange={ value =>\n                                this.props.setUploadAzure(Object.assign(this.props.uploadAzure, { subscriptionId: value })) } />\n                    </FormGroup>\n                    <FormGroup isRequired label=\"Resource group\" fieldId=\"azure-resource-group\"\n                        helperTextInvalid={ (this.props.errors['azure-resource-group'] &&\n                             this.props.errors['azure-resource-group'].value) || '' }\n                        validated={ (this.props.errors['azure-resource-group'] && 'error') || 'default' }>\n                        <TextInput value={ this.props.uploadAzure.resourceGroup || '' }\n                            type=\"text\" aria-label=\"Azure resource group\" id=\"azure-resource-group\"\n                            data-testid=\"azure-resource-group\" isRequired\n                            onChange={ value =>\n                                this.props.setUploadAzure(Object.assign(this.props.uploadAzure, { resourceGroup: value })) } />\n                    </FormGroup>\n                </Form>\n            </>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        uploadAzure: state.pendingCompose.uploadAzure,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setUploadAzure: u => dispatch(actions.setUploadAzure(u)),\n    };\n}\n\nWizardStepUploadAzure.propTypes = {\n    setUploadAzure: PropTypes.func,\n    uploadAzure: PropTypes.object,\n    errors: PropTypes.object,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WizardStepUploadAzure);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, DualListSelector, Text, TextContent, Title } from '@patternfly/react-core';\n\nimport { actions } from '../../store/actions';\nimport api from '../../api.js';\n\nclass WizardStepPackages extends Component {\n    constructor(props) {\n        super(props);\n\n        this.setPackagesSearchName = this.setPackagesSearchName.bind(this);\n        this.handlePackagesSearch = this.handlePackagesSearch.bind(this);\n        this.handlePackagesFilter = this.handlePackagesFilter.bind(this);\n        this.packageListChange = this.packageListChange.bind(this);\n        this.mapPackagesToComponent = this.mapPackagesToComponent.bind(this);\n\n        this.state = {\n            packagesAvailableComponents: [],\n            packagesSelectedComponents: [],\n            packagesFilteredComponents: [],\n            packagesSelectedNames: [],\n            packagesSearchName: '',\n        };\n    }\n\n    setPackagesSearchName(packagesSearchName) {\n        this.setState({ packagesSearchName });\n    }\n\n    mapPackagesToComponent(packages) {\n        return packages.map((pack) =>\n            <TextContent key={ pack }>\n                <span className=\"pf-c-dual-list-selector__item-text\">{ pack.name }</span>\n                <small>{ pack.summary }</small>\n            </TextContent>\n        );\n    }\n\n    // this digs into the component properties to extract the package name\n    mapComponentToPackageName(component) {\n        return component.props.children[0].props.children;\n    }\n\n    handlePackagesSearch() {\n        api.getPackages(this.props.release.distro, this.props.release.arch, this.state.packagesSearchName).then(response => {\n            const packageComponents = this.mapPackagesToComponent(response.data);\n            this.setState({\n                packagesAvailableComponents: packageComponents\n            });\n        });\n    };\n\n    handlePackagesFilter(filter) {\n        const filteredPackages = this.state.packagesSelectedComponents.filter(component => {\n            const name = this.mapComponentToPackageName(component);\n            return name.includes(filter);\n        });\n        this.setState({\n            packagesFilteredComponents: filteredPackages\n        });\n    }\n\n    packageListChange(newAvailablePackages, newChosenPackages) {\n        const chosenNames = newChosenPackages.map(component => this.mapComponentToPackageName(component));\n        this.setState({\n            packagesAvailableComponents: newAvailablePackages,\n            packagesSelectedComponents: newChosenPackages,\n            packagesFilteredComponents: newChosenPackages,\n        });\n\n        this.props.setSelectedPackages(chosenNames);\n    }\n\n    render() {\n        const availableOptionsActions = [\n            <Button\n                aria-label=\"Search button for available packages\"\n                key=\"availableSearchButton\"\n                onClick={ this.handlePackagesSearch }>\n                Search\n            </Button>\n        ];\n        return (\n            <>\n                <TextContent>\n                    <Title headingLevel=\"h2\" size=\"xl\">Additional packages</Title>\n                    <Text>Optionally add additional packages to your <strong>{this.props.release.distro}</strong> image</Text>\n                </TextContent>\n                <DualListSelector\n                    className=\"pf-u-mt-sm\"\n                    isSearchable\n                    availableOptionsActions={ availableOptionsActions }\n                    availableOptions={ this.state.packagesAvailableComponents }\n                    chosenOptions={ this.state.packagesFilteredComponents }\n                    addSelected={ this.packageListChange }\n                    removeSelected={ this.packageListChange }\n                    addAll={ this.packageListChange }\n                    removeAll= { this.packageListChange }\n                    onAvailableOptionsSearchInputChanged={ this.setPackagesSearchName }\n                    onChosenOptionsSearchInputChanged={ this.handlePackagesFilter }\n                    filterOption={ () => true }\n                    id=\"basicSelectorWithSearch\" />\n            </>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        release: state.pendingCompose.release,\n        selectedPackages: state.pendingCompose.selectedPackages,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setSelectedPackages: (p) => dispatch(actions.setSelectedPackages(p)),\n    };\n}\n\nWizardStepPackages.propTypes = {\n    release: PropTypes.object,\n    selectedPackages: PropTypes.array,\n    setSelectedPackages: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WizardStepPackages);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from '../../store/actions';\n\nimport { Form, FormGroup, TextList, TextListItem, Popover, Radio, TextContent, Text, TextInput, Title } from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\n\nconst accountTypePopover = (\n    <Popover\n        hasAutoWidth\n        maxWidth='35rem'\n        headerContent={ 'Valid account types' }\n        bodyContent={ <TextContent>\n            <Text>The following account types can have an image shared with them:</Text>\n            <TextList>\n                <TextListItem>\n                    <strong>Google account:</strong> A Google account represents a developer, an administrator,\n                        or any other person who interacts with Google Cloud. e.g., <em>`alice@gmail.com`</em>.\n                </TextListItem>\n                <TextListItem>\n                    <strong>Service account:</strong> A service account is an account for an application instead\n                        of an individual end user. e.g., <em>`myapp@appspot.gserviceaccount.com`</em>.\n                </TextListItem>\n                <TextListItem>\n                    <strong>Google group:</strong> A Google group is a named collection of Google accounts and\n                        and service accounts. e.g., <em>`admins@example.com`</em>.\n                </TextListItem>\n                <TextListItem>\n                    <strong>Google workspace domain/Cloud identity domain:</strong> A Google workspace or cloud identity\n                        domain represents a virtual group of all the Google accounts in an organization. These domains\n                        represent your organization&apos;s internet domain name. e.g., <em>`mycompany.com`</em>.\n                </TextListItem>\n            </TextList>\n        </TextContent> }>\n        <button\n            type=\"button\"\n            aria-label=\"Account info\"\n            aria-describedby=\"google-account-type\"\n            className=\"pf-c-form__group-label-help\">\n            <HelpIcon />\n        </button>\n    </Popover>\n);\n\nclass WizardStepUploadGoogle extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Form>\n                <Title headingLevel=\"h2\" size=\"xl\">Target Environment - Google Cloud Platform</Title>\n                <p>\n            Your image will be uploaded to an account on Google Cloud Platform. <br />\n            The image will be shared with the email you provide below. <br />\n            Within the next 14 days you will need to copy the shared image to your own account.\n            After 14 days it will be unavailable and will have to be regenerated.\n                </p>\n                <FormGroup isRequired label=\"Type\" labelIcon={ accountTypePopover } fieldId=\"google-account-type\">\n                    <Radio\n                        onChange={ () => this.props.setUploadGoogle({ accountType: 'googleAccount', shareWithAccounts: [{ user: null }]}) }\n                        isChecked={ this.props.uploadGoogle.accountType === 'googleAccount' }\n                        label=\"Google account\"\n                        id=\"radio-google-account\"\n                        value=\"googleAccount\" />\n                    <Radio\n                        onChange={ () => this.props.setUploadGoogle({ accountType: 'serviceAccount', shareWithAccounts: [{ serviceAccount: null }]}) }\n                        isChecked={ this.props.uploadGoogle.accountType === 'serviceAccount' }\n                        label=\"Service account\"\n                        id=\"radio-service-account\"\n                        value=\"serviceAccount\" />\n                    <Radio\n                        onChange={ () => this.props.setUploadGoogle({ accountType: 'googleGroup', shareWithAccounts: [{ group: null }]}) }\n                        isChecked={ this.props.uploadGoogle.accountType === 'googleGroup' }\n                        label=\"Google group\"\n                        id=\"radio-google-group\"\n                        value=\"googleGroup\" />\n                    <Radio\n                        onChange={ () => this.props.setUploadGoogle({ accountType: 'domain', shareWithAccounts: [{ domain: null }]}) }\n                        isChecked={ this.props.uploadGoogle.accountType === 'domain' }\n                        label=\"Google Workspace Domain or Cloud Identity Domain\"\n                        id=\"radio-domain\"\n                        value=\"domain\" />\n                </FormGroup>\n                {this.props.uploadGoogle.accountType === 'googleAccount' && (\n                    <FormGroup isRequired label=\"Email address\" fieldId=\"user\">\n                        <TextInput\n                            value={ this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].user || '' :\n                                '' }\n                            type=\"text\" aria-label=\"Google email address\" id=\"input-google-user\"\n                            data-testid=\"input-google-user\" isRequired\n                            onChange={ value => this.props.setUploadGoogle(\n                                { accountType: 'googleAccount', shareWithAccounts: [{ user: value }]}\n                            ) } />\n                    </FormGroup>\n                )}\n                {this.props.uploadGoogle.accountType === 'serviceAccount' && (\n                    <FormGroup isRequired label=\"Email address\" fieldId=\"service-account\">\n                        <TextInput\n                            value={ this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].serviceAccount || '' :\n                                '' }\n                            type=\"text\" aria-label=\"Google email address\" id=\"input-google-service-account\"\n                            data-testid=\"input-google-service-account\" isRequired\n                            onChange={ value => this.props.setUploadGoogle(\n                                { accountType: 'serviceAccount', shareWithAccounts: [{ serviceAccount: value }]}\n                            ) } />\n                    </FormGroup>\n                )}\n                {this.props.uploadGoogle.accountType === 'googleGroup' && (\n                    <FormGroup isRequired label=\"Email address\" fieldId=\"group\">\n                        <TextInput\n                            value={ this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].group || '' :\n                                '' }\n                            type=\"text\" aria-label=\"Google email address\" id=\"input-google-group\"\n                            data-testid=\"input-google-group\" isRequired\n                            onChange={ value => this.props.setUploadGoogle(\n                                { accountType: 'googleGroup', shareWithAccounts: [{ group: value }]}\n                            ) } />\n                    </FormGroup>\n                )}\n                {this.props.uploadGoogle.accountType === 'domain' && (\n                    <FormGroup isRequired label=\"Domain\" fieldId=\"domain\">\n                        <TextInput\n                            value={ this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].domain || '' :\n                                '' }\n                            type=\"text\" aria-label=\"Google domain\" id=\"input-google-domain\"\n                            data-testid=\"input-google-domain\" isRequired\n                            onChange={ value => this.props.setUploadGoogle(\n                                { accountType: 'domain', shareWithAccounts: [{ domain: value }]}\n                            ) } />\n                    </FormGroup>\n                )}\n            </Form>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        uploadGoogle: state.pendingCompose.uploadGoogle,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setUploadGoogle: u => dispatch(actions.setUploadGoogle(u)),\n    };\n}\n\nWizardStepUploadGoogle.propTypes = {\n    setUploadGoogle: PropTypes.func,\n    uploadGoogle: PropTypes.object,\n    errors: PropTypes.object,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WizardStepUploadGoogle);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Form, FormGroup, TextInput, Radio, Title } from '@patternfly/react-core';\n\nimport { actions } from '../../store/actions';\n\nclass WizardStepRegistration extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    async componentDidMount() {\n        let user = await insights.chrome.auth.getUser();\n        this.props.setSubscription(Object.assign(this.props.subscription, { organization: user.identity.internal.org_id }));\n    }\n\n    render() {\n        return (\n            <Form>\n                <Title headingLevel=\"h2\" size=\"xl\">Registration</Title>\n                <FormGroup isRequired label=\"Register the system\">\n                    <Radio name=\"subscribe-now-radio\" isChecked={ this.props.subscribeNow } id=\"subscribe-now-radio\"\n                        label=\"Embed an activation key and register systems on first boot\"\n                        onChange={ () => this.props.setSubscribeNow(true) }\n                        data-testid=\"register-now-radio-button\" />\n                    <Radio name=\"subscribe-later-radio\" isChecked={ !this.props.subscribeNow }\n                        label=\"Register the system later\" id=\"subscribe-later-radio\"\n                        onChange={ () => this.props.setSubscribeNow(false) }\n                        data-testid=\"register-later-radio-button\" />\n                </FormGroup>\n                { this.props.subscribeNow &&\n                <>\n                    <FormGroup label=\"Organization ID\" fieldId=\"subscription-organization\">\n                        <TextInput isDisabled value={ this.props.subscription.organization || '' } type=\"text\"\n                            id=\"subscription-organization\" aria-label=\"Subscription organization ID\"\n                            data-testid=\"organization-id\" />\n                    </FormGroup>\n                    <FormGroup isRequired label=\"Activation key\" fieldId=\"subscription-activation\"\n                        helperTextInvalid={ 'A value is required' }\n                        validated={ !this.props.isValidSubscription && this.props.subscription.activationKey !== null ? 'error' : 'default' }>\n                        <TextInput\n                            value={ this.props.subscription.activationKey || '' }\n                            type=\"password\"\n                            data-testid=\"subscription-activation\"\n                            id=\"subscription-activation\"\n                            aria-label=\"Subscription activation key\"\n                            onChange={ activationKey => this.props.setSubscription(Object.assign(this.props.subscription, { activationKey })) }\n                            validated={ !this.props.isValidSubscription && this.props.subscription.activationKey !== null ? 'error' : 'default' }\n                            isRequired />\n                    </FormGroup>\n                </> }\n            </Form>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        subscription: state.pendingCompose.subscription,\n        subscribeNow: state.pendingCompose.subscribeNow,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setSubscription: s => dispatch(actions.setSubscription(s)),\n        setSubscribeNow: s => dispatch(actions.setSubscribeNow(s)),\n    };\n}\n\nWizardStepRegistration.propTypes = {\n    setSubscription: PropTypes.func,\n    setSubscribeNow: PropTypes.func,\n    subscription: PropTypes.object,\n    subscribeNow: PropTypes.bool,\n    isValidSubscription: PropTypes.bool,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WizardStepRegistration);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n    Alert,\n    Text, TextVariants, TextContent, TextList, TextListVariants, TextListItem, TextListItemVariants,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport './WizardStepReview.scss';\n\nclass WizardStepReview extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const releaseLabels = {\n            'rhel-8': 'Red Hat Enterprise Linux (RHEL) 8.3',\n            'centos-8': 'CentOS Stream 8'\n        };\n\n        const awsReview = (\n            <>\n                <Text id=\"destination-header\">Amazon Web Services</Text>\n                <TextList component={ TextListVariants.dl } data-testid='review-image-upload-aws'>\n                    <TextListItem component={ TextListItemVariants.dt }>Account ID</TextListItem>\n                    {this.props.uploadAWSErrors['aws-account-id'] ? (\n                        <TextListItem component={ TextListItemVariants.dd }>\n                            <ExclamationCircleIcon className=\"error\" /> { this.props.uploadAWSErrors['aws-account-id'].value }\n                        </TextListItem>\n                    ) : (\n                        <TextListItem component={ TextListItemVariants.dd }>{this.props.uploadAWS.shareWithAccounts[0]}</TextListItem>\n                    )}\n                </TextList>\n            </>\n        );\n\n        const googleReview = (\n            <>\n                <Text id=\"destination-header\">Google Cloud Platform</Text>\n                <TextList component={ TextListVariants.dl } data-testid='review-image-upload-google'>\n                    {this.props.uploadGoogle.accountType === 'googleAccount' && (\n                        <>\n                            <TextListItem component={ TextListItemVariants.dt }>Google account</TextListItem>\n                            <TextListItem component={ TextListItemVariants.dd }>{this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].user || '' :\n                                ''}\n                            </TextListItem>\n                        </>\n                    )}\n                    {this.props.uploadGoogle.accountType === 'serviceAccount' && (\n                        <>\n                            <TextListItem component={ TextListItemVariants.dt }>Service account</TextListItem>\n                            <TextListItem component={ TextListItemVariants.dd }>{this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].serviceAccount || '' :\n                                ''}\n                            </TextListItem>\n                        </>\n                    )}\n                    {this.props.uploadGoogle.accountType === 'googleGroup' && (\n                        <>\n                            <TextListItem component={ TextListItemVariants.dt }>Google group</TextListItem>\n                            <TextListItem component={ TextListItemVariants.dd }>{this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].group || '' :\n                                ''}\n                            </TextListItem>\n                        </>\n                    )}\n                    {this.props.uploadGoogle.accountType === 'domain' && (\n                        <>\n                            <TextListItem component={ TextListItemVariants.dt }>Domain</TextListItem>\n                            <TextListItem component={ TextListItemVariants.dd }>{this.props.uploadGoogle.shareWithAccounts[0] ?\n                                this.props.uploadGoogle.shareWithAccounts[0].domain || '' :\n                                ''}\n                            </TextListItem>\n                        </>\n                    )}\n                </TextList>\n            </>\n        );\n\n        let subscriptionReview = <TextListItem component={ TextListItemVariants.dd }>Register the system later</TextListItem>;\n        if (this.props.subscribeNow) {\n            subscriptionReview = (<>\n                <TextListItem component={ TextListItemVariants.dd }>Register the system on first boot</TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Activation key</TextListItem>\n                { !this.props.isValidSubscription || !this.props.subscription.activationKey ? (\n                    <TextListItem component={ TextListItemVariants.dd }>\n                        <ExclamationCircleIcon className=\"error\" /> { 'A value is required' }\n                    </TextListItem>\n                ) : (\n                    <TextListItem component={ TextListItemVariants.dd } type=\"password\">\n                        {'*'.repeat(this.props.subscription.activationKey.length)}\n                    </TextListItem>\n                )}\n            </>);\n        }\n\n        return (\n            <>\n                { (Object.keys(this.props.uploadAWSErrors).length > 0 ||\n               !this.props.isValidSubscription) &&\n              <Alert variant=\"danger\" className=\"pf-u-mb-xl\" isInline title=\"Required information is missing\" /> }\n                <Title headingLevel=\"h2\" size=\"xl\">Review</Title>\n                <TextContent>\n                    <Text component={ TextVariants.small }>\n                    Review the information and click Create image\n                    to create the image using the following criteria.\n                    </Text>\n                    <Text component={ TextVariants.h3 }>Image output</Text>\n                    <TextList component={ TextListVariants.dl } data-testid='review-image-output'>\n                        <TextListItem component={ TextListItemVariants.dt }>Release</TextListItem>\n                        <TextListItem component={ TextListItemVariants.dd }>{releaseLabels[this.props.release]}</TextListItem>\n                    </TextList>\n                    <Text component={ TextVariants.h3 }>Target environment</Text>\n                    {this.props.uploadDestinations.aws && awsReview }\n                    {this.props.uploadDestinations.google && googleReview }\n                    <Text component={ TextVariants.h3 }>Registration</Text>\n                    <TextList component={ TextListVariants.dl } data-testid='review-image-registration'>\n                        <TextListItem component={ TextListItemVariants.dt }>Subscription</TextListItem>\n                        { subscriptionReview }\n                    </TextList>\n                </TextContent>\n            </>\n        );\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        uploadDestinations: state.pendingCompose.uploadDestinations,\n        uploadAWS: state.pendingCompose.uploadAWS,\n        uploadAzure: state.pendingCompose.uploadAzure,\n        uploadGoogle: state.pendingCompose.uploadGoogle,\n        subscribeNow: state.pendingCompose.subscribeNow,\n        subscription: state.pendingCompose.subscription,\n    };\n}\n\nWizardStepReview.propTypes = {\n    release: PropTypes.string,\n    uploadAWS: PropTypes.object,\n    uploadGoogle: PropTypes.object,\n    uploadDestinations: PropTypes.object,\n    uploadAzure: PropTypes.object,\n    subscription: PropTypes.object,\n    subscribeNow: PropTypes.bool,\n    uploadAWSErrors: PropTypes.object,\n    isValidSubscription: PropTypes.bool,\n};\n\nexport default connect(mapStateToProps, null)(WizardStepReview);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, ButtonVariant, Text, TextContent, WizardContextConsumer, WizardFooter } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport './ImageWizardFooter.scss';\n\nconst ImageWizardFooter = (props) => {\n    return (\n        <>\n            <WizardFooter>\n                <WizardContextConsumer>\n                    {({ activeStep, onNext, onBack, onClose }) => {\n                        let nextButtonText = 'Next';\n                        if (activeStep.name === 'Review') {\n                            nextButtonText = props.isSaveInProgress ? 'Creating...' : 'Create';\n                        }\n\n                        let nextButtonIsDisabled = props.isSaveInProgress;\n\n                        if ((activeStep.name === 'Image output' || activeStep.name === 'Review') && !props.isValidUploadDestination) {\n                            nextButtonIsDisabled = true;\n                        }\n\n                        if ((activeStep.name === 'Registration'  || activeStep.name === 'Review') && !props.isValidSubscription) {\n                            nextButtonIsDisabled = true;\n                        }\n\n                        return (\n                            <>\n                                <Button aria-label={ activeStep.name === 'Review' ? 'Create' : 'Next' } variant={ ButtonVariant.primary }\n                                    onClick={ onNext } isDisabled={ nextButtonIsDisabled }>\n                                    { nextButtonText }\n                                </Button>\n                                <Button aria-label=\"Back\" variant={ ButtonVariant.secondary }\n                                    onClick={ onBack } isDisabled={ props.isSaveInProgress || activeStep.name === 'Image output' }>\n                                Back\n                                </Button>\n                                <Button aria-label=\"Cancel\" variant={ ButtonVariant.link }\n                                    onClick={ onClose } isDisabled={ props.isSaveInProgress }>\n                                Cancel\n                                </Button>\n                            </>\n                        );\n                    }}\n                </WizardContextConsumer>\n                { props.error && (\n                    <TextContent className=\"footer-error\">\n                        <Text><ExclamationCircleIcon /> <strong>{props.error}</strong></Text>\n                    </TextContent>\n                )}\n            </WizardFooter>\n        </>\n    );\n};\n\nImageWizardFooter.propTypes = {\n    isValidUploadDestination: PropTypes.bool,\n    isSaveInProgress: PropTypes.bool,\n    isValidSubscription: PropTypes.bool,\n    error: PropTypes.string,\n};\n\nexport default ImageWizardFooter;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from '../../store/actions';\n\nimport { Wizard } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport WizardStepImageOutput from './WizardStepImageOutput';\nimport WizardStepUploadAWS from './WizardStepUploadAWS';\nimport WizardStepUploadAzure from './WizardStepUploadAzure';\nimport WizardStepPackages from './WizardStepPackages';\nimport WizardStepUploadGoogle from './WizardStepUploadGoogle';\nimport WizardStepRegistration from './WizardStepRegistration';\nimport WizardStepReview from './WizardStepReview';\nimport ImageWizardFooter from './ImageWizardFooter';\n\nimport api from './../../api.js';\nimport './CreateImageWizard.scss';\n\nclass CreateImageWizard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onStep = this.onStep.bind(this);\n        this.onSave = this.onSave.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.validate = this.validate.bind(this);\n        this.validateUploadAmazon = this.validateUploadAmazon.bind(this);\n\n        this.state = {\n            /* errors take form of $fieldId: error */\n            uploadAWSErrors: {},\n            uploadAzureErrors: {},\n            uploadGoogleErrors: {},\n            isSaveInProgress: false,\n            isValidSubscription: true,\n            onSaveError: null,\n        };\n    }\n\n    async componentDidMount() {\n        let user = await insights.chrome.auth.getUser();\n        this.setState({\n            subscription: {\n                organization: Number(user.identity.internal.org_id)\n            }\n        });\n    }\n\n    onStep(step) {\n        if (step.name === 'Review') {\n            this.validate();\n        }\n    }\n\n    validate() {\n        /* upload */\n        Object.keys(this.props.uploadDestinations).forEach(provider => {\n            switch (provider) {\n                case 'aws':\n                    this.validateUploadAmazon();\n                    break;\n                case 'azure':\n                    this.validateUploadAzure();\n                    break;\n                case 'google':\n                    break;\n                default:\n                    break;\n            }\n        });\n        /* subscription */\n        if (this.props.subscribeNow) {\n            this.setState({ isValidSubscription: this.props.subscription.activationKey ? true : false });\n        } else {\n            this.setState({ isValidSubscription: true });\n        }\n    }\n\n    validateUploadAmazon() {\n        let uploadAWSErrors = {};\n        let share = this.props.uploadAWS.shareWithAccounts;\n        if (share.length === 0 || share[0].length !== 12 || isNaN(share[0])) {\n            uploadAWSErrors['aws-account-id'] =\n                { label: 'AWS account ID', value: 'A 12-digit number is required' };\n        }\n\n        this.setState({ uploadAWSErrors });\n    }\n\n    validateUploadAzure() {\n        let uploadAzureErrors = {};\n\n        let tenant_id = this.props.uploadAzure.tenantId;\n        if (tenant_id === null || tenant_id === '') {\n            uploadAzureErrors['azure-resource-group'] =\n                { label: 'Azure tenant ID', value: 'A tenant ID is required' };\n        }\n\n        let subscriptionId = this.props.uploadAzure.subscriptionId;\n        if (subscriptionId === null || subscriptionId === '') {\n            uploadAzureErrors['azure-subscription-id'] =\n                { label: 'Azure subscription ID', value: 'A subscription ID is required' };\n        }\n\n        let resource_group = this.props.uploadAzure.resourceGroup;\n        if (resource_group === null || resource_group === '') {\n            uploadAzureErrors['azure-resource-group'] =\n                { label: 'Azure resource group', value: 'A resource group is required' };\n        }\n        // TODO check oauth2 thing too here?\n    }\n\n    onSave() {\n        this.setState({\n            isSaveInProgress: true,\n        });\n\n        let customizations = {\n            packages: this.props.selectedPackages,\n        };\n        if (this.props.subscribeNow) {\n            customizations.subscription = {\n                'activation-key': this.props.subscription.activationKey,\n                insights: this.props.subscription.insights,\n                organization: this.props.subscription.organization,\n                'server-url': 'subscription.rhsm.redhat.com',\n                'base-url': 'https://cdn.redhat.com/',\n            };\n        }\n\n        let requests = [];\n        if (this.props.uploadDestinations.aws) {\n            let request = {\n                distribution: this.props.release.distro,\n                image_requests: [\n                    {\n                        architecture: this.props.release.arch,\n                        image_type: 'ami',\n                        upload_request: {\n                            type: 'aws',\n                            options: {\n                                share_with_accounts: this.props.uploadAWS.shareWithAccounts,\n                            },\n                        },\n                    }],\n                customizations,\n            };\n            requests.push(request);\n        }\n\n        if (this.props.uploadDestinations.google) {\n            let share = '';\n            switch (this.props.uploadGoogle.accountType) {\n                case 'googleAccount':\n                    share = 'user:' + this.props.uploadGoogle.shareWithAccounts[0].user;\n                    break;\n                case 'serviceAccount':\n                    share = 'serviceAccount:' + this.props.uploadGoogle.shareWithAccounts[0].serviceAccount;\n                    break;\n                case 'googleGroup':\n                    share = 'group:' + this.props.uploadGoogle.shareWithAccounts[0].group;\n                    break;\n                case 'domain':\n                    share = 'domain:' + this.props.uploadGoogle.shareWithAccounts[0].domain;\n                    break;\n            }\n\n            let request = {\n                distribution: this.props.release.distro,\n                image_requests: [\n                    {\n                        architecture: this.props.release.arch,\n                        image_type: 'vhd',\n                        upload_request: {\n                            type: 'gcp',\n                            options: {\n                                share_with_accounts: [ share ],\n                            },\n                        },\n                    }],\n                customizations,\n            };\n\n            requests.push(request);\n        }\n\n        if (this.props.uploadDestinations.azure) {\n            let request = {\n                distribution: this.props.release.distro,\n                image_requests: [\n                    {\n                        architecture: this.props.release.arch,\n                        image_type: 'vhd',\n                        upload_request: {\n                            type: 'azure',\n                            options: {\n                                tenant_id: this.props.uploadAzure.tenantId,\n                                subscription_id: this.props.uploadAzure.subscriptionId,\n                                resource_group: this.props.uploadAzure.resourceGroup,\n                            },\n                        },\n                    }],\n                customizations,\n            };\n            requests.push(request);\n\n        }\n\n        const composeRequests = [];\n        requests.forEach(request => {\n            const composeRequest = api.composeImage(request).then(response => {\n                let compose = {};\n                compose[response.id] = {\n                    image_status: {\n                        status: 'pending',\n                    },\n                    distribution: request.distribution,\n                    architecture: request.image_requests[0].architecture,\n                    image_type: request.image_requests[0].image_type,\n                    upload_type: request.image_requests[0].upload_request.type,\n                };\n                this.props.updateCompose(compose);\n            });\n            composeRequests.push(composeRequest);\n        });\n\n        Promise.all(composeRequests)\n            .then(() => {\n                this.props.addNotification({\n                    variant: 'success',\n                    title: 'Your image is being created',\n                });\n                this.props.history.push('/landing');\n            })\n            .catch(err => {\n                console.log('ERR', err);\n                this.setState({ isSaveInProgress: false });\n                if (err.response.status === 500) {\n                    this.setState({ onSaveError: 'Error: Something went wrong serverside' });\n                }\n            });\n    }\n\n    onClose () {\n        this.props.history.push('/landing');\n    }\n\n    render() {\n        const isValidUploadDestination = this.props.uploadDestinations.aws ||\n            this.props.uploadDestinations.azure ||\n            this.props.uploadDestinations.google;\n\n        const StepImageOutput = {\n            name: 'Image output',\n            component: <WizardStepImageOutput />\n        };\n\n        const StepUploadAWS = {\n            name: 'Amazon Web Services',\n            component: <WizardStepUploadAWS\n                errors={ this.state.uploadAWSErrors } />\n        };\n\n        const StepUploadAzure = {\n            name: 'Microsoft Azure',\n            component: <WizardStepUploadAzure\n                errors={ this.state.uploadAzureErrors } />\n        };\n\n        const StepUploadGoogle = {\n            name: 'Google Cloud Platform',\n            component: <WizardStepUploadGoogle\n                errors={ this.state.uploadGoogleErrors } />\n        };\n\n        const uploadDestinationSteps = [];\n        if (this.props.uploadDestinations.aws) {\n            uploadDestinationSteps.push(StepUploadAWS);\n        }\n\n        if (this.props.uploadDestinations.azure) {\n            uploadDestinationSteps.push(StepUploadAzure);\n        }\n\n        if (this.props.uploadDestinations.google) {\n            uploadDestinationSteps.push(StepUploadGoogle);\n        }\n\n        const StepTargetEnv = {\n            name: 'Target environment',\n            steps: uploadDestinationSteps\n        };\n\n        const steps = [\n            StepImageOutput,\n            ...(StepTargetEnv.steps.length > 0 ? [ StepTargetEnv ] : []),\n            {\n                name: 'Registration',\n                component: <WizardStepRegistration\n                    isValidSubscription={ this.state.isValidSubscription } /> },\n            {\n                name: 'Packages',\n                component: <WizardStepPackages /> },\n            {\n                name: 'Review',\n                component: <WizardStepReview\n                    uploadAWSErrors={ this.state.uploadAWSErrors }\n                    isValidSubscription={ this.state.isValidSubscription } />,\n                nextButtonText: 'Create',\n            }\n        ];\n\n        return (\n            <React.Fragment>\n                <Wizard\n                    title={ 'Create image' }\n                    onNext={ this.onStep }\n                    onGoToStep={ this.onStep }\n                    steps={ steps }\n                    onClose={ this.onClose }\n                    onSave={ this.onSave }\n                    footer={ <ImageWizardFooter\n                        isValidUploadDestination={ isValidUploadDestination }\n                        isSaveInProgress={ this.state.isSaveInProgress }\n                        isValidSubscription={ this.state.isValidSubscription }\n                        error={ this.state.onSaveError } /> }\n                    isOpen />\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        release: state.pendingCompose.release,\n        uploadDestinations: state.pendingCompose.uploadDestinations,\n        uploadAWS: state.pendingCompose.uploadAWS,\n        uploadAzure: state.pendingCompose.uploadAzure,\n        uploadGoogle: state.pendingCompose.uploadGoogle,\n        selectedPackages: state.pendingCompose.selectedPackages,\n        subscription: state.pendingCompose.subscription,\n        subscribeNow: state.pendingCompose.subscribeNow,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateCompose: (compose) => dispatch(actions.updateCompose(compose)),\n        addNotification: (not) => dispatch(addNotification(not)),\n    };\n}\n\nCreateImageWizard.propTypes = {\n    updateCompose: PropTypes.func,\n    addNotification: PropTypes.func,\n    history: PropTypes.object,\n    release: PropTypes.object,\n    uploadDestinations: PropTypes.object,\n    uploadAWS: PropTypes.object,\n    uploadAzure: PropTypes.object,\n    uploadGoogle: PropTypes.object,\n    subscription: PropTypes.object,\n    subscribeNow: PropTypes.bool,\n    selectedPackages: PropTypes.array,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateImageWizard));\n"],"sourceRoot":""}