{"version":3,"file":"js/16.1669908828287.2e3546b86a88fb367053.js","mappings":"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","sources":["webpack:///./src/Components/CreateImageWizard/formComponents/ActivationKeyInformation.js","webpack:///./src/Utilities/isRhel.js","webpack:///./src/Components/CreateImageWizard/steps/imageOutputStepMapper.js","webpack:///./src/Components/CreateImageWizard/steps/stepTemplate.js","webpack:///./src/Components/CreateImageWizard/formComponents/CustomButtons.js","webpack:///./src/Components/CreateImageWizard/steps/googleCloud.js","webpack:///./src/Components/CreateImageWizard/formComponents/ReviewStep.js","webpack:///./src/Components/CreateImageWizard/formComponents/TargetEnvironment.js","webpack:///./src/Components/CreateImageWizard/formComponents/Packages.js","webpack:///./src/Components/CreateImageWizard/formComponents/RadioWithPopover.js","webpack:///./src/Components/CreateImageWizard/formComponents/AzureAuthButton.js","webpack:///./src/Components/CreateImageWizard/formComponents/ActivationKeys.js","webpack:///./src/Components/CreateImageWizard/formComponents/MountPoint.js","webpack:///./src/Components/CreateImageWizard/formComponents/SizeUnit.js","webpack:///./src/Components/CreateImageWizard/formComponents/FileSystemConfiguration.js","webpack:///./src/Components/CreateImageWizard/formComponents/FileSystemConfigToggle.js","webpack:///./src/Components/CreateImageWizard/formComponents/ImageOutputReleaseSelect.js","webpack:///./src/Components/CreateImageWizard/formComponents/CentOSAcknowledgement.js","webpack:///./src/Components/CreateImageWizard/ImageCreator.js","webpack:///./src/Components/CreateImageWizard/steps/aws.js","webpack:///./src/Components/CreateImageWizard/steps/msAzure.js","webpack:///./src/Components/CreateImageWizard/steps/packages.js","webpack:///./src/Components/CreateImageWizard/steps/registration.js","webpack:///./src/Components/CreateImageWizard/steps/review.js","webpack:///./src/Components/CreateImageWizard/steps/imageOutput.js","webpack:///./src/Components/CreateImageWizard/formComponents/FileSystemConfigButtons.js","webpack:///./src/Components/CreateImageWizard/steps/fileSystemConfiguration.js","webpack:///./src/Components/CreateImageWizard/steps/imageName.js","webpack:///./src/Components/CreateImageWizard/validators/fileSystemConfigurationValidator.js","webpack:///./src/Components/CreateImageWizard/validators/targetEnvironmentValidator.js","webpack:///./src/Components/CreateImageWizard/CreateImageWizard.js","webpack:///./src/Components/sharedComponents/DocumentationButton.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { useFormApi } from '@data-driven-forms/react-form-renderer';\nimport { Button, Popover } from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport api from '../../../api';\n\nconst ActivationKeyInformation = () => {\n  const { getState } = useFormApi();\n\n  const activationKey = getState()?.values?.['subscription-activation-key'];\n  const [role, setRole] = useState(undefined);\n  const [serviceLevel, setServiceLevel] = useState(undefined);\n  const [usage, setUsage] = useState(undefined);\n  const [additionalRepositories, setRepositories] = useState(undefined);\n\n  useEffect(() => {\n    const fetchKeyInformation = async () => {\n      const data = await api.getActivationKey(activationKey);\n      setRole(data?.role);\n      setServiceLevel(data?.serviceLevel);\n      setUsage(data?.usage);\n      setRepositories(data?.additionalRepositories);\n    };\n    fetchKeyInformation();\n  }, []);\n\n  return (\n    <>\n      <TextContent>\n        <TextList component={TextListVariants.dl}>\n          <TextListItem component={TextListItemVariants.dt}>Name:</TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {activationKey}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>Role:</TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {role || 'Not defined'}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>SLA:</TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {serviceLevel || 'Not defined'}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>\n            Usage:\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {usage || 'Not defined'}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>\n            Additional <br /> repositories:\n            <Popover\n              bodyContent={\n                <TextContent>\n                  <Text>\n                    The core repositories for your operating system version are\n                    always enabled and do not need to be explicitly added to the\n                    activation key.\n                  </Text>\n                </TextContent>\n              }\n            >\n              <Button\n                variant=\"plain\"\n                aria-label=\"About additional repositories\"\n                className=\"pf-u-pl-sm pf-u-pt-0 pf-u-pb-0\"\n                isSmall\n              >\n                <HelpIcon />\n              </Button>\n            </Popover>\n          </TextListItem>\n          <TextListItem\n            component={TextListItemVariants.dd}\n            className=\"pf-u-display-flex pf-u-align-items-flex-end\"\n          >\n            {additionalRepositories?.length > 0 ? (\n              <Popover\n                bodyContent={\n                  <TextContent>\n                    <Text component={TextVariants.h3}>\n                      Additional repositories\n                    </Text>\n                    <TableComposable\n                      aria-label=\"Additional repositories table\"\n                      variant=\"compact\"\n                    >\n                      <Thead>\n                        <Tr>\n                          <Th>Name</Th>\n                        </Tr>\n                      </Thead>\n                      <Tbody data-testid=\"additional-repositories-table\">\n                        {additionalRepositories?.map((repo, index) => (\n                          <Tr key={index}>\n                            <Td>{repo.repositoryLabel}</Td>\n                          </Tr>\n                        ))}\n                      </Tbody>\n                    </TableComposable>\n                  </TextContent>\n                }\n              >\n                <Button\n                  data-testid=\"repositories-popover-button\"\n                  variant=\"link\"\n                  aria-label=\"Show additional repositories\"\n                  className=\"pf-u-pl-0 pf-u-pt-0 pf-u-pb-0\"\n                >\n                  {additionalRepositories?.length} repositories\n                </Button>\n              </Popover>\n            ) : (\n              'None'\n            )}\n          </TextListItem>\n        </TextList>\n      </TextContent>\n    </>\n  );\n};\n\nexport default ActivationKeyInformation;\n","import { RHEL_8, RHEL_9 } from '../constants';\n\nfunction isRhel(distro) {\n  switch (distro) {\n    case RHEL_8:\n    case RHEL_9:\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport default isRhel;\n","import isRhel from '../../../Utilities/isRhel.js';\n\nexport default (\n  { 'target-environment': targetEnv, release } = {},\n  { skipAws, skipGoogle, skipAzure } = {}\n) => {\n  if (!skipAws && targetEnv?.aws) {\n    return 'aws-target-env';\n  }\n\n  if (!skipGoogle && targetEnv?.gcp) {\n    return 'google-cloud-target-env';\n  }\n\n  if (!skipAzure && targetEnv?.azure) {\n    return 'ms-azure-target-env';\n  }\n\n  return isRhel(release) ? 'registration' : 'File system configuration';\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\n\nconst StepTemplate = ({\n  id,\n  formFields,\n  formRef,\n  title,\n  customTitle,\n  showTitle,\n  showTitles,\n}) => (\n  <div id={id} ref={formRef} className=\"pf-c-form\">\n    {((showTitles && showTitle !== false) || showTitle) &&\n      (customTitle ? (\n        customTitle\n      ) : (\n        <Title headingLevel=\"h1\" size=\"xl\">\n          {title}\n        </Title>\n      ))}\n    {formFields}\n  </div>\n);\n\nStepTemplate.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.node,\n  customTitle: PropTypes.node,\n  formFields: PropTypes.array.isRequired,\n  formOptions: PropTypes.shape({\n    renderForm: PropTypes.func.isRequired,\n  }).isRequired,\n  showTitles: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  formRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n};\n\nexport default StepTemplate;\n","import React, { useContext, useState } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport PropTypes from 'prop-types';\n\nconst CustomButtons = ({\n  buttonLabels: { cancel, next, submit, back },\n  handleNext,\n  handlePrev,\n  nextStep,\n}) => {\n  const [isSaving, setIsSaving] = useState(false);\n  const { currentStep, formOptions } = useContext(WizardContext);\n\n  const onNextOrSubmit = () => {\n    if (currentStep.id === 'wizard-review') {\n      formOptions.onSubmit({\n        values: formOptions.getState().values,\n        setIsSaving,\n      });\n    } else {\n      if (typeof nextStep === 'function') {\n        handleNext(nextStep({ values: formOptions.getState().values }));\n      } else {\n        handleNext(nextStep);\n      }\n    }\n  };\n\n  return (\n    <FormSpy>\n      {() => (\n        <React.Fragment>\n          <Button\n            id={`${currentStep.id}-next-button`}\n            variant=\"primary\"\n            type=\"button\"\n            isDisabled={\n              !formOptions.valid ||\n              formOptions.getState().validating ||\n              isSaving\n            }\n            isLoading={currentStep.id === 'wizard-review' ? isSaving : null}\n            onClick={onNextOrSubmit}\n          >\n            {currentStep.id === 'wizard-review'\n              ? isSaving\n                ? 'Creating image'\n                : submit\n              : next}\n          </Button>\n          <Button\n            id={`${currentStep.id}-previous-button`}\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={handlePrev}\n            isDisabled={isSaving}\n          >\n            {back}\n          </Button>\n          <div className=\"pf-c-wizard__footer-cancel\">\n            <Button\n              id={`${currentStep.id}-cancel-button`}\n              type=\"button\"\n              variant=\"link\"\n              onClick={formOptions.onCancel}\n              isDisabled={isSaving}\n            >\n              {cancel}\n            </Button>\n          </div>\n        </React.Fragment>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  buttonLabels: PropTypes.shape({\n    cancel: PropTypes.node,\n    submit: PropTypes.node,\n    back: PropTypes.node,\n    next: PropTypes.node,\n  }),\n  handleNext: PropTypes.func,\n  handlePrev: PropTypes.func,\n  nextStep: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  isSaving: PropTypes.bool,\n};\n\nexport default CustomButtons;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport {\n  Button,\n  Popover,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  Title,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport const googleAccType = {\n  googleAccount: 'Google account',\n  serviceAccount: 'Service account',\n  googleGroup: 'Google group',\n  domain: 'Domain',\n};\n\nconst PopoverInfo = ({ appendTo }) => {\n  return (\n    <Popover\n      appendTo={appendTo}\n      hasAutoWidth\n      maxWidth=\"35rem\"\n      headerContent={'Valid account types'}\n      flipBehavior={['right', 'bottom', 'top', 'left']}\n      bodyContent={\n        <TextContent>\n          <Text>\n            The following account types can have an image shared with them:\n          </Text>\n          <TextList className=\"pf-u-ml-0\">\n            <TextListItem>\n              <strong>Google account:</strong> A Google account represents a\n              developer, an administrator, or any other person who interacts\n              with Google Cloud. For example: <em>`alice@gmail.com`</em>.\n            </TextListItem>\n            <TextListItem>\n              <strong>Service account:</strong> A service account is an account\n              for an application instead of an individual end user. For example:{' '}\n              <em>`myapp@appspot.gserviceaccount.com`</em>.\n            </TextListItem>\n            <TextListItem>\n              <strong>Google group:</strong> A Google group is a named\n              collection of Google accounts and service accounts. For example:{' '}\n              <em>`admins@example.com`</em>.\n            </TextListItem>\n            <TextListItem>\n              <strong>Google Workspace domain or Cloud Identity domain:</strong>{' '}\n              A Google workspace or cloud identity domain represents a virtual\n              group of all the Google accounts in an organization. These domains\n              represent your organization&apos;s internet domain name. For\n              example: <em>`mycompany.com`</em>.\n            </TextListItem>\n          </TextList>\n        </TextContent>\n      }\n    >\n      <Button\n        variant=\"plain\"\n        aria-label=\"Account info\"\n        aria-describedby=\"google-account-type\"\n        className=\"pf-c-form__group-label-help\"\n      >\n        <HelpIcon />\n      </Button>\n    </Popover>\n  );\n};\n\nPopoverInfo.propTypes = {\n  appendTo: PropTypes.any,\n};\n\nexport default {\n  StepTemplate,\n  id: 'wizard-target-gcp',\n  title: 'Google Cloud Platform',\n  customTitle: (\n    <Title headingLevel=\"h1\" size=\"xl\">\n      Target environment - Google Cloud Platform\n    </Title>\n  ),\n  name: 'google-cloud-target-env',\n  substepOf: 'Target environment',\n  nextStep: ({ values }) =>\n    nextStepMapper(values, { skipGoogle: true, skipAws: true }),\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: (\n        <Text>\n          Your image will be uploaded to Google Cloud Platform and shared with\n          the account you provide below. <br />\n          The shared image will expire within 14 days. To keep the image longer,\n          copy it to your Google Cloud Platform account.\n        </Text>\n      ),\n    },\n    {\n      component: 'radio-popover',\n      label: 'Type',\n      isRequired: true,\n      Popover: PopoverInfo,\n      name: 'google-account-type',\n      initialValue: 'googleAccount',\n      options: Object.entries(googleAccType).map(([value, label]) => ({\n        label:\n          value === 'domain'\n            ? 'Google Workspace domain or Cloud Identity domain'\n            : label,\n        value,\n        autoFocus: value === 'googleAccount' ? true : false,\n      })),\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'google-email',\n      'data-testid': 'input-google-email',\n      type: 'text',\n      label: 'Email address',\n      condition: {\n        or: [\n          { when: 'google-account-type', is: 'googleAccount' },\n          { when: 'google-account-type', is: 'serviceAccount' },\n          { when: 'google-account-type', is: 'googleGroup' },\n          { when: 'google-account-type', is: null },\n        ],\n      },\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: '[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,}$',\n          message: 'Please enter a valid email address',\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'google-domain',\n      type: 'text',\n      label: 'Domain',\n      condition: {\n        when: 'google-account-type',\n        is: 'domain',\n      },\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n  ],\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  List,\n  ListItem,\n  Popover,\n  Spinner,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport ActivationKeyInformation from './ActivationKeyInformation';\nimport { googleAccType } from '../steps/googleCloud';\nimport { RELEASES, UNIT_GIB, UNIT_MIB } from '../../../constants';\nimport isRhel from '../../../Utilities/isRhel';\n\nconst FSReviewTable = ({ ...props }) => {\n  return (\n    <TableComposable\n      aria-label=\"File system configuration table\"\n      variant=\"compact\"\n    >\n      <Thead>\n        <Tr>\n          <Th>Mount point</Th>\n          <Th>File system type</Th>\n          <Th>Minimum size</Th>\n        </Tr>\n      </Thead>\n      <Tbody data-testid=\"file-system-configuration-tbody-review\">\n        {props.fsc.map((r, ri) => (\n          <Tr key={ri}>\n            <Td className=\"pf-m-width-30\">{r.mountpoint}</Td>\n            <Td className=\"pf-m-width-30\">xfs</Td>\n            <Td className=\"pf-m-width-30\">\n              {r.size}{' '}\n              {r.unit === UNIT_GIB\n                ? 'GiB'\n                : r.unit === UNIT_MIB\n                ? 'MiB'\n                : 'KiB'}\n            </Td>\n          </Tr>\n        ))}\n      </Tbody>\n    </TableComposable>\n  );\n};\n\nFSReviewTable.propTypes = {\n  fsc: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst ReviewStep = () => {\n  const [activeTabKey, setActiveTabKey] = useState(0);\n  const [minSize, setMinSize] = useState();\n  const { change, getState } = useFormApi();\n\n  useEffect(() => {\n    const registerSystem = getState()?.values?.['register-system'];\n    if (\n      registerSystem === 'register-now' ||\n      registerSystem === 'register-now-insights'\n    ) {\n      (async () => {\n        const userData = await insights?.chrome?.auth?.getUser();\n        const id = userData?.identity?.internal?.org_id;\n        change('subscription-organization-id', id);\n      })();\n    }\n\n    if (\n      getState()?.values?.['file-system-config-toggle'] === 'manual' &&\n      getState()?.values?.['file-system-configuration']\n    ) {\n      let size = 0;\n      for (const fsc of getState().values['file-system-configuration']) {\n        size += fsc.size * fsc.unit;\n      }\n\n      size = (size / UNIT_GIB).toFixed(1);\n      if (size < 1) {\n        setMinSize(`Less than 1 GiB`);\n      } else {\n        setMinSize(`${size} GiB`);\n      }\n    }\n  });\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  return (\n    <>\n      <Text>\n        Review the information and click &quot;Create image&quot; to create the\n        image using the following criteria.\n      </Text>\n      <DescriptionList isCompact>\n        <DescriptionListGroup>\n          {getState()?.values?.['image-name'] && (\n            <>\n              <DescriptionListTerm>Image name</DescriptionListTerm>\n              <DescriptionListDescription>\n                {getState()?.values?.['image-name']}\n              </DescriptionListDescription>\n            </>\n          )}\n          <DescriptionListTerm>Release</DescriptionListTerm>\n          <DescriptionListDescription>\n            {RELEASES[getState()?.values?.release]}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <Tabs\n        isFilled\n        activeKey={activeTabKey}\n        onSelect={handleTabClick}\n        className=\"pf-u-w-75\"\n      >\n        <Tab\n          eventKey={0}\n          title={<TabTitleText>Target environment</TabTitleText>}\n          data-testid=\"tab-target\"\n          autoFocus\n        >\n          <List isPlain iconSize=\"large\">\n            {getState()?.values?.['target-environment']?.aws && (\n              <ListItem\n                icon={\n                  <img\n                    className=\"provider-icon\"\n                    src=\"/apps/frontend-assets/partners-icons/aws.svg\"\n                  />\n                }\n              >\n                <TextContent>\n                  <Text component={TextVariants.h3}>Amazon Web Services</Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem\n                      component={TextListItemVariants.dt}\n                      className=\"pf-u-min-width\"\n                    >\n                      Account ID\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['aws-account-id']}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Default Region\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      us-east-1\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.gcp && (\n              <ListItem\n                className=\"pf-c-list__item pf-u-mt-md\"\n                icon={\n                  <img\n                    className=\"provider-icon\"\n                    src=\"/apps/frontend-assets/partners-icons/google-cloud-short.svg\"\n                  />\n                }\n              >\n                <TextContent>\n                  <Text component={TextVariants.h3}>Google Cloud Platform</Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      {\n                        googleAccType?.[\n                          getState()?.values?.['google-account-type']\n                        ]\n                      }\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['google-email'] ||\n                        getState()?.values?.['google-domain']}\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.azure && (\n              <ListItem\n                className=\"pf-c-list__item pf-u-mt-md\"\n                icon={\n                  <img\n                    className=\"provider-icon\"\n                    src=\"/apps/frontend-assets/partners-icons/microsoft-azure-short.svg\"\n                  />\n                }\n              >\n                <TextContent>\n                  <Text component={TextVariants.h3}>Microsoft Azure</Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Subscription ID\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['azure-subscription-id']}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Tenant ID\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['azure-tenant-id']}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Resource group\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['azure-resource-group']}\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.vsphere && (\n              <ListItem>\n                <TextContent>\n                  <Text component={TextVariants.h3}>VMWare</Text>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.['guest-image'] && (\n              <ListItem>\n                <TextContent>\n                  <Text component={TextVariants.h3}>\n                    Virtualization - Guest image\n                  </Text>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.[\n              'image-installer'\n            ] && (\n              <ListItem>\n                <TextContent>\n                  <Text component={TextVariants.h3}>\n                    Bare metal - Installer\n                  </Text>\n                </TextContent>\n              </ListItem>\n            )}\n          </List>\n        </Tab>\n        {isRhel(getState()?.values?.release) && (\n          <Tab\n            eventKey={1}\n            title={<TabTitleText>Registration</TabTitleText>}\n            data-testid=\"tab-registration\"\n          >\n            {getState()?.values?.['register-system'] === 'register-later' && (\n              <TextContent>\n                <TextList component={TextListVariants.dl}>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Registration type\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    Register the system later\n                  </TextListItem>\n                </TextList>\n              </TextContent>\n            )}\n            {(getState()?.values?.['register-system'] === 'register-now' ||\n              getState()?.values?.['register-system'] ===\n                'register-now-insights') && (\n              <TextContent>\n                <TextList component={TextListVariants.dl}>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Registration type\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {getState()?.values?.['register-system'] ===\n                      'register-now-insights' &&\n                      'Register with Subscriptions and Red Hat Insights'}\n                    {getState()?.values?.['register-system'] ===\n                      'register-now' && 'Register with Subscriptions'}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Activation key\n                    <Popover\n                      bodyContent={\n                        <TextContent>\n                          <Text>\n                            Activation keys enable you to register a system with\n                            appropriate subscriptions, system purpose, and\n                            repositories attached.\n                            <br />\n                            <br />\n                            If using an activation key with command line\n                            registration, you must provide your\n                            organization&apos;s ID. Your organization&apos;s ID\n                            is{' '}\n                            {getState()?.values?.[\n                              'subscription-organization-id'\n                            ] !== undefined ? (\n                              getState()?.values?.[\n                                'subscription-organization-id'\n                              ]\n                            ) : (\n                              <Spinner size=\"md\" />\n                            )}\n                          </Text>\n                        </TextContent>\n                      }\n                    >\n                      <Button\n                        variant=\"plain\"\n                        aria-label=\"About activation key\"\n                        className=\"pf-u-pl-sm pf-u-pt-0 pf-u-pb-0\"\n                        isSmall\n                      >\n                        <HelpIcon />\n                      </Button>\n                    </Popover>\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <ActivationKeyInformation />\n                  </TextListItem>\n                </TextList>\n              </TextContent>\n            )}\n          </Tab>\n        )}\n        <Tab\n          eventKey={2}\n          title={<TabTitleText>System configuration</TabTitleText>}\n          data-testid=\"tab-system\"\n        >\n          <TextContent>\n            <Text component={TextVariants.h3}>File system configuration</Text>\n            <TextList component={TextListVariants.dl}>\n              <TextListItem component={TextListItemVariants.dt}>\n                Partitioning\n              </TextListItem>\n              <TextListItem\n                component={TextListItemVariants.dd}\n                data-testid=\"partitioning-auto-manual\"\n              >\n                {getState()?.values?.['file-system-config-toggle'] === 'manual'\n                  ? 'Manual'\n                  : 'Automatic'}\n                {getState()?.values?.['file-system-config-toggle'] ===\n                  'manual' && (\n                  <>\n                    {' '}\n                    <Popover\n                      position=\"bottom\"\n                      headerContent=\"Partitions\"\n                      hasAutoWidth\n                      minWidth=\"30rem\"\n                      bodyContent={\n                        <FSReviewTable\n                          fsc={getState().values['file-system-configuration']}\n                        />\n                      }\n                    >\n                      <Button\n                        data-testid=\"file-system-configuration-popover\"\n                        variant=\"link\"\n                        aria-label=\"File system configuration info\"\n                        aria-describedby=\"file-system-configuration-info\"\n                        className=\"pf-u-pt-0 pf-u-pb-0\"\n                      >\n                        View partitions\n                      </Button>\n                    </Popover>\n                  </>\n                )}\n              </TextListItem>\n              {getState()?.values?.['file-system-config-toggle'] ===\n                'manual' && (\n                <>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Image size (minimum)\n                    <Popover\n                      hasAutoWidth\n                      bodyContent={\n                        <TextContent>\n                          <Text>\n                            Image Builder may extend this size based on\n                            requirements, selected packages, and configurations.\n                          </Text>\n                        </TextContent>\n                      }\n                    >\n                      <Button\n                        variant=\"plain\"\n                        aria-label=\"File system configuration info\"\n                        aria-describedby=\"file-system-configuration-info\"\n                        className=\"pf-c-form__group-label-help\"\n                      >\n                        <HelpIcon />\n                      </Button>\n                    </Popover>\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {minSize}\n                  </TextListItem>\n                </>\n              )}\n            </TextList>\n            <Text component={TextVariants.h3}>Additional packages</Text>\n            <TextList component={TextListVariants.dl}>\n              <TextListItem component={TextListItemVariants.dt}>\n                Chosen\n              </TextListItem>\n              <TextListItem\n                component={TextListItemVariants.dd}\n                data-testid=\"chosen-packages-count\"\n              >\n                {getState()?.values?.['selected-packages']?.length || 0}\n              </TextListItem>\n            </TextList>\n          </TextContent>\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport {\n  Checkbox,\n  FormGroup,\n  Text,\n  TextVariants,\n  Tile,\n} from '@patternfly/react-core';\n\nconst TargetEnvironment = ({ label, isRequired, ...props }) => {\n  const { getState, change } = useFormApi();\n  const { input } = useFieldApi({ label, isRequired, ...props });\n  const [environment, setEnvironment] = useState({\n    aws: false,\n    azure: false,\n    gcp: false,\n    vsphere: false,\n    'guest-image': false,\n    'image-installer': false,\n  });\n\n  useEffect(() => {\n    if (getState()?.values?.[input.name]) {\n      setEnvironment(getState().values[input.name]);\n    }\n  }, []);\n\n  const handleSetEnvironment = (env) =>\n    setEnvironment((prevEnv) => {\n      const newEnv = {\n        ...prevEnv,\n        [env]: !prevEnv[env],\n      };\n      change(input.name, newEnv);\n      return newEnv;\n    });\n\n  const handleKeyDown = (e, env) => {\n    if (e.key === ' ') {\n      handleSetEnvironment(env);\n    }\n  };\n\n  return (\n    <>\n      <FormGroup\n        isRequired={isRequired}\n        label={label}\n        data-testid=\"target-select\"\n      >\n        <FormGroup\n          label={<Text component={TextVariants.small}>Public cloud</Text>}\n          data-testid=\"target-public\"\n        >\n          <div className=\"tiles\">\n            <Tile\n              className=\"tile pf-u-mr-sm\"\n              data-testid=\"upload-aws\"\n              title=\"Amazon Web Services\"\n              icon={\n                <img\n                  className=\"provider-icon\"\n                  src={'/apps/frontend-assets/partners-icons/aws.svg'}\n                />\n              }\n              onClick={() => handleSetEnvironment('aws')}\n              onKeyDown={(e) => handleKeyDown(e, 'aws')}\n              isSelected={environment.aws}\n              isStacked\n              isDisplayLarge\n            />\n            <Tile\n              className=\"tile pf-u-mr-sm\"\n              data-testid=\"upload-google\"\n              title=\"Google Cloud Platform\"\n              icon={\n                <img\n                  className=\"provider-icon\"\n                  src={\n                    '/apps/frontend-assets/partners-icons/google-cloud-short.svg'\n                  }\n                />\n              }\n              onClick={() => handleSetEnvironment('gcp')}\n              isSelected={environment.gcp}\n              onKeyDown={(e) => handleKeyDown(e, 'gcp')}\n              isStacked\n              isDisplayLarge\n            />\n            <Tile\n              className=\"tile pf-u-mr-sm\"\n              data-testid=\"upload-azure\"\n              title=\"Microsoft Azure\"\n              icon={\n                <img\n                  className=\"provider-icon\"\n                  src={\n                    '/apps/frontend-assets/partners-icons/microsoft-azure-short.svg'\n                  }\n                />\n              }\n              onClick={() => handleSetEnvironment('azure')}\n              onKeyDown={(e) => handleKeyDown(e, 'azure')}\n              isSelected={environment.azure}\n              isStacked\n              isDisplayLarge\n            />\n          </div>\n        </FormGroup>\n        <FormGroup\n          label={<Text component={TextVariants.small}>Private cloud</Text>}\n          data-testid=\"target-private\"\n        >\n          <Checkbox\n            label=\"VMWare (.vmdk)\"\n            isChecked={environment.vsphere}\n            onChange={() => handleSetEnvironment('vsphere')}\n            aria-label=\"VMWare checkbox\"\n            id=\"checkbox-vmware\"\n            name=\"VMWare\"\n            data-testid=\"checkbox-vmware\"\n          />\n        </FormGroup>\n        <FormGroup\n          label={<Text component={TextVariants.small}>Other</Text>}\n          data-testid=\"target-other\"\n        >\n          <Checkbox\n            label=\"Virtualization - Guest image (.qcow2)\"\n            isChecked={environment['guest-image']}\n            onChange={() => handleSetEnvironment('guest-image')}\n            aria-label=\"Virtualization guest image checkbox\"\n            id=\"checkbox-guest-image\"\n            name=\"Virtualization guest image\"\n            data-testid=\"checkbox-guest-image\"\n          />\n          <Checkbox\n            label=\"Bare metal - Installer (.iso)\"\n            isChecked={environment['image-installer']}\n            onChange={() => handleSetEnvironment('image-installer')}\n            aria-label=\"Bare metal installer checkbox\"\n            id=\"checkbox-image-installer\"\n            name=\"Bare metal installer\"\n            data-testid=\"checkbox-image-installer\"\n          />\n        </FormGroup>\n      </FormGroup>\n    </>\n  );\n};\n\nTargetEnvironment.propTypes = {\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n};\n\nTargetEnvironment.defaultProps = {\n  label: '',\n  isRequired: false,\n};\n\nexport default TargetEnvironment;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport PropTypes from 'prop-types';\nimport {\n  DualListSelector,\n  DualListSelectorControl,\n  DualListSelectorControlsWrapper,\n  DualListSelectorList,\n  DualListSelectorListItem,\n  DualListSelectorPane,\n  SearchInput,\n  TextContent,\n} from '@patternfly/react-core';\nimport {\n  AngleDoubleLeftIcon,\n  AngleDoubleRightIcon,\n  AngleLeftIcon,\n  AngleRightIcon,\n} from '@patternfly/react-icons';\nimport api from '../../../api';\n\n// the fields isHidden and isSelected should not be included in the package list sent for image creation\nconst removePackagesDisplayFields = (packages) =>\n  packages.map((pack) => ({\n    name: pack.name,\n    summary: pack.summary,\n  }));\n\nconst Packages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [packagesSearchName, setPackagesSearchName] = useState(undefined);\n  const [filterAvailable, setFilterAvailable] = useState(undefined);\n  const [filterChosen, setFilterChosen] = useState(undefined);\n  const [packagesAvailable, setPackagesAvailable] = useState([]);\n  const [packagesAvailableFound, setPackagesAvailableFound] = useState(true);\n  const [packagesChosen, setPackagesChosen] = useState([]);\n  const [packagesChosenFound, setPackagesChosenFound] = useState(true);\n  const [focus, setFocus] = useState('');\n\n  // this effect only triggers on mount\n  useEffect(() => {\n    const selectedPackages = getState()?.values?.['selected-packages'];\n    if (selectedPackages) {\n      setPackagesChosen(selectedPackages);\n    }\n  }, []);\n\n  const searchResultsComparator = useCallback((searchTerm) => {\n    return (a, b) => {\n      a = a.name.toLowerCase();\n      b = b.name.toLowerCase();\n\n      // check exact match first\n      if (a === searchTerm) {\n        return -1;\n      }\n\n      if (b === searchTerm) {\n        return 1;\n      }\n\n      // check for packages that start with the search term\n      if (a.startsWith(searchTerm) && !b.startsWith(searchTerm)) {\n        return -1;\n      }\n\n      if (b.startsWith(searchTerm) && !a.startsWith(searchTerm)) {\n        return 1;\n      }\n\n      // if both (or neither) start with the search term\n      // sort alphabetically\n      if (a < b) {\n        return -1;\n      }\n\n      if (b < a) {\n        return 1;\n      }\n\n      return 0;\n    };\n  });\n\n  const setPackagesAvailableSorted = (\n    packageList,\n    filter = filterAvailable\n  ) => {\n    const sortResults = packageList.sort(searchResultsComparator(filter));\n    setPackagesAvailable(sortResults);\n  };\n\n  const setPackagesChosenSorted = (packageList) => {\n    const sortResults = packageList.sort(searchResultsComparator(filterChosen));\n    setPackagesChosen(sortResults);\n  };\n\n  // filter the packages by name\n  const filterPackagesAvailable = (packageList) => {\n    return packageList.filter((availablePackage) => {\n      // returns true if no packages in the available or chosen list have the same name\n      return !packagesChosen.some(\n        (chosenPackage) => availablePackage.name === chosenPackage.name\n      );\n    });\n  };\n\n  const getAllPackages = async () => {\n    // if the env is stage beta then use content-sources api\n    // else use image-builder api\n    if (!insights.chrome.isProd() && insights.chrome.isBeta()) {\n      const args = [getState()?.values?.release, packagesSearchName];\n      return await api.getPackagesContentSources(...args);\n    } else {\n      const args = [\n        getState()?.values?.release,\n        getState()?.values?.architecture || defaultArch,\n        packagesSearchName,\n      ];\n      let { data, meta } = await api.getPackages(...args);\n      if (data?.length === meta.count) {\n        return data;\n      } else if (data) {\n        ({ data } = await api.getPackages(...args, meta.count));\n        return data;\n      }\n    }\n  };\n\n  // call api to list available packages\n  const handlePackagesAvailableSearch = async () => {\n    setFilterAvailable(packagesSearchName);\n\n    const packageList = await getAllPackages();\n    if (packageList) {\n      const packagesAvailableFiltered = filterPackagesAvailable(packageList);\n      setPackagesAvailableSorted(packagesAvailableFiltered, packagesSearchName);\n      setPackagesAvailableFound(\n        packagesAvailableFiltered.length ? true : false\n      );\n    } else {\n      setPackagesAvailable([]);\n      setPackagesAvailableFound(false);\n    }\n  };\n\n  // filter displayed selected packages\n  const handlePackagesChosenSearch = (val) => {\n    let found = false;\n    const filteredPackagesChosen = packagesChosen.map((pack) => {\n      if (!pack.name.includes(val)) {\n        pack.isHidden = true;\n      } else {\n        pack.isHidden = false;\n        found = true;\n      }\n\n      return pack;\n    });\n\n    setFilterChosen(val);\n    setPackagesChosenFound(found);\n    setPackagesChosenSorted(filteredPackagesChosen);\n  };\n\n  const keydownHandler = (event) => {\n    if (event.key === 'Enter') {\n      if (focus === 'available') {\n        event.stopPropagation();\n        handlePackagesAvailableSearch();\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', keydownHandler, true);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler, true);\n    };\n  });\n\n  const areFound = (filter, packageList) => {\n    if (filter === undefined) {\n      return true;\n    } else if (packageList.some((pack) => pack.name.includes(filter))) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const isHidden = (filter, pack) =>\n    filter && !pack.name.includes(filter) ? true : false;\n\n  const updateState = (updatedPackagesAvailable, updatedPackagesChosen) => {\n    setPackagesChosenSorted(updatedPackagesChosen);\n    setPackagesAvailableSorted(updatedPackagesAvailable);\n    setPackagesAvailableFound(\n      areFound(filterAvailable, updatedPackagesAvailable)\n    );\n    setPackagesChosenFound(areFound(filterChosen, updatedPackagesChosen));\n    // set the steps field to the current chosen packages list\n    change(input.name, removePackagesDisplayFields(updatedPackagesChosen));\n  };\n\n  const moveSelectedToChosen = () => {\n    const newPackagesChosen = [];\n\n    const updatedPackagesAvailable = packagesAvailable.filter((pack) => {\n      if (pack.selected) {\n        pack.selected = false;\n        pack.isHidden = isHidden(filterChosen, pack);\n        newPackagesChosen.push(pack);\n        return false;\n      }\n\n      return true;\n    });\n\n    const updatedPackagesChosen = [...newPackagesChosen, ...packagesChosen];\n\n    updateState(updatedPackagesAvailable, updatedPackagesChosen);\n  };\n\n  const moveSelectedToAvailable = () => {\n    const newPackagesAvailable = [];\n\n    const updatedPackagesChosen = packagesChosen.filter((pack) => {\n      if (pack.selected) {\n        pack.selected = false;\n        pack.isHidden = false;\n        pack.name.includes(filterAvailable)\n          ? newPackagesAvailable.push(pack)\n          : null;\n        return false;\n      }\n\n      return true;\n    });\n\n    const updatedPackagesAvailable = [\n      ...newPackagesAvailable,\n      ...packagesAvailable,\n    ];\n\n    updateState(updatedPackagesAvailable, updatedPackagesChosen);\n  };\n\n  const moveAllToChosen = () => {\n    const newPackagesChosen = packagesAvailable.map((pack) => {\n      return {\n        ...pack,\n        selected: false,\n        isHidden: isHidden(filterChosen, pack),\n      };\n    });\n\n    const updatedPackagesAvailable = [];\n    const updatedPackagesChosen = [...newPackagesChosen, ...packagesChosen];\n\n    updateState(updatedPackagesAvailable, updatedPackagesChosen);\n  };\n\n  const moveAllToAvailable = () => {\n    const updatedPackagesChosen = packagesChosen.filter(\n      (pack) => pack.isHidden\n    );\n\n    const newPackagesAvailable =\n      filterAvailable === undefined\n        ? []\n        : packagesChosen\n            .filter(\n              (pack) => !pack.isHidden && pack.name.includes(filterAvailable)\n            )\n            .map((pack) => {\n              return { ...pack, selected: false };\n            });\n\n    const updatedPackagesAvailable = [\n      ...newPackagesAvailable,\n      ...packagesAvailable,\n    ];\n\n    updateState(updatedPackagesAvailable, updatedPackagesChosen);\n  };\n\n  const onOptionSelect = (event, index, isChosen) => {\n    if (isChosen) {\n      const newChosen = [...packagesChosen];\n      newChosen[index].selected = !packagesChosen[index].selected;\n      setPackagesChosenSorted(newChosen);\n    } else {\n      const newAvailable = [...packagesAvailable];\n      newAvailable[index].selected = !packagesAvailable[index].selected;\n      setPackagesAvailableSorted(newAvailable);\n    }\n  };\n\n  const firstInputElement = useRef(null);\n\n  useEffect(() => {\n    firstInputElement.current?.focus();\n  }, []);\n\n  const handleClearAvailableSearch = () => {\n    setPackagesSearchName(undefined);\n    setFilterAvailable(undefined);\n    setPackagesAvailable([]);\n    setPackagesAvailableFound(true);\n  };\n\n  const handleClearChosenSearch = () => {\n    setFilterChosen(undefined);\n    setPackagesChosenSorted(\n      packagesChosen.map((pack) => {\n        return { ...pack, isHidden: false };\n      })\n    );\n    setPackagesChosenFound(true);\n  };\n\n  return (\n    <DualListSelector>\n      <DualListSelectorPane\n        title=\"Available packages\"\n        searchInput={\n          <SearchInput\n            placeholder=\"Search for a package\"\n            data-testid=\"search-available-pkgs-input\"\n            value={packagesSearchName}\n            ref={firstInputElement}\n            onFocus={() => setFocus('available')}\n            onBlur={() => setFocus('')}\n            onChange={(val) => setPackagesSearchName(val)}\n            submitSearchButtonLabel=\"Search button for available packages\"\n            onSearch={handlePackagesAvailableSearch}\n            resetButtonLabel=\"Clear available packages search\"\n            onClear={handleClearAvailableSearch}\n          />\n        }\n      >\n        <DualListSelectorList data-testid=\"available-pkgs-list\">\n          {!packagesAvailable.length ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              {!packagesAvailableFound ? (\n                'No packages found'\n              ) : (\n                <>\n                  Search above to add additional\n                  <br />\n                  packages to your image\n                </>\n              )}\n            </p>\n          ) : (\n            packagesAvailable.map((pack, index) => {\n              return !pack.isHidden ? (\n                <DualListSelectorListItem\n                  key={index}\n                  isSelected={pack.selected}\n                  onOptionSelect={(e) => onOptionSelect(e, index, false)}\n                >\n                  <TextContent key={`${pack.name}-${index}`}>\n                    <span className=\"pf-c-dual-list-selector__item-text\">\n                      {pack.name}\n                    </span>\n                    <small>{pack.summary}</small>\n                  </TextContent>\n                </DualListSelectorListItem>\n              ) : null;\n            })\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n      <DualListSelectorControlsWrapper aria-label=\"Selector controls\">\n        <DualListSelectorControl\n          isDisabled={!packagesAvailable.some((option) => option.selected)}\n          onClick={() => moveSelectedToChosen()}\n          aria-label=\"Add selected\"\n          tooltipContent=\"Add selected\"\n        >\n          <AngleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={!packagesAvailable.length}\n          onClick={() => moveAllToChosen()}\n          aria-label=\"Add all\"\n          tooltipContent=\"Add all\"\n        >\n          <AngleDoubleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={!packagesChosen.length || !packagesChosenFound}\n          onClick={() => moveAllToAvailable()}\n          aria-label=\"Remove all\"\n          tooltipContent=\"Remove all\"\n        >\n          <AngleDoubleLeftIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          onClick={() => moveSelectedToAvailable()}\n          isDisabled={\n            !packagesChosen.some((option) => option.selected) ||\n            !packagesChosenFound\n          }\n          aria-label=\"Remove selected\"\n          tooltipContent=\"Remove selected\"\n        >\n          <AngleLeftIcon />\n        </DualListSelectorControl>\n      </DualListSelectorControlsWrapper>\n      <DualListSelectorPane\n        title=\"Chosen packages\"\n        searchInput={\n          <SearchInput\n            placeholder=\"Search for a package\"\n            data-testid=\"search-chosen-pkgs-input\"\n            value={filterChosen}\n            onFocus={() => setFocus('chosen')}\n            onBlur={() => setFocus('')}\n            onChange={(val) => handlePackagesChosenSearch(val)}\n            resetButtonLabel=\"Clear chosen packages search\"\n            onClear={handleClearChosenSearch}\n          />\n        }\n        isChosen\n      >\n        <DualListSelectorList data-testid=\"chosen-pkgs-list\">\n          {!packagesChosen.length ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              No packages added\n            </p>\n          ) : !packagesChosenFound ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              No packages found\n            </p>\n          ) : (\n            packagesChosen.map((pack, index) => {\n              return !pack.isHidden ? (\n                <DualListSelectorListItem\n                  key={index}\n                  isSelected={pack.selected}\n                  onOptionSelect={(e) => onOptionSelect(e, index, true)}\n                >\n                  <TextContent key={`${pack.name}-${index}`}>\n                    <span className=\"pf-c-dual-list-selector__item-text\">\n                      {pack.name}\n                    </span>\n                    <small>{pack.summary}</small>\n                  </TextContent>\n                </DualListSelectorListItem>\n              ) : null;\n            })\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n    </DualListSelector>\n  );\n};\n\nPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","import React, { useRef } from 'react';\nimport Radio from '@data-driven-forms/pf4-component-mapper/radio';\nimport PropTypes from 'prop-types';\n\nconst RadioWithPopover = ({ Popover, ...props }) => {\n  const ref = useRef();\n  return (\n    <Radio\n      {...props}\n      label={\n        <span ref={ref} className=\"ins-c-image--builder__popover\">\n          {props.label}\n          <Popover />\n        </span>\n      }\n    />\n  );\n};\n\nRadioWithPopover.propTypes = {\n  Popover: PropTypes.elementType.isRequired,\n  label: PropTypes.node,\n};\n\nexport default RadioWithPopover;\n","import React from 'react';\nimport { Button, FormGroup } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst AzureAuthButton = () => {\n  const { getState } = useFormApi();\n\n  const tenantId = getState()?.values?.['azure-tenant-id'];\n  const guidRegex = new RegExp(\n    '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$',\n    'i'\n  );\n\n  return (\n    <FormGroup>\n      <Button\n        component=\"a\"\n        target=\"_blank\"\n        variant=\"secondary\"\n        isDisabled={!guidRegex.test(tenantId)}\n        href={\n          'https://login.microsoftonline.com/' +\n          tenantId +\n          '/oauth2/v2.0/authorize?client_id=b94bb246-b02c-4985-9c22-d44e66f657f4&scope=openid&' +\n          'response_type=code&response_mode=query&redirect_uri=https://portal.azure.com'\n        }\n      >\n        Authorize Image Builder\n      </Button>\n    </FormGroup>\n  );\n};\n\nexport default AzureAuthButton;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport api from '../../../api';\n\nconst ActivationKeys = ({ label, isRequired, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [activationKeys, setActivationKeys] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [activationKeySelected, selectActivationKey] = useState(\n    getState()?.values?.['subscription-activation-key']\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    const data = api.getActivationKeys();\n    data.then((keys) => {\n      setActivationKeys(keys);\n      setIsLoading(false);\n    });\n\n    if (insights.chrome.isProd()) {\n      change('subscription-server-url', 'subscription.rhsm.redhat.com');\n      change('subscription-base-url', 'https://cdn.redhat.com/');\n    } else {\n      change('subscription-server-url', 'subscription.rhsm.stage.redhat.com');\n      change('subscription-base-url', 'https://cdn.stage.redhat.com/');\n    }\n  }, []);\n\n  const setActivationKey = (_, selection) => {\n    selectActivationKey(selection);\n    setIsOpen(false);\n    change(input.name, selection);\n  };\n\n  const handleClear = () => {\n    selectActivationKey();\n    change(input.name, undefined);\n  };\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={label}\n      data-testid=\"subscription-activation-key\"\n    >\n      <Select\n        variant={SelectVariant.typeahead}\n        onToggle={() => setIsOpen(!isOpen)}\n        onSelect={setActivationKey}\n        onClear={handleClear}\n        selections={activationKeySelected}\n        isOpen={isOpen}\n        placeholderText=\"Select activation key\"\n        typeAheadAriaLabel=\"Select activation key\"\n      >\n        {isLoading && (\n          <SelectOption\n            isNoResultsOption={true}\n            data-testid=\"activation-keys-loading\"\n          >\n            <Spinner isSVG size=\"lg\" />\n          </SelectOption>\n        )}\n        {activationKeys.map((key, index) => (\n          <SelectOption key={index} value={key.name} />\n        ))}\n      </Select>\n    </FormGroup>\n  );\n};\n\nActivationKeys.propTypes = {\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n};\n\nActivationKeys.defaultProps = {\n  label: '',\n  isRequired: false,\n};\n\nexport default ActivationKeys;\n","import path from 'path';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\n\nconst MountPoint = ({ ...props }) => {\n  // check '/' last!\n  const validPrefixes = [\n    '/app',\n    '/boot',\n    '/data',\n    '/home',\n    '/opt',\n    '/srv',\n    '/tmp',\n    '/usr',\n    '/usr/local',\n    '/var',\n    '/',\n  ];\n  const [isOpen, setIsOpen] = useState(false);\n  const [prefix, setPrefix] = useState('/');\n  const [suffix, setSuffix] = useState('');\n\n  // split\n  useEffect(() => {\n    for (let p of validPrefixes) {\n      if (props.mountpoint.startsWith(p)) {\n        setPrefix(p);\n        setSuffix(props.mountpoint.substring(p.length));\n        return;\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    let suf = suffix;\n    let mp = prefix;\n    if (suf) {\n      if (mp !== '/' && suf[0] !== '/') {\n        suf = '/' + suf;\n      }\n\n      mp += suf;\n    }\n\n    props.onChange(path.normalize(mp));\n  }, [prefix, suffix]);\n\n  const onToggle = (isOpen) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect = (event, selection) => {\n    setPrefix(selection);\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <Select\n        className=\"pf-u-w-50\"\n        isOpen={isOpen}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        selections={prefix}\n        variant={SelectVariant.single}\n      >\n        {validPrefixes.map((pfx, index) => {\n          return <SelectOption key={index} value={pfx} />;\n        })}\n      </Select>\n      {prefix !== '/' && (\n        <TextInput\n          className=\"pf-u-w-50\"\n          type=\"text\"\n          value={suffix}\n          aria-label=\"Mount point suffix text input\"\n          onChange={(v) => setSuffix(v)}\n        />\n      )}\n    </>\n  );\n};\n\nMountPoint.propTypes = {\n  mountpoint: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default MountPoint;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport { UNIT_GIB, UNIT_KIB, UNIT_MIB } from '../../../constants';\n\nconst SizeUnit = ({ ...props }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [unit, setUnit] = useState(props.unit || UNIT_GIB);\n  const [size, setSize] = useState(props.size || 1);\n\n  useEffect(() => {\n    props.onChange(size, unit);\n  }, [unit, size]);\n\n  const onToggle = (isOpen) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect = (event, selection) => {\n    switch (selection) {\n      case 'KiB':\n        setUnit(UNIT_KIB);\n        break;\n      case 'MiB':\n        setUnit(UNIT_MIB);\n        break;\n      case 'GiB':\n        setUnit(UNIT_GIB);\n        break;\n    }\n\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <TextInput\n        className=\"pf-u-w-50\"\n        type=\"text\"\n        value={size}\n        aria-label=\"Size text input\"\n        onChange={(v) => setSize(isNaN(parseInt(v)) ? 0 : parseInt(v))}\n      />\n      <Select\n        className=\"pf-u-w-50\"\n        isOpen={isOpen}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        selections={\n          unit === UNIT_KIB ? 'KiB' : unit === UNIT_MIB ? 'MiB' : 'GiB'\n        }\n        variant={SelectVariant.single}\n        aria-label=\"Unit select\"\n      >\n        {['KiB', 'MiB', 'GiB'].map((u, index) => {\n          return <SelectOption key={index} value={u} />;\n        })}\n      </Select>\n    </>\n  );\n};\n\nSizeUnit.propTypes = {\n  size: PropTypes.number.isRequired,\n  unit: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SizeUnit;\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  HelpIcon,\n  MinusCircleIcon,\n  PlusCircleIcon,\n} from '@patternfly/react-icons';\nimport {\n  Alert,\n  Button,\n  Popover,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport MountPoint from './MountPoint';\nimport SizeUnit from './SizeUnit';\nimport { UNIT_GIB } from '../../../constants';\n\nlet initialRow = {\n  id: uuidv4(),\n  mountpoint: '/',\n  fstype: 'xfs',\n  size: 10,\n  unit: UNIT_GIB,\n};\n\nconst FileSystemConfiguration = ({ ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [draggedItemId, setDraggedItemId] = useState(null);\n  const [draggingToItemIndex, setDraggingToItemIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [itemOrder, setItemOrder] = useState([initialRow.id]);\n  const [tempItemOrder, setTempItemOrder] = useState([]);\n  const bodyref = useRef();\n  const [rows, setRows] = useState([initialRow]);\n\n  useEffect(() => {\n    const fsc = getState()?.values?.['file-system-configuration'];\n    if (!fsc) {\n      return;\n    }\n\n    const newRows = [];\n    const newOrder = [];\n    fsc.map((r) => {\n      const id = uuidv4();\n      newRows.push({\n        id,\n        mountpoint: r.mountpoint,\n        fstype: 'xfs',\n        size: r.size,\n        unit: r.unit,\n      });\n      newOrder.push(id);\n    });\n    setRows(newRows);\n    setItemOrder(newOrder);\n  }, []);\n\n  const showErrors = () =>\n    getState()?.values?.['file-system-config-show-errors'];\n\n  useEffect(() => {\n    change(\n      input.name,\n      itemOrder.map((r) => {\n        for (const r2 of rows) {\n          if (r2.id === r) {\n            return {\n              mountpoint: r2.mountpoint,\n              size: r2.size,\n              unit: r2.unit,\n            };\n          }\n        }\n      })\n    );\n  }, [rows, itemOrder]);\n\n  const addRow = () => {\n    const id = uuidv4();\n    setRows(\n      rows.concat([\n        {\n          id,\n          mountpoint: '/home',\n          fstype: 'xfs',\n          size: 1,\n          unit: UNIT_GIB,\n        },\n      ])\n    );\n    setItemOrder(itemOrder.concat([id]));\n  };\n\n  const removeRow = (id) => {\n    let removeIndex = rows.map((e) => e.id).indexOf(id);\n    let newRows = [...rows];\n    newRows.splice(removeIndex, 1);\n\n    let removeOrderIndex = itemOrder.indexOf(id);\n    let newOrder = [...itemOrder];\n    newOrder.splice(removeOrderIndex, 1);\n\n    setRows(newRows);\n    setItemOrder(newOrder);\n  };\n\n  const moveItem = (arr, i1, toIndex) => {\n    const fromIndex = arr.indexOf(i1);\n    if (fromIndex === toIndex) {\n      return arr;\n    }\n\n    const temp = arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, temp[0]);\n    return arr;\n  };\n\n  const move = (itemOrder) => {\n    const ulNode = bodyref.current;\n    const nodes = Array.from(ulNode.children);\n    if (nodes.map((node) => node.id).every((id, i) => id === itemOrder[i])) {\n      return;\n    }\n\n    while (ulNode.firstChild) {\n      ulNode.removeChild(ulNode.lastChild);\n    }\n\n    itemOrder.forEach((id) => {\n      ulNode.appendChild(nodes.find((n) => n.id === id));\n    });\n  };\n\n  const onDragOver = (evt) => {\n    evt.preventDefault();\n\n    const curListItem = evt.target.closest('tr');\n    if (!curListItem || !bodyref.current.contains(curListItem)) {\n      return null;\n    }\n\n    const dragId = curListItem.id;\n    const newDraggingToItemIndex = Array.from(\n      bodyref.current.children\n    ).findIndex((item) => item.id === dragId);\n    if (newDraggingToItemIndex !== draggingToItemIndex) {\n      const tempItemOrder = moveItem(\n        [...itemOrder],\n        draggedItemId,\n        newDraggingToItemIndex\n      );\n      move(tempItemOrder);\n      setDraggingToItemIndex(newDraggingToItemIndex);\n      setTempItemOrder(tempItemOrder);\n    }\n  };\n\n  const isValidDrop = (evt) => {\n    const ulRect = bodyref.current.getBoundingClientRect();\n    return (\n      evt.clientX > ulRect.x &&\n      evt.clientX < ulRect.x + ulRect.width &&\n      evt.clientY > ulRect.y &&\n      evt.clientY < ulRect.y + ulRect.height\n    );\n  };\n\n  const onDragLeave = (evt) => {\n    if (!isValidDrop(evt)) {\n      move(itemOrder);\n      setDraggingToItemIndex(null);\n    }\n  };\n\n  const onDrop = (evt) => {\n    if (isValidDrop(evt)) {\n      setItemOrder(tempItemOrder);\n    }\n  };\n\n  const onDragStart = (evt) => {\n    evt.dataTransfer.effectAllowed = 'move';\n    evt.dataTransfer.setData('text/plain', evt.currentTarget.id);\n    evt.currentTarget.classList.add(styles.modifiers.ghostRow);\n    evt.currentTarget.setAttribute('aria-pressed', 'true');\n    setDraggedItemId(evt.currentTarget.id);\n    setIsDragging(true);\n  };\n\n  const onDragEnd = (evt) => {\n    evt.target.classList.remove(styles.modifiers.ghostRow);\n    evt.target.setAttribute('aria-pressed', 'false');\n    setDraggedItemId(null);\n    setDraggingToItemIndex(null);\n    setIsDragging(false);\n  };\n\n  const setMountpoint = (id, mp) => {\n    let newRows = [...rows];\n    for (let i = 0; i < newRows.length; i++) {\n      if (newRows[i].id === id) {\n        let newRow = { ...newRows[i] };\n        newRow.mountpoint = mp;\n        newRows.splice(i, 1, newRow);\n        break;\n      }\n    }\n\n    setRows(newRows);\n  };\n\n  const setSize = (id, s, u) => {\n    let newRows = [...rows];\n    for (let i = 0; i < newRows.length; i++) {\n      if (newRows[i].id === id) {\n        let newRow = { ...newRows[i] };\n        newRow.size = s;\n        newRow.unit = u;\n        newRows.splice(i, 1, newRow);\n        break;\n      }\n    }\n\n    setRows(newRows);\n  };\n\n  return (\n    <FormSpy>\n      {() => (\n        <>\n          <TextContent>\n            <Text component={TextVariants.h3}>Configure partitions</Text>\n          </TextContent>\n          {rows.length > 1 &&\n            getState()?.errors?.['file-system-configuration']?.duplicates\n              ?.length !== 0 &&\n            showErrors() && (\n              <Alert\n                variant=\"danger\"\n                isInline\n                title=\"Duplicate mount points: All mount points must be unique. Remove the duplicate or choose a new mount point.\"\n                data-testid=\"fsc-warning\"\n              />\n            )}\n          {rows.length >= 1 &&\n            getState()?.errors?.['file-system-configuration']?.root === false &&\n            showErrors() && (\n              <Alert\n                variant=\"danger\"\n                isInline\n                title=\"No root partition configured.\"\n              />\n            )}\n          <TextContent>\n            <Text>\n              Partitions have been generated and given default values based on\n              best practices from Red Hat, and your selections in previous steps\n              of the wizard.\n            </Text>\n          </TextContent>\n          <TableComposable\n            aria-label=\"File system table\"\n            className={isDragging && styles.modifiers.dragOver}\n            variant=\"compact\"\n          >\n            <Thead>\n              <Tr>\n                <Th />\n                <Th>Mount point</Th>\n                <Th>Type</Th>\n                <Th>\n                  Minimum size\n                  <Popover\n                    hasAutoWidth\n                    bodyContent={\n                      <TextContent>\n                        <Text>\n                          Image Builder may extend this size based on\n                          requirements, selected packages, and configurations.\n                        </Text>\n                      </TextContent>\n                    }\n                  >\n                    <Button\n                      variant=\"plain\"\n                      aria-label=\"File system configuration info\"\n                      aria-describedby=\"file-system-configuration-info\"\n                      className=\"pf-c-form__group-label-help\"\n                    >\n                      <HelpIcon />\n                    </Button>\n                  </Popover>\n                </Th>\n                <Th />\n              </Tr>\n            </Thead>\n            <Tbody\n              ref={bodyref}\n              onDragOver={onDragOver}\n              onDrop={onDragOver}\n              onDragLeave={onDragLeave}\n              data-testid=\"file-system-configuration-tbody\"\n            >\n              {rows.map((row, rowIndex) => (\n                <Tr\n                  key={rowIndex}\n                  id={row.id}\n                  draggable\n                  onDrop={onDrop}\n                  onDragEnd={onDragEnd}\n                  onDragStart={onDragStart}\n                >\n                  <Td\n                    draggableRow={{\n                      id: `draggable-row-${row.id}`,\n                    }}\n                  />\n                  <Td className=\"pf-m-width-30\">\n                    <MountPoint\n                      key={row.id + '-mountpoint'}\n                      mountpoint={row.mountpoint}\n                      onChange={(mp) => setMountpoint(row.id, mp)}\n                    />\n                    {getState().errors['file-system-configuration']?.duplicates\n                      .length !== 0 &&\n                      getState().errors[\n                        'file-system-configuration'\n                      ]?.duplicates.indexOf(row.mountpoint) !== -1 &&\n                      showErrors() && (\n                        <Alert\n                          variant=\"danger\"\n                          isInline\n                          isPlain\n                          title=\"Duplicate mount point.\"\n                        />\n                      )}\n                  </Td>\n                  <Td className=\"pf-m-width-20\">\n                    {/* always xfs */}\n                    {row.fstype}\n                  </Td>\n                  <Td className=\"pf-m-width-30\">\n                    <SizeUnit\n                      key={row.id + '-sizeunit'}\n                      size={row.size}\n                      unit={row.unit}\n                      onChange={(s, u) => setSize(row.id, s, u)}\n                    />\n                  </Td>\n                  <Td className=\"pf-m-width-10\">\n                    <Button\n                      variant=\"link\"\n                      icon={<MinusCircleIcon />}\n                      onClick={() => removeRow(row.id)}\n                      data-testid=\"remove-mount-point\"\n                    />\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </TableComposable>\n          <TextContent>\n            <Button\n              data-testid=\"file-system-add-partition\"\n              className=\"pf-u-text-align-left\"\n              variant=\"link\"\n              icon={<PlusCircleIcon />}\n              onClick={addRow}\n            >\n              Add partition\n            </Button>\n          </TextContent>\n        </>\n      )}\n    </FormSpy>\n  );\n};\n\nexport default FileSystemConfiguration;\n","import React, { useEffect, useState } from 'react';\nimport { ToggleGroup, ToggleGroupItem } from '@patternfly/react-core';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nconst FileSystemConfigToggle = ({ ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [selected, setSelected] = useState(\n    getState()?.values?.['file-system-config-toggle'] || 'auto'\n  );\n\n  useEffect(() => {\n    change(input.name, selected);\n  }, [selected]);\n\n  const onClick = (_, evt) => {\n    setSelected(evt.currentTarget.id);\n  };\n\n  return (\n    <>\n      <ToggleGroup\n        data-testid=\"fsc-paritioning-toggle\"\n        aria-label=\"Automatic partitioning toggle\"\n      >\n        <ToggleGroupItem\n          onChange={onClick}\n          text=\"Use automatic partitioning\"\n          buttonId=\"auto\"\n          isSelected={selected === 'auto'}\n        />\n        <ToggleGroupItem\n          onChange={onClick}\n          text=\"Manually configure partitions\"\n          buttonId=\"manual\"\n          isSelected={selected === 'manual'}\n          data-testid=\"file-system-config-toggle-manual\"\n        />\n      </ToggleGroup>\n    </>\n  );\n};\n\nexport default FileSystemConfigToggle;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { RELEASES } from '../../../constants';\nimport isRhel from '../../../Utilities/isRhel';\n\nconst ImageOutputReleaseSelect = ({ label, isRequired, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [isOpen, setIsOpen] = useState(false);\n  const [showDevelopmentOptions, setShowDevelopmentOptions] = useState(false);\n\n  const setRelease = (_, selection) => {\n    change(input.name, selection);\n    setIsOpen(false);\n  };\n\n  const handleClear = () => {\n    change(input.name, null);\n    setShowDevelopmentOptions(false);\n  };\n\n  const handleExpand = () => {\n    setShowDevelopmentOptions(true);\n  };\n\n  return (\n    <FormGroup isRequired={isRequired} label={label}>\n      <Select\n        variant={SelectVariant.single}\n        onToggle={() => setIsOpen(!isOpen)}\n        onSelect={setRelease}\n        onClear={handleClear}\n        selections={RELEASES[getState()?.values?.[input.name]]}\n        isOpen={isOpen}\n        {...(!showDevelopmentOptions && {\n          loadingVariant: {\n            text: 'Show options for further development of RHEL',\n            onClick: handleExpand,\n          },\n        })}\n      >\n        {Object.entries(RELEASES)\n          .filter(([key]) => {\n            // Only show non-RHEL distros if expanded\n            if (showDevelopmentOptions) {\n              return true;\n            }\n\n            return isRhel(key);\n          })\n          .map(([key, release], index) => {\n            return (\n              <SelectOption key={index} value={key}>\n                {release}\n              </SelectOption>\n            );\n          })}\n      </Select>\n    </FormGroup>\n  );\n};\n\nImageOutputReleaseSelect.propTypes = {\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n};\n\nexport default ImageOutputReleaseSelect;\n","import React from 'react';\nimport { Alert, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst DeveloperProgramButton = () => {\n  return (\n    <Button\n      component=\"a\"\n      target=\"_blank\"\n      variant=\"link\"\n      icon={<ExternalLinkAltIcon />}\n      iconPosition=\"right\"\n      isInline\n      href={'https://developers.redhat.com/about'}\n    >\n      Red Hat Developer Program\n    </Button>\n  );\n};\n\nconst CentOSAcknowledgement = () => {\n  return (\n    <Alert\n      variant=\"info\"\n      isPlain\n      isInline\n      title={\n        <>\n          CentOS Stream builds are intended for the development of future\n          versions of RHEL and are not supported for production workloads or\n          other use cases.\n        </>\n      }\n    >\n      <p>\n        Join the <DeveloperProgramButton /> to learn about paid and no-cost RHEL\n        subscription options.\n      </p>\n    </Alert>\n  );\n};\n\nexport default CentOSAcknowledgement;\n","import React from 'react';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Select from '@data-driven-forms/pf4-component-mapper/select';\nimport Review from './formComponents/ReviewStep';\nimport TargetEnvironment from './formComponents/TargetEnvironment';\nimport Packages from './formComponents/Packages';\nimport RadioWithPopover from './formComponents/RadioWithPopover';\nimport AzureAuthButton from './formComponents/AzureAuthButton';\nimport ActivationKeys from './formComponents/ActivationKeys';\nimport FileSystemConfiguration from './formComponents/FileSystemConfiguration';\nimport FileSystemConfigToggle from './formComponents/FileSystemConfigToggle';\nimport ImageOutputReleaseSelect from './formComponents/ImageOutputReleaseSelect';\nimport CentOSAcknowledgement from './formComponents/CentOSAcknowledgement';\n\nconst ImageCreator = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  customValidatorMapper,\n  defaultArch,\n  className,\n  ...props\n}) => {\n  return schema ? (\n    <FormRenderer\n      initialValues={props.initialValues}\n      schema={schema}\n      className={`image-builder${className ? ` ${className}` : ''}`}\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      validatorMapper={{ ...customValidatorMapper }}\n      componentMapper={{\n        ...componentMapper,\n        review: Review,\n        output: TargetEnvironment,\n        select: Select,\n        'package-selector': {\n          component: Packages,\n          defaultArch,\n        },\n        'radio-popover': RadioWithPopover,\n        'azure-auth-button': AzureAuthButton,\n        'activation-keys': ActivationKeys,\n        'file-system-config-toggle': FileSystemConfigToggle,\n        'file-system-configuration': FileSystemConfiguration,\n        'image-output-release-select': ImageOutputReleaseSelect,\n        'centos-acknowledgement': CentOSAcknowledgement,\n        ...customComponentMapper,\n      }}\n      onCancel={onClose}\n      {...props}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nImageCreator.propTypes = {\n  schema: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  customValidatorMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.func,\n  }),\n  defaultArch: PropTypes.string,\n  className: PropTypes.string,\n  initialValues: PropTypes.object,\n};\n\nexport default ImageCreator;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { HelperText, HelperTextItem, Title } from '@patternfly/react-core';\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\nimport { DEFAULT_AWS_REGION } from '../../../constants';\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-target-aws',\n  title: 'Amazon Web Services',\n  customTitle: (\n    <Title headingLevel=\"h1\" size=\"xl\">\n      Target environment - Amazon Web Services\n    </Title>\n  ),\n  name: 'aws-target-env',\n  substepOf: 'Target environment',\n  nextStep: ({ values }) => nextStepMapper(values, { skipAws: true }),\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text-component',\n      label: (\n        <p>\n          Your image will be uploaded to AWS and shared with the account you\n          provide below.\n        </p>\n      ),\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text-component',\n      label: (\n        <p>\n          <b>The shared image will expire within 14 days.</b> To permanently\n          access the image, copy the image, which will be shared to your account\n          by Red Hat, to your own AWS account.\n        </p>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'aws-account-id',\n      className: 'pf-u-w-25',\n      'data-testid': 'aws-account-id',\n      type: 'text',\n      label: 'AWS account ID',\n      isRequired: true,\n      autoFocus: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.EXACT_LENGTH,\n          threshold: 12,\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'aws-default-region',\n      className: 'pf-u-w-25',\n      'data-testid': 'aws-default-region',\n      type: 'text',\n      label: 'Default Region',\n      value: DEFAULT_AWS_REGION,\n      isReadOnly: true,\n      isRequired: true,\n      helperText: (\n        <HelperText>\n          <HelperTextItem\n            component=\"div\"\n            variant=\"indeterminate\"\n            className=\"pf-u-w-25\"\n          >\n            Images are built in the default region but can be copied to other\n            regions later.\n          </HelperTextItem>\n        </HelperText>\n      ),\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Button, Text, TextContent, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-target-msazure',\n  title: 'Microsoft Azure',\n  customTitle: (\n    <Title headingLevel=\"h1\" size=\"xl\">\n      Target environment - Microsoft Azure\n    </Title>\n  ),\n  name: 'ms-azure-target-env',\n  substepOf: 'Target environment',\n  nextStep: ({ values }) =>\n    nextStepMapper(values, {\n      skipAws: true,\n      skipGoogle: true,\n      skipAzure: true,\n    }),\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'azure-description',\n      label: (\n        <TextContent>\n          <Text>\n            Upon build, Image Builder sends the image to the selected authorized\n            Azure account. The image will be uploaded to the resource group in\n            the subscription you specify.\n          </Text>\n          <Text>\n            To authorize Image Builder to push images to Microsoft Azure, the\n            account owner must configure Image Builder as an authorized\n            application for a specific tenant ID and give it the role of\n            &quot;Contributor&quot; to at least one resource group.\n            <br />\n            <Button\n              component=\"a\"\n              target=\"_blank\"\n              variant=\"link\"\n              icon={<ExternalLinkAltIcon />}\n              iconPosition=\"right\"\n              isInline\n              href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow\"\n            >\n              Learn more about OAuth 2.0\n            </Button>\n          </Text>\n        </TextContent>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'azure-tenant-id',\n      className: 'pf-u-w-50',\n      'data-testid': 'azure-tenant-id',\n      type: 'text',\n      label: 'Azure Tenant GUID',\n      required: true,\n      isRequired: true,\n      autoFocus: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern:\n            /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i,\n          message: 'Please enter a valid tenant ID',\n        },\n      ],\n    },\n    {\n      component: 'azure-auth-button',\n      name: 'azure-auth-button',\n      'data-testid': 'azure-auth-button',\n      required: true,\n      isRequired: true,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'azure-subscription-id',\n      className: 'pf-u-w-50',\n      'data-testid': 'azure-subscription-id',\n      type: 'text',\n      label: 'Subscription ID',\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern:\n            /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i,\n          message: 'Please enter a valid subscription ID',\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'azure-resource-group',\n      className: 'pf-u-w-50',\n      'data-testid': 'azure-resource-group',\n      type: 'text',\n      label: 'Resource group',\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[-\\w._()]+[-\\w_()]$/,\n          message:\n            'Resource group names only allow alphanumeric characters, ' +\n            'periods, underscores, hyphens, and parenthesis and cannot end in a period',\n        },\n      ],\n    },\n    // TODO check oauth2 thing too here?\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport StepTemplate from './stepTemplate';\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-systemconfiguration-packages',\n  title: 'Additional packages',\n  name: 'packages',\n  substepOf: 'System configuration',\n  nextStep: 'image-name',\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'packages-text-component',\n      label: (\n        <Text>\n          Images built with Image Builder include all required packages.\n          <br />\n          You can add additional packages to your image by searching\n          &quot;Available packages&quot; and adding them to the &quot;Chosen\n          packages&quot; list.\n        </Text>\n      ),\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  Button,\n  Popover,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, HelpIcon } from '@patternfly/react-icons';\nimport StepTemplate from './stepTemplate';\nimport CustomButtons from '../formComponents/CustomButtons';\n\nconst PopoverActivation = () => {\n  return (\n    <Popover\n      hasAutoWidth\n      maxWidth=\"35rem\"\n      bodyContent={\n        <TextContent>\n          <Text>\n            Activation keys allow you to register a system with appropriate\n            subscriptions and system purpose attached.\n          </Text>\n        </TextContent>\n      }\n    >\n      <Button\n        variant=\"plain\"\n        aria-label=\"Activation key popover\"\n        aria-describedby=\"subscription-activation-key\"\n        className=\"pf-c-form__group-label-help\"\n      >\n        <HelpIcon />\n      </Button>\n    </Popover>\n  );\n};\n\nexport default {\n  StepTemplate,\n  id: 'wizard-registration',\n  title: 'Registration',\n  name: 'registration',\n  nextStep: 'File system configuration',\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.RADIO,\n      label: 'Register images with Red Hat',\n      name: 'register-system',\n      initialValue: 'register-now-insights',\n      options: [\n        {\n          label: 'Register and connect image instances with Red Hat',\n          description: 'Includes Subscriptions and Red Hat Insights',\n          value: 'register-now-insights',\n          'data-testid': 'radio-register-now-insights',\n          autoFocus: true,\n        },\n        {\n          label: 'Register image instances only',\n          description: 'Includes Subscriptions only',\n          value: 'register-now',\n          className: 'pf-u-mt-sm',\n          'data-testid': 'radio-register-now',\n        },\n        {\n          label: 'Register later',\n          value: 'register-later',\n          className: 'pf-u-mt-sm',\n          'data-testid': 'radio-register-later',\n        },\n      ],\n    },\n    {\n      component: 'activation-keys',\n      name: 'subscription-activation-key',\n      required: true,\n      label: (\n        <>\n          Activation key to use for this image\n          <PopoverActivation />\n        </>\n      ),\n      condition: {\n        or: [\n          { when: 'register-system', is: 'register-now-insights' },\n          { when: 'register-system', is: 'register-now' },\n        ],\n      },\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'subscription-activation-description',\n      label: (\n        <>\n          Create and manage activation keys in the&nbsp;\n          <Button\n            component=\"a\"\n            target=\"_blank\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            isInline\n            href=\"https://access.redhat.com/\"\n          >\n            Customer Portal\n          </Button>\n        </>\n      ),\n      condition: {\n        or: [\n          { when: 'register-system', is: 'register-now-insights' },\n          { when: 'register-system', is: 'register-now' },\n        ],\n      },\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'subscription-register-later',\n      label: (\n        <TextContent>\n          <Text component={TextVariants.h3}>Register Later</Text>\n          <Text>\n            On initial boot, systems will need to be registered manually before\n            having access to updates or Red Hat services.\n          </Text>\n          <Text>Registering now is recommended.</Text>\n        </TextContent>\n      ),\n      condition: {\n        or: [{ when: 'register-system', is: 'register-later' }],\n      },\n    },\n  ],\n};\n","import StepTemplate from './stepTemplate';\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-review',\n  name: 'review',\n  title: 'Review',\n  buttons: CustomButtons,\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Text } from '@patternfly/react-core';\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\nimport { RHEL_9 } from '../../../constants.js';\nimport DocumentationButton from '../../sharedComponents/DocumentationButton';\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-imageoutput',\n  title: 'Image output',\n  name: 'image-output',\n  nextStep: ({ values }) => nextStepMapper(values),\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'image-output-plain-text',\n      label: (\n        <Text>\n          Image builder allows you to create a custom image and push it to\n          target environments.\n          <br />\n          <DocumentationButton />\n        </Text>\n      ),\n    },\n    {\n      component: 'image-output-release-select',\n      label: 'Release',\n      name: 'release',\n      initialValue: RHEL_9,\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n    {\n      component: 'centos-acknowledgement',\n      name: 'centos-acknowledgement',\n      condition: {\n        when: 'release',\n        pattern: /centos-*/,\n        then: { set: { 'register-system': null } },\n        else: { visible: false },\n      },\n    },\n    {\n      component: 'output',\n      name: 'target-environment',\n      label: 'Select target environments',\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: 'targetEnvironmentValidator',\n        },\n      ],\n    },\n  ],\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useFormApi } from '@data-driven-forms/react-form-renderer';\nimport { Button } from '@patternfly/react-core';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport PropTypes from 'prop-types';\n\n// FileSystemconfigButtons are defined separately to display errors inside of the button footer\nconst FileSystemConfigButtons = ({ handleNext, handlePrev, nextStep }) => {\n  const { currentStep, formOptions } = useContext(WizardContext);\n  const { change, getState } = useFormApi();\n  const [hasErrors, setHasErrors] = useState(\n    getState()?.errors?.['file-system-configuration'] ? true : false\n  );\n  const [nextHasBeenClicked, setNextHasBeenClicked] = useState(false);\n\n  useEffect(() => {\n    const errors = getState()?.errors?.['file-system-configuration'];\n    errors ? setHasErrors(true) : setHasErrors(false);\n\n    if (!errors) {\n      setNextHasBeenClicked(false);\n      change('file-system-config-show-errors', false);\n    }\n  });\n\n  const handleClick = () => {\n    if (!hasErrors) {\n      handleNext(nextStep);\n    }\n\n    setNextHasBeenClicked(true);\n    change('file-system-config-show-errors', true);\n  };\n\n  return (\n    <>\n      <Button\n        id={`${currentStep.id}-next-button`}\n        variant=\"primary\"\n        type=\"button\"\n        isDisabled={hasErrors && nextHasBeenClicked}\n        onClick={handleClick}\n      >\n        Next\n      </Button>\n      <Button\n        id={`${currentStep.id}-previous-button`}\n        variant=\"secondary\"\n        type=\"button\"\n        onClick={handlePrev}\n      >\n        Back\n      </Button>\n      <div className=\"pf-c-wizard__footer-cancel\">\n        <Button\n          id={`${currentStep.id}-cancel-button`}\n          type=\"button\"\n          variant=\"link\"\n          onClick={formOptions.onCancel}\n        >\n          Cancel\n        </Button>\n      </div>\n    </>\n  );\n};\n\nFileSystemConfigButtons.propTypes = {\n  handleNext: PropTypes.func,\n  handlePrev: PropTypes.func,\n  nextStep: PropTypes.string,\n};\n\nexport default FileSystemConfigButtons;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Text } from '@patternfly/react-core';\nimport StepTemplate from './stepTemplate';\nimport FileSystemConfigButtons from '../formComponents/FileSystemConfigButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-systemconfiguration-filesystem',\n  title: 'File system configuration',\n  name: 'File system configuration',\n  buttons: FileSystemConfigButtons,\n  substepOf: 'System configuration',\n  nextStep: 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'file-system-configuration-text-component',\n      label: (\n        <>\n          <Text>\n            Red Hat recommends using automatic partitioning for most\n            installations.\n          </Text>\n          <Text>\n            Alternatively, you may manually configure the file system of your\n            image by adding, removing, and editing partitions.\n          </Text>\n        </>\n      ),\n    },\n    {\n      component: 'file-system-config-toggle',\n      name: 'file-system-config-toggle',\n      label: 'File system configurations toggle',\n    },\n    {\n      component: 'file-system-configuration',\n      name: 'file-system-configuration',\n      label: 'File system configurations',\n      validate: [\n        { type: 'fileSystemConfigurationValidator' },\n        { type: validatorTypes.REQUIRED },\n      ],\n      condition: {\n        when: 'file-system-config-toggle',\n        is: 'manual',\n      },\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport StepTemplate from './stepTemplate';\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-details',\n  name: 'image-name',\n  title: 'Name image',\n  nextStep: 'review',\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text-component',\n      label: (\n        <p>\n          Optionally enter a name for your image. All images will have a UUID.\n        </p>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'image-name',\n      type: 'text',\n      label: 'Image name',\n      autoFocus: true,\n      validate: [\n        {\n          type: validatorTypes.MAX_LENGTH,\n          threshold: 100,\n        },\n      ],\n    },\n  ],\n};\n","const FileSystemConfigurationValidator = () => (fsc) => {\n  if (!fsc) {\n    return undefined;\n  }\n\n  let mpFreqs = {};\n  for (const fs of fsc) {\n    const mp = fs.mountpoint;\n    if (mp in mpFreqs) {\n      mpFreqs[mp]++;\n    } else {\n      mpFreqs[mp] = 1;\n    }\n  }\n\n  let duplicates = [];\n  for (const [k, v] of Object.entries(mpFreqs)) {\n    if (v > 1) {\n      duplicates.push(k);\n    }\n  }\n\n  let root = mpFreqs['/'] >= 1;\n  return duplicates.length === 0 && root\n    ? undefined\n    : {\n        duplicates: duplicates === [] ? undefined : duplicates,\n        root,\n      };\n};\n\nexport default FileSystemConfigurationValidator;\n","const TargetEnvironmentValidator = () => (targets) => {\n  if (!targets) {\n    return undefined;\n  }\n\n  // at least one of the target environments must\n  // be set to true. This reduces the value to\n  // a single boolean which is a flag for whether\n  // at least one target has been selected or not\n  let valid = Object.values(targets).reduce(\n    (prev, curr) => curr || prev,\n    false\n  );\n  return !valid ? 'Please select an image' : undefined;\n};\n\nexport default TargetEnvironmentValidator;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useDispatch } from 'react-redux';\nimport ImageCreator from './ImageCreator';\nimport {\n  awsTarget,\n  fileSystemConfiguration,\n  googleCloudTarger,\n  imageName,\n  imageOutput,\n  msAzureTarget,\n  packages,\n  registration,\n  review,\n} from './steps';\nimport {\n  fileSystemConfigurationValidator,\n  targetEnvironmentValidator,\n} from './validators';\nimport { composeAdded } from '../../store/composesSlice';\nimport DocumentationButton from '../sharedComponents/DocumentationButton';\nimport './CreateImageWizard.scss';\nimport api from '../../api';\nimport { UNIT_GIB, UNIT_KIB, UNIT_MIB } from '../../constants';\nimport isRhel from '../../Utilities/isRhel';\nimport { resolveRelPath } from '../../Utilities/path';\n\nconst handleKeyDown = (e, handleClose) => {\n  if (e.key === 'Escape') {\n    handleClose();\n  }\n};\n\nconst onSave = (values) => {\n  let customizations = {\n    packages: values['selected-packages']?.map((p) => p.name),\n  };\n\n  if (values['register-system'] === 'register-now-insights') {\n    customizations.subscription = {\n      'activation-key': values['subscription-activation-key'],\n      insights: true,\n      organization: Number(values['subscription-organization-id']),\n      'server-url': values['subscription-server-url'],\n      'base-url': values['subscription-base-url'],\n    };\n  } else if (values['register-system'] === 'register-now') {\n    customizations.subscription = {\n      'activation-key': values['subscription-activation-key'],\n      insights: false,\n      organization: Number(values['subscription-organization-id']),\n      'server-url': values['subscription-server-url'],\n      'base-url': values['subscription-base-url'],\n    };\n  }\n\n  if (values['file-system-config-toggle'] === 'manual') {\n    customizations.filesystem = [];\n    for (let fsc of values['file-system-configuration']) {\n      customizations.filesystem.push({\n        mountpoint: fsc.mountpoint,\n        min_size: fsc.size * fsc.unit,\n      });\n    }\n  }\n\n  let requests = [];\n  if (values['target-environment']?.aws) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'ami',\n          upload_request: {\n            type: 'aws',\n            options: {\n              share_with_accounts: [values['aws-account-id']],\n            },\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.gcp) {\n    let share = '';\n    switch (values['google-account-type']) {\n      case 'googleAccount':\n        share = `user:${values['google-email']}`;\n        break;\n      case 'serviceAccount':\n        share = `serviceAccount:${values['google-email']}`;\n        break;\n      case 'googleGroup':\n        share = `group:${values['google-email']}`;\n        break;\n      case 'domain':\n        share = `domain:${values['google-domain']}`;\n        break;\n    }\n\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'gcp',\n          upload_request: {\n            type: 'gcp',\n            options: {\n              share_with_accounts: [share],\n            },\n          },\n        },\n      ],\n      customizations,\n    };\n\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.azure) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'vhd',\n          upload_request: {\n            type: 'azure',\n            options: {\n              tenant_id: values['azure-tenant-id'],\n              subscription_id: values['azure-subscription-id'],\n              resource_group: values['azure-resource-group'],\n            },\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.vsphere) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'vsphere',\n          upload_request: {\n            type: 'aws.s3',\n            options: {},\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.['guest-image']) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'guest-image',\n          upload_request: {\n            type: 'aws.s3',\n            options: {},\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.['image-installer']) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'image-installer',\n          upload_request: {\n            type: 'aws.s3',\n            options: {},\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  return requests;\n};\n\nconst parseSizeUnit = (bytesize) => {\n  let size;\n  let unit;\n\n  if (bytesize % UNIT_GIB === 0) {\n    size = bytesize / UNIT_GIB;\n    unit = UNIT_GIB;\n  } else if (bytesize % UNIT_MIB === 0) {\n    size = bytesize / UNIT_MIB;\n    unit = UNIT_MIB;\n  } else if (bytesize % UNIT_KIB === 0) {\n    size = bytesize / UNIT_KIB;\n    unit = UNIT_KIB;\n  }\n\n  return [size, unit];\n};\n\nconst getPackageDescription = async (release, arch, packageName) => {\n  let pack;\n  // if the env is stage beta then use content-sources api\n  // else use image-builder api\n  if (!insights.chrome.isProd() && insights.chrome.isBeta()) {\n    const args = [release, packageName];\n    const data = await api.getPackagesContentSources(...args);\n\n    pack = data.find((pack) => packageName === pack.name);\n  } else {\n    const args = [release, arch, packageName];\n    let { data, meta } = await api.getPackages(...args);\n\n    // the package should be found in the 0 index\n    // if not then fetch all package matches and search for the package\n    if (data[0]?.name === packageName) {\n      pack = data[0];\n    } else {\n      if (data?.length !== meta.count) {\n        ({ data } = await api.getPackages(...args, meta.count));\n      }\n\n      pack = data.find((pack) => packageName === pack.name);\n    }\n  }\n  const summary = pack?.summary;\n  // if no matching package is found return an empty string for description\n  return summary || '';\n};\n\n// map the compose request object to the expected form state\nconst requestToState = (composeRequest) => {\n  if (composeRequest) {\n    const imageRequest = composeRequest.image_requests[0];\n    const uploadRequest = imageRequest.upload_request;\n    let formState = {};\n\n    formState['image-name'] = composeRequest.image_name;\n\n    formState.release = composeRequest?.distribution;\n    // set defaults for target environment first\n    formState['target-environment'] = {\n      aws: false,\n      azure: false,\n      gcp: false,\n      'guest-image': false,\n    };\n    // then select the one from the request\n    // if the image type is to a cloud provider we use the upload_request.type\n    // or if the image is intended for download we use the image_type\n    let targetEnvironment;\n    if (uploadRequest.type === 'aws.s3') {\n      targetEnvironment = imageRequest.image_type;\n    } else {\n      targetEnvironment = uploadRequest.type;\n    }\n\n    formState['target-environment'][targetEnvironment] = true;\n\n    if (targetEnvironment === 'aws') {\n      formState['aws-account-id'] =\n        uploadRequest?.options?.share_with_accounts[0];\n    } else if (targetEnvironment === 'azure') {\n      formState['azure-tenant-id'] = uploadRequest?.options?.tenant_id;\n      formState['azure-subscription-id'] =\n        uploadRequest?.options?.subscription_id;\n      formState['azure-resource-group'] =\n        uploadRequest?.options?.resource_group;\n    } else if (targetEnvironment === 'gcp') {\n      // parse google account info\n      // roughly in the format `accountType:accountEmail`\n      const accountInfo = uploadRequest?.options?.share_with_accounts[0];\n      const [accountTypePrefix, account] = accountInfo.split(':');\n\n      switch (accountTypePrefix) {\n        case 'user':\n          formState['google-account-type'] = 'googleAccount';\n          formState['google-email'] = account;\n          break;\n        case 'serviceAccount':\n          formState['google-account-type'] = 'serviceAccount';\n          formState['google-email'] = account;\n          break;\n        case 'group':\n          formState['google-account-type'] = 'googleGroup';\n          formState['google-email'] = account;\n          break;\n        case 'domain':\n          formState['google-account-type'] = 'domain';\n          formState['google-domain'] = account;\n          break;\n      }\n    }\n\n    // customizations\n    // packages\n    let packs = [];\n    composeRequest?.customizations?.packages?.forEach(async (packName) => {\n      const packageDescription = await getPackageDescription(\n        composeRequest?.distribution,\n        imageRequest?.architecture,\n        packName\n      );\n      const pack = {\n        name: packName,\n        summary: packageDescription,\n      };\n      packs.push(pack);\n    });\n    formState['selected-packages'] = packs;\n\n    // filesystem\n    const fs = composeRequest?.customizations?.filesystem;\n    if (fs) {\n      formState['file-system-config-toggle'] = 'manual';\n      let fileSystemConfiguration = [];\n      for (let fsc of fs) {\n        const [size, unit] = parseSizeUnit(fsc.min_size);\n        fileSystemConfiguration.push({\n          mountpoint: fsc.mountpoint,\n          size,\n          unit,\n        });\n      }\n\n      formState['file-system-configuration'] = fileSystemConfiguration;\n    }\n\n    // subscription\n    const subscription = composeRequest?.customizations?.subscription;\n    if (subscription) {\n      if (subscription.insights) {\n        formState['register-system'] = 'register-now-insights';\n      } else {\n        formState['register-system'] = 'register-now';\n      }\n\n      formState['subscription-activation-key'] = subscription['activation-key'];\n      formState['subscription-organization-id'] = subscription.organization;\n\n      if (insights.chrome.isProd()) {\n        formState['subscription-server-url'] = 'subscription.rhsm.redhat.com';\n        formState['subscription-base-url'] = 'https://cdn.redhat.com/';\n      } else {\n        formState['subscription-server-url'] =\n          'subscription.rhsm.stage.redhat.com';\n        formState['subscription-base-url'] = 'https://cdn.stage.redhat.com/';\n      }\n    } else {\n      formState['register-system'] = 'register-later';\n    }\n\n    return formState;\n  } else {\n    return;\n  }\n};\n\nconst formStepHistory = (composeRequest) => {\n  if (composeRequest) {\n    const imageRequest = composeRequest.image_requests[0];\n    const uploadRequest = imageRequest.upload_request;\n    let steps = ['image-output'];\n\n    if (uploadRequest.type === 'aws') {\n      steps.push('aws-target-env');\n    } else if (uploadRequest.type === 'azure') {\n      steps.push('azure-target-env');\n    } else if (uploadRequest.type === 'gcp') {\n      steps.push('google-cloud-target-env');\n    }\n\n    if (isRhel(composeRequest?.distribution)) {\n      steps.push('registration');\n    }\n\n    steps = steps.concat([\n      'File system configuration',\n      'packages',\n      'image-name',\n    ]);\n\n    return steps;\n  } else {\n    return [];\n  }\n};\n\nconst CreateImageWizard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const composeRequest = location?.state?.composeRequest;\n  const initialState = requestToState(composeRequest);\n  const stepHistory = formStepHistory(composeRequest);\n\n  const handleClose = () => navigate(resolveRelPath(''));\n\n  return (\n    <ImageCreator\n      onClose={handleClose}\n      onSubmit={({ values, setIsSaving }) => {\n        setIsSaving(() => true);\n        const requests = onSave(values);\n        Promise.all(\n          requests.map((request) =>\n            api.composeImage(request).then((response) => {\n              dispatch(\n                composeAdded({\n                  compose: {\n                    ...response,\n                    request,\n                    image_status: { status: 'pending' },\n                  },\n                  insert: true,\n                })\n              );\n            })\n          )\n        )\n          .then(() => {\n            navigate(resolveRelPath(''));\n            dispatch(\n              addNotification({\n                variant: 'success',\n                title: 'Your image is being created',\n              })\n            );\n\n            setIsSaving(false);\n          })\n          .catch((err) => {\n            dispatch(\n              addNotification({\n                variant: 'danger',\n                title: 'Your image could not be created',\n                description:\n                  'Status code ' +\n                  err.response.status +\n                  ': ' +\n                  err.response.statusText,\n              })\n            );\n\n            setIsSaving(false);\n          });\n      }}\n      defaultArch=\"x86_64\"\n      customValidatorMapper={{\n        fileSystemConfigurationValidator,\n        targetEnvironmentValidator,\n      }}\n      schema={{\n        fields: [\n          {\n            component: componentTypes.WIZARD,\n            name: 'image-builder-wizard',\n            className: 'image_builder',\n            isDynamic: true,\n            inModal: true,\n            onKeyDown: (e) => {\n              handleKeyDown(e, handleClose);\n            },\n            buttonLabels: {\n              submit: 'Create image',\n            },\n            showTitles: true,\n            title: 'Create image',\n            crossroads: ['target-environment', 'release'],\n            description: (\n              <>\n                Image builder allows you to create a custom image and push it to\n                target environments. <DocumentationButton />\n              </>\n            ),\n            // order in this array does not reflect order in wizard nav, this order is managed inside\n            // of each step by `nextStep` property!\n            fields: [\n              imageOutput,\n              awsTarget,\n              googleCloudTarger,\n              msAzureTarget,\n              registration,\n              packages,\n              fileSystemConfiguration,\n              imageName,\n              review,\n            ],\n            initialState: {\n              activeStep: location?.state?.initialStep || 'image-output', // name of the active step\n              activeStepIndex: stepHistory.length, // active index\n              maxStepIndex: stepHistory.length, // max achieved index\n              prevSteps: stepHistory, // array with names of previously visited steps\n            },\n          },\n        ],\n      }}\n      initialValues={initialState}\n    />\n  );\n};\n\nexport default CreateImageWizard;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst DocumentationButton = () => {\n  const documentationURL =\n    'https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/creating_customized_rhel_images_using_the_image_builder_service/index';\n\n  return (\n    <Button\n      component=\"a\"\n      target=\"_blank\"\n      variant=\"link\"\n      icon={<ExternalLinkAltIcon />}\n      iconPosition=\"right\"\n      isInline\n      href={documentationURL}\n    >\n      Documentation\n    </Button>\n  );\n};\n\nexport default DocumentationButton;\n"],"names":["activationKey","getState","useFormApi","values","useState","undefined","role","setRole","serviceLevel","setServiceLevel","usage","setUsage","additionalRepositories","setRepositories","useEffect","fetchKeyInformation","api","data","TextContent","TextList","component","TextListVariants","TextListItem","TextListItemVariants","Popover","bodyContent","Text","Button","variant","className","isSmall","length","TextVariants","TableComposable","Thead","Tr","Th","Tbody","map","repo","index","key","Td","repositoryLabel","distro","RHEL_8","RHEL_9","targetEnv","release","skipAws","skipGoogle","skipAzure","aws","gcp","azure","isRhel","StepTemplate","id","formFields","formRef","title","customTitle","showTitle","showTitles","ref","Title","headingLevel","size","propTypes","PropTypes","formOptions","renderForm","isRequired","current","Element","CustomButtons","buttonLabels","cancel","next","submit","back","handleNext","handlePrev","nextStep","isSaving","setIsSaving","useContext","WizardContext","currentStep","onNextOrSubmit","onSubmit","type","isDisabled","valid","validating","isLoading","onClick","onCancel","googleAccType","googleAccount","serviceAccount","googleGroup","domain","PopoverInfo","appendTo","hasAutoWidth","maxWidth","headerContent","flipBehavior","name","substepOf","nextStepMapper","buttons","fields","componentTypes","label","initialValue","options","Object","entries","value","autoFocus","validate","validatorTypes","condition","or","when","is","pattern","message","FSReviewTable","props","fsc","r","ri","mountpoint","unit","UNIT_GIB","UNIT_MIB","activeTabKey","setActiveTabKey","minSize","setMinSize","change","registerSystem","insights","chrome","auth","getUser","userData","identity","internal","org_id","toFixed","DescriptionList","isCompact","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","RELEASES","Tabs","isFilled","activeKey","onSelect","event","tabIndex","Tab","eventKey","TabTitleText","List","isPlain","iconSize","ListItem","icon","src","vsphere","Spinner","position","minWidth","TargetEnvironment","input","useFieldApi","environment","setEnvironment","handleSetEnvironment","env","prevEnv","newEnv","handleKeyDown","e","FormGroup","Tile","onKeyDown","isSelected","isStacked","isDisplayLarge","Checkbox","isChecked","onChange","defaultProps","Packages","defaultArch","packagesSearchName","setPackagesSearchName","filterAvailable","setFilterAvailable","filterChosen","setFilterChosen","packagesAvailable","setPackagesAvailable","packagesAvailableFound","setPackagesAvailableFound","packagesChosen","setPackagesChosen","packagesChosenFound","setPackagesChosenFound","focus","setFocus","selectedPackages","searchResultsComparator","useCallback","searchTerm","a","b","toLowerCase","startsWith","setPackagesAvailableSorted","packageList","filter","sortResults","sort","setPackagesChosenSorted","filterPackagesAvailable","availablePackage","some","chosenPackage","getAllPackages","isProd","isBeta","args","architecture","meta","count","handlePackagesAvailableSearch","packagesAvailableFiltered","keydownHandler","stopPropagation","document","addEventListener","removeEventListener","areFound","pack","includes","isHidden","updateState","updatedPackagesAvailable","updatedPackagesChosen","summary","onOptionSelect","isChosen","newChosen","selected","newAvailable","firstInputElement","useRef","DualListSelector","DualListSelectorPane","searchInput","SearchInput","placeholder","onFocus","onBlur","val","submitSearchButtonLabel","onSearch","resetButtonLabel","onClear","DualListSelectorList","DualListSelectorListItem","DualListSelectorControlsWrapper","DualListSelectorControl","option","newPackagesChosen","push","tooltipContent","newPackagesAvailable","found","filteredPackagesChosen","handlePackagesChosenSearch","RadioWithPopover","tenantId","guidRegex","RegExp","target","test","href","ActivationKeys","activationKeys","setActivationKeys","isOpen","setIsOpen","setIsLoading","activationKeySelected","selectActivationKey","then","keys","Select","SelectVariant","onToggle","_","selection","selections","placeholderText","typeAheadAriaLabel","SelectOption","isNoResultsOption","isSVG","MountPoint","validPrefixes","prefix","setPrefix","suffix","setSuffix","p","substring","suf","mp","path","pfx","TextInput","v","SizeUnit","setUnit","setSize","isNaN","parseInt","UNIT_KIB","u","initialRow","uuidv4","fstype","draggedItemId","setDraggedItemId","draggingToItemIndex","setDraggingToItemIndex","isDragging","setIsDragging","itemOrder","setItemOrder","tempItemOrder","setTempItemOrder","bodyref","rows","setRows","newRows","newOrder","showErrors","r2","addRow","concat","move","ulNode","nodes","Array","from","children","node","every","i","firstChild","removeChild","lastChild","forEach","appendChild","find","n","onDragOver","evt","preventDefault","curListItem","closest","contains","dragId","newDraggingToItemIndex","findIndex","item","arr","i1","toIndex","fromIndex","indexOf","temp","splice","moveItem","isValidDrop","ulRect","getBoundingClientRect","clientX","x","width","clientY","y","height","onDragLeave","onDrop","onDragStart","dataTransfer","effectAllowed","setData","currentTarget","classList","add","styles","setAttribute","onDragEnd","remove","errors","duplicates","Alert","isInline","root","row","rowIndex","draggable","draggableRow","newRow","setMountpoint","s","removeIndex","removeOrderIndex","removeRow","setSelected","ToggleGroup","ToggleGroupItem","text","buttonId","ImageOutputReleaseSelect","showDevelopmentOptions","setShowDevelopmentOptions","loadingVariant","DeveloperProgramButton","iconPosition","ImageCreator","schema","onClose","customComponentMapper","customValidatorMapper","initialValues","subscription","FormTemplate","showFormControls","formValues","validatorMapper","componentMapper","review","Review","output","select","AzureAuthButton","FileSystemConfigToggle","FileSystemConfiguration","CentOSAcknowledgement","threshold","DEFAULT_AWS_REGION","isReadOnly","helperText","HelperText","HelperTextItem","required","PopoverActivation","description","DocumentationButton","set","else","visible","FileSystemConfigButtons","hasErrors","setHasErrors","nextHasBeenClicked","setNextHasBeenClicked","mpFreqs","k","targets","reduce","prev","curr","parseSizeUnit","bytesize","getPackageDescription","arch","packageName","dispatch","useDispatch","navigate","useNavigate","location","useLocation","composeRequest","state","initialState","targetEnvironment","imageRequest","image_requests","uploadRequest","upload_request","formState","image_name","distribution","image_type","share_with_accounts","tenant_id","subscription_id","resource_group","split","accountTypePrefix","account","packs","customizations","packages","packName","packageDescription","fs","filesystem","fileSystemConfiguration","min_size","organization","requestToState","stepHistory","steps","formStepHistory","handleClose","resolveRelPath","requests","Number","request","share","onSave","Promise","all","response","composeAdded","compose","image_status","status","insert","addNotification","err","statusText","fileSystemConfigurationValidator","targetEnvironmentValidator","isDynamic","inModal","crossroads","imageOutput","awsTarget","googleCloudTarger","msAzureTarget","registration","imageName","activeStep","initialStep","activeStepIndex","maxStepIndex","prevSteps"],"sourceRoot":""}