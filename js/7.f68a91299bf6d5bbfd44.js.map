{"version":3,"sources":["webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepImageOutput.scss","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepReview.scss","webpack:///./src/SmartComponents/CreateImageWizard/CreateImageWizard.scss","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepImageOutput.scss?1601","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepReview.scss?a1e2","webpack:///./src/SmartComponents/CreateImageWizard/CreateImageWizard.scss?837f","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepImageOutput.js","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepUploadAWS.js","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepPackages.js","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepRegistration.js","webpack:///./src/PresentationalComponents/CreateImageWizard/WizardStepReview.js","webpack:///./src/SmartComponents/CreateImageWizard/CreateImageWizard.js"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","WizardStepImageOutput","props","Form","Title","headingLevel","size","FormGroup","isRequired","label","fieldId","FormSelect","value","onChange","setRelease","aria-label","id","data-testid","map","option","FormSelectOption","className","Tile","title","icon","src","onClick","toggleUploadDestination","isSelected","uploadDestinations","aws","isStacked","isDisplayLarge","azure","isDisabled","google","propTypes","toggleUploadAWS","PropTypes","func","object","string","WizardStepUploadAWS","helperTextInvalid","errors","validated","TextInput","uploadAWS","share_with_accounts","type","setUploadOptions","Object","assign","WizardStepPackages","availableOptionsActions","Button","handlePackagesSearch","TextContent","Text","release","DualListSelector","isSearchable","availableOptions","packagesAvailableComponents","chosenOptions","packagesFilteredComponents","addSelected","packageListChange","removeSelected","addAll","removeAll","onAvailableOptionsSearchInputChanged","setPackagesSearchName","onChosenOptionsSearchInputChanged","handlePackagesFilter","filterOption","arrayOf","WizardStepRegistration","Radio","name","isChecked","subscribeNow","setSubscribeNow","subscription","organization","setSubscription","bool","WizardStepReview","awsReview","TextList","component","TextListVariants","dl","TextListItem","TextListItemVariants","dt","uploadAWSErrors","dd","subscriptionReview","subscriptionErrors","repeat","length","keys","Alert","variant","isInline","TextVariants","small","h3","CreateImageWizard","bind","mapPackagesToComponent","onStep","onSave","onClose","validate","validateUploadAmazon","validateSubscription","state","arch","imageType","uploadAzure","temp","uploadGoogle","insights","uploadAzureErrors","uploadGoogleErrors","packagesSelectedComponents","packagesSelectedNames","packagesSearchName","chrome","auth","getUser","user","this","setState","Number","identity","internal","org_id","step","share","isNaN","provider","prevState","uploadOptions","packages","pack","summary","children","api","getPackages","then","response","packageComponents","data","filter","filteredPackages","mapComponentToPackageName","includes","newAvailablePackages","newChosenPackages","chosenNames","requests","forEach","request","distribution","image_requests","architecture","image_type","upload_requests","customizations","composeRequests","composeRequest","composeImage","compose","image_status","status","updateCompose","Promise","all","history","StepImageOutput","StepUploadAWS","uploadDestinationSteps","StepTargetEnv","steps","nextButtonText","Fragment","Wizard","onNext","onGoToStep","isOpen","Component","connect","dispatch","actions","withRouter"],"mappings":"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","file":"js/7.f68a91299bf6d5bbfd44.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".tiles{display:flex}.tile{flex:1 0 0px}.pf-c-tile:focus{--pf-c-tile__title--Color: var(--pf-c-tile__title--Color);--pf-c-tile__icon--Color: var(---pf-global--Color--100);--pf-c-tile--before--BorderWidth: var(--pf-global--BorderWidth--sm);--pf-c-tile--before--BorderColor: var(--pf-global--BorderColor--100)}.pf-c-tile.pf-m-selected:focus{--pf-c-tile__title--Color: var(--pf-c-tile--focus__title--Color);--pf-c-tile__icon--Color: var(--pf-c-tile--focus__icon--Color);--pf-c-tile--before--BorderWidth: var(--pf-c-tile--focus--before--BorderWidth);--pf-c-tile--before--BorderColor: var(--pf-c-tile--focus--before--BorderColor)}.provider-icon{width:1em;height:1em}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".error{color:var(--pf-global--danger-color--100)}.pf-c-content h3{margin-top:var(--pf-global--spacer--xl)}@media screen and (min-width: 576px){.pf-c-content dl{grid-template:1fr / 25% 1fr;grid-gap:var(--pf-global--spacer--sm)}}#destination-header{font-size:18px;margin-bottom:var(--pf-global--spacer--sm)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-wizard__nav-list{padding-right:0px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepImageOutput.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepImageOutput.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepImageOutput.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepReview.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepReview.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./WizardStepReview.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form, FormGroup, FormSelect, FormSelectOption, Tile, Title } from '@patternfly/react-core';\n\nimport './WizardStepImageOutput.scss';\n\nconst WizardStepImageOutput = (props) => {\n    const releaseOptions = [\n        { value: 'rhel-8', label: 'Red Hat Enterprise Linux (RHEL) 8.3' },\n        { value: 'centos-8', label: 'CentOS Stream 8' },\n    ];\n\n    return (\n        <>\n            <Form>\n                <Title headingLevel=\"h2\" size=\"xl\">Image output</Title>\n                <FormGroup isRequired label=\"Release\" fieldId=\"release-select\">\n                    <FormSelect value={ props.value } onChange={ value => props.setRelease(value) } isRequired\n                        aria-label=\"Select release input\" id=\"release-select\" data-testid=\"release-select\">\n                        { releaseOptions.map(option => <FormSelectOption key={ option.value } value={ option.value } label={ option.label } />) }\n                    </FormSelect>\n                </FormGroup>\n                <FormGroup isRequired label=\"Select target environment\" data-testid=\"target-select\">\n                    <div className=\"tiles\">\n                        <Tile\n                            className=\"tile pf-u-mr-sm\"\n                            data-testid=\"upload-aws\"\n                            title=\"Amazon Web Services\"\n                            icon={ <img\n                                className='provider-icon'\n                                src={ '/apps/frontend-assets/partners-icons/aws.svg' } /> }\n                            onClick={ () => props.toggleUploadDestination('aws') }\n                            isSelected={ props.uploadDestinations.aws }\n                            isStacked\n                            isDisplayLarge />\n                        <Tile\n                            className=\"tile pf-u-mr-sm\"\n                            data-testid=\"upload-azure\"\n                            title=\"Microsoft Azure\"\n                            icon={ <img\n                                className='provider-icon'\n                                src={ '/apps/frontend-assets/partners-icons/microsoft-azure-short.svg' } /> }\n                            onClick={ () => props.toggleUploadDestination('azure') }\n                            isSelected={ props.uploadDestinations.azure }\n                            isStacked\n                            isDisplayLarge\n                            isDisabled />\n                        <Tile\n                            className=\"tile\"\n                            data-testid=\"upload-google\"\n                            title=\"Google Cloud Platform\"\n                            icon={ <img\n                                className='provider-icon'\n                                src={ '/apps/frontend-assets/partners-icons/google-cloud-short.svg' } /> }\n                            onClick={ () => props.toggleUploadDestination('google') }\n                            isSelected={ props.uploadDestinations.google }\n                            isStacked\n                            isDisplayLarge\n                            isDisabled />\n                    </div>\n                </FormGroup>\n            </Form>\n        </>\n    );\n};\n\nWizardStepImageOutput.propTypes = {\n    toggleUploadAWS: PropTypes.func,\n    uploadDestinations: PropTypes.object,\n    setRelease: PropTypes.func,\n    value: PropTypes.string,\n    toggleUploadDestination: PropTypes.func,\n};\n\nexport default WizardStepImageOutput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form, FormGroup, TextInput, Title } from '@patternfly/react-core';\n\nconst WizardStepUploadAWS = (props) => {\n    return (\n        <Form>\n            <Title headingLevel=\"h2\" size=\"xl\">Target Environment - Upload to AWS</Title>\n            <p>\n            Your image will be uploaded to a temporary account on Amazon Web Services. <br />\n            The image will be shared with the account you provide below. <br />\n            Within the next 14 days you will need to copy the shared image to your own account.\n            After 14 days it will be unavailable and will have to be regenerated.\n            </p>\n            <FormGroup isRequired label=\"AWS account ID\" fieldId=\"aws-account-id\"\n                helperTextInvalid={ (props.errors['aws-account-id'] && props.errors['aws-account-id'].value) || '' }\n                validated={ (props.errors['aws-account-id'] && 'error') || 'default' }>\n                <TextInput value={ props.uploadAWS.options.share_with_accounts || '' }\n                    type=\"text\" aria-label=\"AWS account ID\" id=\"aws-account-id\"\n                    data-testid=\"aws-account-id\" isRequired\n                    onChange={ value =>\n                        props.setUploadOptions('aws', Object.assign(props.uploadAWS.options, { share_with_accounts: [ value ]})) } />\n            </FormGroup>\n        </Form>\n    );\n};\n\nWizardStepUploadAWS.propTypes = {\n    setUploadOptions: PropTypes.func,\n    uploadAWS: PropTypes.object,\n    errors: PropTypes.object,\n};\n\nexport default WizardStepUploadAWS;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, DualListSelector, Text, TextContent, Title } from '@patternfly/react-core';\n\nconst WizardStepPackages = (props) => {\n    const availableOptionsActions = [\n        <Button\n            aria-label=\"Search button for available packages\"\n            key=\"availableSearchButton\"\n            onClick={ props.handlePackagesSearch }>\n            Search\n        </Button>\n    ];\n\n    return (\n        <>\n            <TextContent>\n                <Title headingLevel=\"h2\" size=\"xl\">Additional packages</Title>\n                <Text>Optionally add additional packages to your <strong>{props.release}</strong> image</Text>\n            </TextContent>\n            <DualListSelector\n                className=\"pf-u-mt-sm\"\n                isSearchable\n                availableOptionsActions={ availableOptionsActions }\n                availableOptions={ props.packagesAvailableComponents }\n                chosenOptions={ props.packagesFilteredComponents }\n                addSelected={ props.packageListChange }\n                removeSelected={ props.packageListChange }\n                addAll={ props.packageListChange }\n                removeAll= { props.packageListChange }\n                onAvailableOptionsSearchInputChanged={ props.setPackagesSearchName }\n                onChosenOptionsSearchInputChanged={ props.handlePackagesFilter }\n                filterOption={ () => true }\n                id=\"basicSelectorWithSearch\" />\n        </>\n    );\n};\n\nWizardStepPackages.propTypes = {\n    packageListChange: PropTypes.func,\n    release: PropTypes.string,\n    packagesAvailableComponents: PropTypes.arrayOf(PropTypes.object),\n    packagesFilteredComponents: PropTypes.arrayOf(PropTypes.object),\n    handlePackagesSearch: PropTypes.func,\n    handlePackagesFilter: PropTypes.func,\n    setPackagesSearchName: PropTypes.func,\n};\n\nexport default WizardStepPackages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form, FormGroup, TextInput, Radio, Title } from '@patternfly/react-core';\n\nconst WizardStepRegistration = (props) => {\n    return (\n        <Form>\n            <Title headingLevel=\"h2\" size=\"xl\">Registration</Title>\n            <FormGroup isRequired label=\"Register the system\">\n                <Radio name=\"subscribe-now-radio\" isChecked={ props.subscribeNow } id=\"subscribe-now-radio\"\n                    label=\"Embed an activation key and register systems on first boot\"\n                    onChange={ () => props.setSubscribeNow(true) }\n                    data-testid=\"register-now-radio-button\" />\n                <Radio name=\"subscribe-later-radio\" isChecked={ !props.subscribeNow }\n                    label=\"Register the system later\" id=\"subscribe-later-radio\"\n                    onChange={ () => props.setSubscribeNow(false) }\n                    data-testid=\"register-later-radio-button\" />\n            </FormGroup>\n            { props.subscribeNow &&\n              <>\n                  <FormGroup label=\"Organization ID\" fieldId=\"subscription-organization\">\n                      <TextInput isDisabled value={ props.subscription.organization || '' } type=\"text\"\n                          id=\"subscription-organization\" aria-label=\"Subscription organization ID\"\n                          data-testid=\"organization-id\" />\n                  </FormGroup>\n                  <FormGroup isRequired label=\"Activation key\" fieldId=\"subscription-activation\"\n                      helperTextInvalid={ (props.errors['subscription-activation'] && props.errors['subscription-activation'].value) || '' }\n                      validated={ (props.errors['subscription-activation'] && 'error') || 'default' }>\n                      <TextInput value={ props.subscription['activation-key'] || '' } type=\"password\"\n                          data-testid=\"subscription-activation\" isRequired\n                          id=\"subscription-activation\" aria-label=\"Subscription activation key\"\n                          onChange={ value => props.setSubscription(Object.assign(props.subscription, { 'activation-key': value })) } />\n                  </FormGroup>\n              </> }\n        </Form>\n    );\n};\n\nWizardStepRegistration.propTypes = {\n    setSubscription: PropTypes.func,\n    setSubscribeNow: PropTypes.func,\n    subscription: PropTypes.object,\n    subscribeNow: PropTypes.bool,\n    errors: PropTypes.object,\n};\n\nexport default WizardStepRegistration;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Alert,\n    Text, TextVariants, TextContent, TextList, TextListVariants, TextListItem, TextListItemVariants,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport './WizardStepReview.scss';\n\nconst WizardStepReview = (props) => {\n    const releaseLabels = {\n        'rhel-8': 'Red Hat Enterprise Linux (RHEL) 8.3',\n        'centos-8': 'CentOS Stream 8'\n    };\n\n    const awsReview = (\n        <>\n            <Text id=\"destination-header\">Amazon Web Services</Text>\n            <TextList component={ TextListVariants.dl } data-testid='review-image-upload-aws'>\n                <TextListItem component={ TextListItemVariants.dt }>Account ID</TextListItem>\n                {props.uploadAWSErrors['aws-account-id'] ? (\n                    <TextListItem component={ TextListItemVariants.dd }>\n                        <ExclamationCircleIcon className=\"error\" /> { props.uploadAWSErrors['aws-account-id'].value }\n                    </TextListItem>\n                ) : (\n                    <TextListItem component={ TextListItemVariants.dd }>{props.uploadAWS.options.share_with_accounts[0]}</TextListItem>\n                )}\n            </TextList>\n        </>\n    );\n\n    let subscriptionReview = <TextListItem component={ TextListItemVariants.dd }>Register the system later</TextListItem>;\n    if (props.subscribeNow) {\n        subscriptionReview = (<>\n            <TextListItem component={ TextListItemVariants.dd }>Register the system on first boot</TextListItem>\n            <TextListItem component={ TextListItemVariants.dt }>Activation key</TextListItem>\n            { props.subscriptionErrors['subscription-activation'] ? (\n                <TextListItem component={ TextListItemVariants.dd }>\n                    <ExclamationCircleIcon className=\"error\" /> { props.subscriptionErrors['subscription-activation'].value }\n                </TextListItem>\n            ) : (\n                <TextListItem component={ TextListItemVariants.dd } type=\"password\">\n                    {'*'.repeat(props.subscription['activation-key'].length)}\n                </TextListItem>\n            )}\n        </>);\n    }\n\n    return (\n        <>\n            { (Object.keys(props.uploadAWSErrors).length > 0 ||\n               Object.keys(props.subscriptionErrors).length > 0) &&\n              <Alert variant=\"danger\" className=\"pf-u-mb-xl\" isInline title=\"Required information is missing\" /> }\n            <Title headingLevel=\"h2\" size=\"xl\">Review</Title>\n            <TextContent>\n                <Text component={ TextVariants.small }>\n                    Review the information and click Create image\n                    to create the image using the following criteria.\n                </Text>\n                <Text component={ TextVariants.h3 }>Image output</Text>\n                <TextList component={ TextListVariants.dl } data-testid='review-image-output'>\n                    <TextListItem component={ TextListItemVariants.dt }>Release</TextListItem>\n                    <TextListItem component={ TextListItemVariants.dd }>{releaseLabels[props.release]}</TextListItem>\n                </TextList>\n                <Text component={ TextVariants.h3 }>Target environment</Text>\n                {props.uploadDestinations.aws && awsReview }\n                <Text component={ TextVariants.h3 }>Registration</Text>\n                <TextList component={ TextListVariants.dl } data-testid='review-image-registration'>\n                    <TextListItem component={ TextListItemVariants.dt }>Subscription</TextListItem>\n                    { subscriptionReview }\n                </TextList>\n            </TextContent>\n        </>\n    );\n};\n\nWizardStepReview.propTypes = {\n    release: PropTypes.string,\n    uploadAWS: PropTypes.object,\n    uploadDestinations: PropTypes.object,\n    subscription: PropTypes.object,\n    subscribeNow: PropTypes.bool,\n    uploadAWSErrors: PropTypes.object,\n    subscriptionErrors: PropTypes.object,\n};\n\nexport default WizardStepReview;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from '../redux';\n\nimport { Wizard, TextContent } from '@patternfly/react-core';\n\nimport WizardStepImageOutput from '../../PresentationalComponents/CreateImageWizard/WizardStepImageOutput';\nimport WizardStepUploadAWS from '../../PresentationalComponents/CreateImageWizard/WizardStepUploadAWS';\nimport WizardStepPackages from '../../PresentationalComponents/CreateImageWizard/WizardStepPackages';\nimport WizardStepRegistration from '../../PresentationalComponents/CreateImageWizard/WizardStepRegistration';\nimport WizardStepReview from '../../PresentationalComponents/CreateImageWizard/WizardStepReview';\n\nimport api from './../../api.js';\nimport './CreateImageWizard.scss';\n\nclass CreateImageWizard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePackagesSearch = this.handlePackagesSearch.bind(this);\n        this.handlePackagesFilter = this.handlePackagesFilter.bind(this);\n        this.packageListChange = this.packageListChange.bind(this);\n        this.mapPackagesToComponent = this.mapPackagesToComponent.bind(this);\n        this.setRelease = this.setRelease.bind(this);\n        this.setUploadOptions = this.setUploadOptions.bind(this);\n        this.setSubscription = this.setSubscription.bind(this);\n        this.setSubscribeNow = this.setSubscribeNow.bind(this);\n        this.setPackagesSearchName = this.setPackagesSearchName.bind(this);\n        this.toggleUploadDestination = this.toggleUploadDestination.bind(this);\n        this.onStep = this.onStep.bind(this);\n        this.onSave = this.onSave.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.validate = this.validate.bind(this);\n        this.validateUploadAmazon = this.validateUploadAmazon.bind(this);\n        this.validateSubscription = this.validateSubscription.bind(this);\n\n        this.state = {\n            arch: 'x86_64',\n            imageType: 'qcow2',\n            release: 'rhel-8',\n            uploadAWS: {\n                type: 'aws',\n                options: {\n                    share_with_accounts: []\n                }\n            },\n            uploadAzure: {\n                type: 'azure',\n                options: {\n                    temp: ''\n                }\n            },\n            uploadGoogle: {\n                type: 'google',\n                options: {\n                    temp: ''\n                }\n            },\n            uploadDestinations: {\n                aws: false,\n                azure: false,\n                google: false\n            },\n            subscription: {\n                organization: null,\n                'activation-key': null,\n                'server-url': 'subscription.rhsm.redhat.com',\n                'base-url': 'https://cdn.redhat.com/',\n                insights: true\n            },\n            subscribeNow: true,\n            /* errors take form of $fieldId: error */\n            uploadAWSErrors: {},\n            uploadAzureErrors: {},\n            uploadGoogleErrors: {},\n            subscriptionErrors: {},\n            packagesAvailableComponents: [],\n            packagesSelectedComponents: [],\n            packagesFilteredComponents: [],\n            packagesSelectedNames: [],\n            packagesSearchName: '',\n        };\n    }\n\n    async componentDidMount() {\n        let user = await insights.chrome.auth.getUser();\n        this.setState({\n            subscription: {\n                organization: Number(user.identity.internal.org_id)\n            }\n        });\n    }\n\n    onStep(step) {\n        if (step.name === 'Review') {\n            this.validate();\n        }\n    }\n\n    validate() {\n        if (this.state.uploadDestinations.aws) {this.validateUploadAmazon();}\n        else {\n            this.setState({\n                uploadAWSErrors: {},\n                uploadAzureErrors: {},\n                uploadGoogleErrors: {},\n            });\n        }\n\n        /* subscription */\n        if (this.state.subscribeNow) {\n            this.validateSubscription();\n        } else {\n            this.setState({ subscriptionErrors: {}});\n        }\n    }\n\n    validateUploadAmazon() {\n        let uploadAWSErrors = {};\n        let share = this.state.uploadAWS.options.share_with_accounts;\n        if (share.length === 0 || share[0].length !== 12 || isNaN(share[0])) {\n            uploadAWSErrors['aws-account-id'] =\n                { label: 'AWS account ID', value: 'A 12-digit number is required' };\n        }\n\n        this.setState({ uploadAWSErrors });\n    }\n\n    validateSubscription() {\n        let subscriptionErrors = {};\n        if (!this.state.subscription['activation-key']) {\n            subscriptionErrors['subscription-activation'] =\n                { label: 'Activation key', value: 'A value is required' };\n        }\n\n        this.setState({ subscriptionErrors });\n    }\n\n    setRelease(release) {\n        this.setState({ release });\n    }\n\n    toggleUploadDestination(provider) {\n        this.setState(prevState => ({\n            ...prevState,\n            uploadDestinations: {\n                ...prevState.uploadDestinations,\n                [provider]: !prevState.uploadDestinations[provider]\n            }\n        }));\n    }\n\n    setUploadOptions(provider, uploadOptions) {\n        switch (provider) {\n            case 'aws':\n                this.setState({\n                    uploadAWS: {\n                        type: provider,\n                        options: uploadOptions\n                    }\n                });\n                break;\n            case 'azure':\n                this.setState({\n                    uploadAzure: {\n                        type: provider,\n                        options: uploadOptions\n                    }\n                });\n                break;\n            case 'google':\n                this.setState({\n                    uploadGoogle: {\n                        type: provider,\n                        options: uploadOptions\n                    }\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    setSubscribeNow(subscribeNow) {\n        this.setState({ subscribeNow });\n    }\n\n    setSubscription(subscription) {\n        this.setState({ subscription }, this.validate);\n    }\n\n    setPackagesSearchName(packagesSearchName) {\n        this.setState({ packagesSearchName });\n    }\n\n    mapPackagesToComponent(packages) {\n        return packages.map((pack) =>\n            <TextContent key={ pack }>\n                <span className=\"pf-c-dual-list-selector__item-text\">{ pack.name }</span>\n                <small>{ pack.summary }</small>\n            </TextContent>\n        );\n    }\n\n    // this digs into the component properties to extract the package name\n    mapComponentToPackageName(component) {\n        return component.props.children[0].props.children;\n    }\n\n    handlePackagesSearch() {\n        api.getPackages(this.state.release, this.state.arch, this.state.packagesSearchName).then(response => {\n            const packageComponents = this.mapPackagesToComponent(response.data);\n            this.setState({\n                packagesAvailableComponents: packageComponents\n            });\n        });\n    };\n\n    handlePackagesFilter(filter) {\n        const filteredPackages = this.state.packagesSelectedComponents.filter(component => {\n            const name = this.mapComponentToPackageName(component);\n            return name.includes(filter);\n        });\n        this.setState({\n            packagesFilteredComponents: filteredPackages\n        });\n    }\n\n    packageListChange(newAvailablePackages, newChosenPackages) {\n        const chosenNames = newChosenPackages.map(component => this.mapComponentToPackageName(component));\n        this.setState({\n            packagesAvailableComponents: newAvailablePackages,\n            packagesSelectedComponents: newChosenPackages,\n            packagesFilteredComponents: newChosenPackages,\n            packagesSelectedNames: chosenNames\n        });\n    }\n\n    onSave () {\n        let requests = [];\n        Object.keys(this.state.uploadDestinations).forEach(provider => {\n            switch (provider) {\n                case 'aws': {\n                    let request = {\n                        distribution: this.state.release,\n                        image_requests: [\n                            {\n                                architecture: this.state.arch,\n                                image_type: 'ami',\n                                upload_requests: [ this.state.uploadAWS ],\n                            }],\n                        customizations: {\n                            subscription: this.state.subscription,\n                            packages: this.state.packagesSelectedNames,\n                        },\n                    };\n                    requests.push(request);\n                    break;\n                }\n\n                case 'azure':\n                    break;\n                case 'google':\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const composeRequests = [];\n        requests.forEach(request => {\n            const composeRequest = api.composeImage(request).then(response => {\n                let compose = {};\n                compose[response.id] = {\n                    image_status: {\n                        status: 'pending',\n                    },\n                    distribution: request.distribution,\n                    architecture: request.image_requests[0].architecture,\n                    image_type: request.image_requests[0].image_type,\n                };\n                this.props.updateCompose(compose);\n            });\n            composeRequests.push(composeRequest);\n        });\n        Promise.all(composeRequests).then(() => this.props.history.push('/landing'));\n    }\n\n    onClose () {\n        this.props.history.push('/landing');\n    }\n\n    render() {\n        const StepImageOutput = {\n            name: 'Image output',\n            component: <WizardStepImageOutput\n                value={ this.state.release }\n                setRelease={ this.setRelease }\n                toggleUploadDestination={ this.toggleUploadDestination }\n                uploadDestinations={ this.state.uploadDestinations } />\n        };\n\n        const StepUploadAWS = {\n            name: 'Amazon Web Services',\n            component: <WizardStepUploadAWS\n                uploadAWS={ this.state.uploadAWS }\n                setUploadOptions={ this.setUploadOptions }\n                errors={ this.state.uploadAWSErrors } />\n        };\n\n        const StepUploadAzure = {\n            name: 'Microsoft Azure'\n        };\n\n        const StepUploadGoogle = {\n            name: 'Google Cloud Platform'\n        };\n\n        const uploadDestinationSteps = [];\n        if (this.state.uploadDestinations.aws) {\n            uploadDestinationSteps.push(StepUploadAWS);\n        }\n\n        if (this.state.uploadDestinations.azure) {\n            uploadDestinationSteps.push(StepUploadAzure);\n        }\n\n        if (this.state.uploadDestinations.google) {\n            uploadDestinationSteps.push(StepUploadGoogle);\n        }\n\n        const StepTargetEnv = {\n            name: 'Target environment',\n            steps: uploadDestinationSteps\n        };\n\n        const steps = [\n            StepImageOutput,\n            ...(StepTargetEnv.steps.length > 0 ? [ StepTargetEnv ] : []),\n            {\n                name: 'Registration',\n                component: <WizardStepRegistration\n                    subscription={ this.state.subscription }\n                    subscribeNow={ this.state.subscribeNow }\n                    setSubscription={ this.setSubscription }\n                    setSubscribeNow={ this.setSubscribeNow }\n                    errors={ this.state.subscriptionErrors } /> },\n            {\n                name: 'Packages',\n                component: <WizardStepPackages\n                    packageListChange={ this.packageListChange }\n                    release={ this.state.release }\n                    packagesAvailableComponents={ this.state.packagesAvailableComponents }\n                    packagesFilteredComponents={ this.state.packagesFilteredComponents }\n                    handlePackagesSearch={ this.handlePackagesSearch }\n                    handlePackagesFilter= { this.handlePackagesFilter }\n                    setPackagesSearchName={ this.setPackagesSearchName } /> },\n            {\n                name: 'Review',\n                component: <WizardStepReview\n                    release={ this.state.release }\n                    uploadAWS={ this.state.uploadAWS }\n                    uploadDestinations={ this.state.uploadDestinations }\n                    subscription={ this.state.subscription }\n                    subscribeNow={ this.state.subscribeNow }\n                    uploadAWSErrors={ this.state.uploadAWSErrors }\n                    subscriptionErrors={ this.state.subscriptionErrors } />,\n                nextButtonText: 'Create',\n            }\n        ];\n        return (\n            <React.Fragment>\n                <Wizard\n                    title={ 'Create image' }\n                    onNext={ this.onStep }\n                    onGoToStep={ this.onStep }\n                    steps={ steps }\n                    onClose={ this.onClose }\n                    onSave={ this.onSave }\n                    isOpen />\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateCompose: (compose) => dispatch(actions.updateCompose(compose)),\n    };\n}\n\nCreateImageWizard.propTypes = {\n    updateCompose: PropTypes.func,\n    history: PropTypes.object,\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(CreateImageWizard));\n"],"sourceRoot":""}