{"version":3,"sources":["webpack:///./src/SmartComponents/CreateImageWizard/CreateImageWizard.js"],"names":["ReleaseComponent","props","options","value","label","setRelease","map","option","propTypes","PropTypes","func","string","AmazonUploadComponent","serviceOptions","errors","upload","access_key_id","setUploadOptions","Object","assign","secret_access_key","service","region","bucket","object","UploadComponent","uploadTypes","type","setUpload","SubscriptionComponent","subscribeNow","setSubscribeNow","subscription","organization","setSubscription","bool","ReviewComponent","keys","uploadErrors","length","subscriptionErrors","modifier","FlexModifiers","release","entries","key","error","CreateImageWizard","bind","onStep","onSave","onClose","validate","validateUploadAmazon","validateSubscription","state","insights","chrome","auth","getUser","user","setState","Number","identity","internal","org_id","step","name","uploadOptions","oldState","request","distribution","image_requests","architecture","image_type","upload_requests","s3","ec2","customizations","updateCompose","api","composeImage","then","response","compose","id","status","history","push","steps","component","nextButtonText","Component","mapDispatchToProps","dispatch","actions","connect","withRouter"],"mappings":"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","file":"js/2.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from '../redux';\n\nimport {\n    Alert,\n    Flex,\n    FlexItem,\n    FlexModifiers,\n    Form,\n    FormGroup,\n    FormSelect,\n    FormSelectOption,\n    Radio,\n    TextContent,\n    TextInput,\n    Title,\n    Wizard,\n} from '@patternfly/react-core';\n\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport api from './../../api.js';\n\nconst ReleaseComponent = (props) => {\n    const options = [\n        { value: 'rhel-8', label: 'Red Hat Enterprise Linux (RHEL) 8.2' },\n    ];\n    return (\n        <Form isHorizontal>\n            <FormGroup label=\"Release\" fieldId=\"release-select\">\n                <FormSelect value={ props.value } onChange={ value => props.setRelease(value) }\n                    aria-label=\"Select release input\" id=\"release-select\">\n                    { options.map(option => <FormSelectOption key={ option.value } value={ option.value } label={ option.label }/>) }\n                </FormSelect>\n            </FormGroup>\n        </Form>\n    );\n};\n\nReleaseComponent.propTypes = {\n    setRelease: PropTypes.func,\n    value: PropTypes.string,\n};\n\nconst AmazonUploadComponent = (props) => {\n    const serviceOptions = [\n        { value: 'ec2', label: 'Amazon Elastic Compute Cloud (ec2)' },\n        { value: 's3', label: 'Amazon Simple Storage Service (s3)' },\n    ];\n\n    return (\n        <>\n            <FormGroup isRequired label=\"Access key ID\" fieldId=\"amazon-access-id\"\n                helperTextInvalid={ (props.errors['amazon-access-id'] && props.errors['amazon-access-id'].value) || '' }\n                validated={ (props.errors['amazon-access-id'] && 'error') || 'default' } >\n                <TextInput value={ props.upload.options.access_key_id || '' }\n                    type=\"text\" aria-label=\"amazon access key ID\" id=\"amazon-access-id\"\n                    onChange={ value => props.setUploadOptions(Object.assign(props.upload.options, { access_key_id: value })) }/>\n            </FormGroup>\n            <FormGroup isRequired label=\"Secret access key\" fieldId=\"amazon-access-secret\"\n                helperTextInvalid={ (props.errors['amazon-access-secret'] && props.errors['amazon-access-secret'].value)  || '' }\n                validated={ (props.errors['amazon-access-secret'] && 'error') || 'default' }>\n                <TextInput value={ props.upload.options.secret_access_key || '' }\n                    type=\"password\" aria-label=\"amazon secret access key\" id=\"amazon-access-secret\"\n                    onChange={ value => props.setUploadOptions(Object.assign(props.upload.options, { secret_access_key: value })) }/>\n            </FormGroup>\n            <FormGroup isRequired label=\"Service\" fieldId=\"amazon-service\">\n                <FormSelect value={ props.upload.options.service } aria-label=\"Select amazon service\" id=\"amazon-service\"\n                    onChange={ value => props.setUploadOptions(Object.assign(props.upload.options, { service: value })) } >\n                    { serviceOptions.map(option => <FormSelectOption key={ option.value } value={ option.value } label={ option.label }/>) }\n                </FormSelect>\n            </FormGroup>\n            <FormGroup isRequired label=\"Region\" fieldId=\"amazon-region\"\n                helperTextInvalid={ (props.errors['amazon-region'] && props.errors['amazon-region'].value) || '' }\n                validated={ (props.errors['amazon-region'] && 'error') || 'default' }>\n                <TextInput value={ props.upload.options.region } type=\"text\" aria-label=\"amazon region\" id=\"amazon-region\"\n                    onChange={ value => props.setUploadOptions(Object.assign(props.upload.options, { region: value })) }/>\n            </FormGroup>\n            { props.upload.options.service === 's3' &&\n              <FormGroup isRequired label=\"Bucket\" fieldId=\"amazon-bucket\"\n                  helperTextInvalid={ (props.errors['amazon-bucket'] && props.errors['amazon-bucket'].value) || '' }\n                  validated={ (props.errors['amazon-bucket'] && 'error') || 'default' }>\n                  <TextInput value={ props.upload.options.bucket || '' } type=\"text\" aria-label=\"amazon bucket\" id=\"amazon-bucket\"\n                      onChange={ value => props.setUploadOptions(Object.assign(props.upload.options, { bucket: value })) }/>\n              </FormGroup> }\n        </>\n    );\n};\n\nAmazonUploadComponent.propTypes = {\n    setUploadOptions: PropTypes.func,\n    upload: PropTypes.object,\n    errors: PropTypes.object,\n};\n\nconst UploadComponent = (props) => {\n    const uploadTypes = [\n        { value: 'aws', label: 'Amazon Machine Image (.vhdx)' },\n    ];\n\n    return (\n        <>\n            <Form isHorizontal>\n                <FormGroup isRequired label=\"Destination\" fieldId=\"upload-destination\">\n                    <FormSelect value={ props.upload.type || '' } id=\"upload-destination\"\n                        onChange={ value => props.setUpload({ type: value, options: null }) } aria-label=\"Select upload destination\">\n                        { uploadTypes.map(type => <FormSelectOption key={ type.value } value={ type.value } label={ type.label }/>) }\n                    </FormSelect>\n                </FormGroup>\n                { props.upload.type === 'aws' &&\n                  <AmazonUploadComponent upload={ props.upload } setUploadOptions={ props.setUploadOptions } errors={ props.errors }/> }\n            </Form>\n        </>\n    );\n};\n\nUploadComponent.propTypes = {\n    setUpload: PropTypes.func,\n    setUploadOptions: PropTypes.func,\n    upload: PropTypes.object,\n    errors: PropTypes.object,\n};\n\nconst SubscriptionComponent = (props) => {\n    return (\n        <Form>\n            <FormGroup isRequired label=\"Register the system\" fieldId=\"subscribe-radio\">\n                <Radio name=\"subscribe-radio\" isChecked={ props.subscribeNow } id=\"subscribe-radio\"\n                    label=\"Embed an activation key and register systems on first boot\"\n                    onChange={ () => props.setSubscribeNow(true) }/>\n                <Radio name=\"subscribe-radio\" isChecked={ !props.subscribeNow }\n                    label=\"Register the system later\" id=\"subscribe-radio\"\n                    onChange={ () => props.setSubscribeNow(false) } />\n            </FormGroup>\n            { props.subscribeNow &&\n              <>\n                  <FormGroup label=\"Organization ID\" fieldId=\"subscription-organization\">\n                      <TextInput isDisabled value={ props.subscription.organization || '' } type=\"text\"\n                          id=\"subscription-organization\" aria-label=\"Subscription organization ID\" />\n                  </FormGroup>\n                  <FormGroup isRequired label=\"Activation key\" fieldId=\"subscription-activation\"\n                      helperTextInvalid={ (props.errors['subscription-activation'] && props.errors['subscription-activation'].value) || '' }\n                      validated={ (props.errors['subscription-activation'] && 'error') || 'default' } >\n                      <TextInput value={ props.subscription['activation-key'] || '' } type=\"password\"\n                          id=\"subscription-activation\" aria-label=\"Subscription activation key\"\n                          onChange={ value => props.setSubscription(Object.assign(props.subscription, { 'activation-key': value })) }/>\n                  </FormGroup>\n              </> }\n        </Form>\n    );\n};\n\nSubscriptionComponent.propTypes = {\n    setSubscription: PropTypes.func,\n    setSubscribeNow: PropTypes.func,\n    subscription: PropTypes.object,\n    subscribeNow: PropTypes.bool,\n    errors: PropTypes.object,\n};\n\nconst ReviewComponent = (props) => {\n    return (\n        <>\n            { (Object.keys(props.uploadErrors).length > 0 ||\n               Object.keys(props.subscriptionErrors).length > 0) &&\n              <Alert variant=\"danger\" isInline title=\"Required information is missing\" /> }\n            <TextContent>\n                <h2>Create image</h2>\n                <small>\n                    Review the information and click Create image\n                    to create the image using the following criteria.\n                </small>\n                <h3>Release</h3>\n                <Flex>\n                    <FlexItem breakpointMods={ [{ modifier: FlexModifiers['flex-1'] }] }>\n                        Release\n                    </FlexItem>\n                    <FlexItem breakpointMods={ [{ modifier: FlexModifiers['flex-2'] }] }>\n                        { props.release }\n                    </FlexItem>\n                </Flex>\n                <h3>Image output</h3>\n                <Flex>\n                    <FlexItem breakpointMods={ [{ modifier: FlexModifiers['flex-1'] }] }>\n                        Destination\n                    </FlexItem>\n                    <FlexItem breakpointMods={ [{ modifier: FlexModifiers['flex-2'] }] }>\n                        { props.upload && <>{ props.upload.type }</> }\n                    </FlexItem>\n                </Flex>\n                { Object.entries(props.uploadErrors).map(([ key, error ]) => {\n                    return (<Flex key={ key }>\n                        <FlexItem breakpointMods={ [{ modifier: FlexModifiers['flex-1'] }] }>\n                            { error.label }\n                        </FlexItem>\n                        <FlexItem breakpointMods={ [{ modifier: FlexModifiers['flex-2'] }] }>\n                            <ExclamationCircleIcon className=\"error\"/> { error.value }\n                        </FlexItem>\n                    </Flex>);\n                })}\n                <h3>Registration</h3>\n                <Flex>\n                    <FlexItem breakpointMods={ [{ modifier: FlexModifiers['flex-1'] }] }>\n                        Subscription\n                    </FlexItem>\n                    { !props.subscribeNow &&\n                      <FlexItem breakpointMods={ [{ modifier: FlexModifiers['flex-2'] }] }>\n                          Register the system later\n                      </FlexItem> }\n                    { props.subscribeNow &&\n                      <FlexItem breakpointMods={ [{ modifier: FlexModifiers['flex-2'] }] }>\n                          Register the system on first boot\n                      </FlexItem> }\n                </Flex>\n                { Object.entries(props.subscriptionErrors).map(([ key, error ]) => {\n                    return (<Flex key={ key }>\n                        <FlexItem breakpointMods={ [{ modifier: FlexModifiers['flex-1'] }] }>\n                            { error.label }\n                        </FlexItem>\n                        <FlexItem breakpointMods={ [{ modifier: FlexModifiers['flex-2'] }] }>\n                            <ExclamationCircleIcon className=\"error\"/> { error.value }\n                        </FlexItem>\n                    </Flex>);\n                })}\n            </TextContent>\n        </>\n    );\n};\n\nReviewComponent.propTypes = {\n    release: PropTypes.string,\n    upload: PropTypes.object,\n    subscription: PropTypes.object,\n    subscribeNow: PropTypes.bool,\n    uploadErrors: PropTypes.object,\n    subscriptionErrors: PropTypes.object,\n};\n\nclass CreateImageWizard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.setRelease = this.setRelease.bind(this);\n        this.setUpload = this.setUpload.bind(this);\n        this.setUploadOptions = this.setUploadOptions.bind(this);\n        this.setSubscription = this.setSubscription.bind(this);\n        this.setSubscribeNow = this.setSubscribeNow.bind(this);\n        this.onStep = this.onStep.bind(this);\n        this.onSave = this.onSave.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.validate = this.validate.bind(this);\n        this.validateUploadAmazon = this.validateUploadAmazon.bind(this);\n        this.validateSubscription = this.validateSubscription.bind(this);\n\n        this.state = {\n            release: 'rhel-8',\n            upload: {\n                type: 'aws',\n                options: {\n                    service: 'ec2',\n                    region: 'eu-west-2',\n                    access_key_id: null,\n                    secret_access_key: null,\n                    bucket: null,\n                }\n            },\n            subscription: {\n                organization: null,\n                'activation-key': null,\n                'server-url': 'subscription.rhsm.redhat.com',\n                'base-url': 'http:cdn.redhat.com/',\n                insights: true\n            },\n            subscribeNow: false,\n            /* errors take form of $fieldId: error */\n            uploadErrors: {},\n            subscriptionErrors: {},\n        };\n    }\n\n    async componentDidMount() {\n        let user = await insights.chrome.auth.getUser();\n        this.setState({\n            subscription: {\n                organization: Number(user.identity.internal.org_id)\n            }\n        });\n    }\n\n    onStep(step) {\n        if (step.name === 'Review') {\n            this.validate();\n        }\n    }\n\n    validate() {\n        /* upload */\n        if (this.state.upload.type === 'aws') {\n            this.validateUploadAmazon();\n        } else {\n            this.setState({ uploadErrors: {}});\n        }\n\n        /* subscription */\n        if (this.state.subscribeNow) {\n            this.validateSubscription();\n        } else {\n            this.setState({ subscriptionErrors: {}});\n        }\n    }\n\n    validateUploadAmazon() {\n        let uploadErrors = {};\n        if (!this.state.upload.options.access_key_id) {\n            uploadErrors['amazon-access-id'] =\n                { label: 'Access key ID', value: 'A value is required' };\n        }\n\n        if (!this.state.upload.options.secret_access_key) {\n            uploadErrors['amazon-access-secret'] =\n                { label: 'Secret access key', value: 'A value is required' };\n        }\n\n        if (!this.state.upload.options.region) {\n            uploadErrors['amazon-region'] =\n                { label: 'Region', value: 'A value is required' };\n        }\n\n        if (this.state.upload.options.service === 's3' &&\n            !this.state.upload.options.bucket) {\n            uploadErrors['amazon-bucket'] =\n                { label: 'Bucket', value: 'A value is required' };\n        }\n\n        this.setState({ uploadErrors });\n    }\n\n    validateSubscription() {\n        let subscriptionErrors = {};\n        if (!this.state.subscription['activation-key']) {\n            subscriptionErrors['subscription-activation'] =\n                { label: 'Activation key', value: 'A value is required' };\n        }\n\n        this.setState({ subscriptionErrors });\n    }\n\n    setRelease(release) {\n        this.setState({ release });\n    }\n\n    setUpload(upload) {\n        this.setState({ upload });\n    }\n\n    setUploadOptions(uploadOptions) {\n        this.setState(oldState => {\n            return {\n                upload: {\n                    type: oldState.upload.type,\n                    options: uploadOptions\n                }\n            };\n        });\n    }\n\n    setSubscribeNow(subscribeNow) {\n        this.setState({ subscribeNow });\n    }\n\n    setSubscription(subscription) {\n        this.setState({ subscription }, this.validate);\n    }\n\n    onSave () {\n        let request = {\n            distribution: this.state.release,\n            image_requests: [\n                {\n                    architecture: 'x86_64',\n                    image_type: 'qcow2',\n                    upload_requests: [{\n                        type: 'aws',\n                        options: {\n                            region: this.state.upload.options.region,\n                            s3: {\n                                access_key_id: this.state.upload.options.access_key_id,\n                                secret_access_key: this.state.upload.options.secret_access_key,\n                                bucket: this.state.upload.options.bucket,\n                            },\n                            ec2: {\n                                access_key_id: this.state.upload.options.access_key_id,\n                                secret_access_key: this.state.upload.options.secret_access_key,\n                            },\n                        },\n                    }],\n                }],\n            customizations: {\n                subscription: this.state.subscription,\n            },\n        };\n\n        let { updateCompose } = this.props;\n        api.composeImage(request).then(response => {\n            let compose = {};\n            compose[response.id] = {\n                status: 'request sent',\n                distribution: request.distribution,\n                architecture: request.image_requests[0].architecture,\n                image_type: request.image_requests[0].image_type,\n            };\n            updateCompose(compose);\n            this.props.history.push('/landing');\n        });\n    }\n\n    onClose () {\n        this.props.history.push('/landing');\n    }\n\n    render() {\n        const steps = [\n            {\n                name: 'Release',\n                component: <ReleaseComponent\n                    value={ this.state.release }\n                    setRelease={ this.setRelease } /> },\n            {\n                name: 'Target environment',\n                component: <UploadComponent\n                    upload={ this.state.upload }\n                    setUpload={ this.setUpload }\n                    setUploadOptions={ this.setUploadOptions }\n                    errors={ this.state.uploadErrors } /> },\n            {\n                name: 'Registration',\n                component: <SubscriptionComponent\n                    subscription={ this.state.subscription }\n                    subscribeNow={ this.state.subscribeNow }\n                    setSubscription={ this.setSubscription }\n                    setSubscribeNow={ this.setSubscribeNow }\n                    errors={ this.state.subscriptionErrors } /> },\n            {\n                name: 'Review',\n                component: <ReviewComponent\n                    release={ this.state.release }\n                    upload={ this.state.upload }\n                    subscription={ this.state.subscription }\n                    subscribeNow={ this.state.subscribeNow }\n                    uploadErrors={ this.state.uploadErrors }\n                    subscriptionErrors={ this.state.subscriptionErrors } />,\n                nextButtonText: 'Create',\n            }\n        ];\n\n        return (\n            <>\n                <section className=\"pf-c-page__main-section\">\n                    <Title size=\"2xl\">\n                        Create a new image\n                    </Title>\n                </section>\n                <Wizard\n                    onNext={ this.onStep }\n                    onGoToStep={ this.onStep }\n                    isInPage\n                    steps={ steps }\n                    onClose={ this.onClose }\n                    onSave={ this.onSave } />\n            </>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateCompose: (compose) => dispatch(actions.updateCompose(compose)),\n    };\n}\n\nCreateImageWizard.propTypes = {\n    updateCompose: PropTypes.func,\n    history: PropTypes.object,\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(CreateImageWizard));\n"],"sourceRoot":""}