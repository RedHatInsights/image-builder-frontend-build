{"version":3,"file":"js/491.e42e1a31f78e0ed1bef5.js","mappings":"+LAiCA,QANqB,WAAH,OAChBA,IAAAA,cAACC,EAAAA,GAAQ,CAACC,MAAOA,EAAAA,GACfF,IAAAA,cAACG,EAAAA,EAAG,MACK,ECxBbC,IAAAA,OAAgBJ,IAAAA,cAACK,EAAY,MAAKC,SAASC,eAAe,Q","sources":["webpack:///./src/AppEntry.js","webpack:///./src/bootstrap.js"],"sourcesContent":["import React from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store';\n\nif (process.env.NODE_ENV === 'development' && process.env.MSW === true) {\n  // process.env.MSW is set in the webpack config using DefinePlugin\n  const { worker } = require('./test/mocks/browser');\n  worker.start({\n    serviceWorker: {\n      url: '/beta/apps/image-builder/mockServiceWorker.js',\n      options: {\n        /* \n        Service workers can only intercept requests made from within their scope.\n        mockServiceWorker.js is served from /beta/apps/image-builder/, which becomes\n        the worker's default scope. Set scope to '/' so that all requests are in scope \n        and can be intercepted. Note that the Service-Worker-Allowed header must\n        be set to '/' for this to work, and is done in the webpack config. \n        */\n        scope: '../../../',\n      },\n    },\n  });\n}\n\nconst ImageBuilder = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nexport default ImageBuilder;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport ImageBuilder from './AppEntry';\n\nReactDOM.render(<ImageBuilder />, document.getElementById('root'));\n"],"names":["React","Provider","store","App","ReactDOM","ImageBuilder","document","getElementById"],"sourceRoot":""}