{"version":3,"file":"js/486.1663678319737.191130bfd98dbb44c15e.js","mappings":"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","sources":["webpack:///./src/Utilities/isRhel.js","webpack:///./src/Components/CreateImageWizard/steps/imageOutputStepMapper.js","webpack:///./src/Components/CreateImageWizard/steps/stepTemplate.js","webpack:///./src/Components/CreateImageWizard/steps/googleCloud.js","webpack:///./src/Components/CreateImageWizard/formComponents/ReviewStep.js","webpack:///./src/Components/CreateImageWizard/formComponents/TargetEnvironment.js","webpack:///./src/Components/CreateImageWizard/formComponents/Packages.js","webpack:///./src/Components/CreateImageWizard/formComponents/RadioWithPopover.js","webpack:///./src/Components/CreateImageWizard/formComponents/AzureAuthButton.js","webpack:///./src/Components/CreateImageWizard/formComponents/ActivationKeys.js","webpack:///./src/Components/CreateImageWizard/formComponents/MountPoint.js","webpack:///./src/Components/CreateImageWizard/formComponents/SizeUnit.js","webpack:///./src/Components/CreateImageWizard/formComponents/FileSystemConfiguration.js","webpack:///./src/Components/CreateImageWizard/formComponents/FileSystemConfigToggle.js","webpack:///./src/Components/CreateImageWizard/formComponents/ImageOutputReleaseSelect.js","webpack:///./src/Components/CreateImageWizard/formComponents/CentOSAcknowledgement.js","webpack:///./src/Components/CreateImageWizard/ImageCreator.js","webpack:///./src/Components/CreateImageWizard/steps/aws.js","webpack:///./src/Components/CreateImageWizard/steps/msAzure.js","webpack:///./src/Components/CreateImageWizard/steps/packages.js","webpack:///./src/Components/CreateImageWizard/steps/registration.js","webpack:///./src/Components/CreateImageWizard/formComponents/CustomSubmitButtons.js","webpack:///./src/Components/CreateImageWizard/steps/review.js","webpack:///./src/Components/CreateImageWizard/steps/imageOutput.js","webpack:///./src/Components/CreateImageWizard/steps/fileSystemConfiguration.js","webpack:///./src/Components/CreateImageWizard/steps/imageName.js","webpack:///./src/Components/CreateImageWizard/validators/fileSystemConfigurationValidator.js","webpack:///./src/Components/CreateImageWizard/validators/targetEnvironmentValidator.js","webpack:///./src/Components/CreateImageWizard/CreateImageWizard.js","webpack:///./src/Components/sharedComponents/DocumentationButton.js","webpack:///./src/api.js","webpack:///./src/constants.js","webpack:///./src/store/actions/actions.js"],"sourcesContent":["import { RHEL_8, RHEL_9 } from '../constants';\n\nfunction isRhel(distro) {\n  switch (distro) {\n    case RHEL_8:\n    case RHEL_9:\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport default isRhel;\n","import isRhel from '../../../Utilities/isRhel.js';\n\nexport default (\n  { 'target-environment': targetEnv, release } = {},\n  { skipAws, skipGoogle, skipAzure } = {}\n) => {\n  if (!skipAws && targetEnv?.aws) {\n    return 'aws-target-env';\n  }\n\n  if (!skipGoogle && targetEnv?.gcp) {\n    return 'google-cloud-target-env';\n  }\n\n  if (!skipAzure && targetEnv?.azure) {\n    return 'ms-azure-target-env';\n  }\n\n  return isRhel(release) ? 'registration' : 'File system configuration';\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\n\nconst StepTemplate = ({\n  id,\n  formFields,\n  formRef,\n  title,\n  customTitle,\n  showTitle,\n  showTitles,\n}) => (\n  <div id={id} ref={formRef} className=\"pf-c-form\">\n    {((showTitles && showTitle !== false) || showTitle) &&\n      (customTitle ? (\n        customTitle\n      ) : (\n        <Title headingLevel=\"h1\" size=\"xl\">\n          {title}\n        </Title>\n      ))}\n    {formFields}\n  </div>\n);\n\nStepTemplate.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.node,\n  customTitle: PropTypes.node,\n  formFields: PropTypes.array.isRequired,\n  formOptions: PropTypes.shape({\n    renderForm: PropTypes.func.isRequired,\n  }).isRequired,\n  showTitles: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  formRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n};\n\nexport default StepTemplate;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport {\n  Button,\n  Popover,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  Title,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\n\nexport const googleAccType = {\n  googleAccount: 'Google account',\n  serviceAccount: 'Service account',\n  googleGroup: 'Google group',\n  domain: 'Domain',\n};\n\nconst PopoverInfo = ({ appendTo }) => {\n  return (\n    <Popover\n      appendTo={appendTo}\n      hasAutoWidth\n      maxWidth=\"35rem\"\n      headerContent={'Valid account types'}\n      flipBehavior={['right', 'bottom', 'top', 'left']}\n      bodyContent={\n        <TextContent>\n          <Text>\n            The following account types can have an image shared with them:\n          </Text>\n          <TextList className=\"pf-u-ml-0\">\n            <TextListItem>\n              <strong>Google account:</strong> A Google account represents a\n              developer, an administrator, or any other person who interacts\n              with Google Cloud. For example: <em>`alice@gmail.com`</em>.\n            </TextListItem>\n            <TextListItem>\n              <strong>Service account:</strong> A service account is an account\n              for an application instead of an individual end user. For example:{' '}\n              <em>`myapp@appspot.gserviceaccount.com`</em>.\n            </TextListItem>\n            <TextListItem>\n              <strong>Google group:</strong> A Google group is a named\n              collection of Google accounts and service accounts. For example:{' '}\n              <em>`admins@example.com`</em>.\n            </TextListItem>\n            <TextListItem>\n              <strong>Google Workspace domain or Cloud Identity domain:</strong>{' '}\n              A Google workspace or cloud identity domain represents a virtual\n              group of all the Google accounts in an organization. These domains\n              represent your organization&apos;s internet domain name. For\n              example: <em>`mycompany.com`</em>.\n            </TextListItem>\n          </TextList>\n        </TextContent>\n      }\n    >\n      <Button\n        variant=\"plain\"\n        aria-label=\"Account info\"\n        aria-describedby=\"google-account-type\"\n        className=\"pf-c-form__group-label-help\"\n      >\n        <HelpIcon />\n      </Button>\n    </Popover>\n  );\n};\n\nPopoverInfo.propTypes = {\n  appendTo: PropTypes.any,\n};\n\nexport default {\n  StepTemplate,\n  id: 'wizard-target-gcp',\n  title: 'Google Cloud Platform',\n  customTitle: (\n    <Title headingLevel=\"h1\" size=\"xl\">\n      Target environment - Google Cloud Platform\n    </Title>\n  ),\n  name: 'google-cloud-target-env',\n  substepOf: 'Target environment',\n  nextStep: ({ values }) =>\n    nextStepMapper(values, { skipGoogle: true, skipAws: true }),\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: (\n        <Text>\n          Your image will be uploaded to Google Cloud Platform and shared with\n          the account you provide below. <br />\n          The shared image will expire within 14 days. To keep the image longer,\n          copy it to your Google Cloud Platform account.\n        </Text>\n      ),\n    },\n    {\n      component: 'radio-popover',\n      label: 'Type',\n      isRequired: true,\n      Popover: PopoverInfo,\n      name: 'google-account-type',\n      initialValue: 'googleAccount',\n      options: Object.entries(googleAccType).map(([value, label]) => ({\n        label:\n          value === 'domain'\n            ? 'Google Workspace domain or Cloud Identity domain'\n            : label,\n        value,\n        autoFocus: value === 'googleAccount' ? true : false,\n      })),\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'google-email',\n      'data-testid': 'input-google-email',\n      type: 'text',\n      label: 'Email address',\n      condition: {\n        or: [\n          { when: 'google-account-type', is: 'googleAccount' },\n          { when: 'google-account-type', is: 'serviceAccount' },\n          { when: 'google-account-type', is: 'googleGroup' },\n          { when: 'google-account-type', is: null },\n        ],\n      },\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: '[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,}$',\n          message: 'Please enter a valid email address',\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'google-domain',\n      type: 'text',\n      label: 'Domain',\n      condition: {\n        when: 'google-account-type',\n        is: 'domain',\n      },\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n  ],\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  List,\n  ListItem,\n  Popover,\n  Spinner,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { googleAccType } from '../steps/googleCloud';\nimport { RELEASES, UNIT_GIB, UNIT_MIB } from '../../../constants';\nimport isRhel from '../../../Utilities/isRhel';\n\nconst FSReviewTable = ({ ...props }) => {\n  return (\n    <TableComposable\n      aria-label=\"File system configuration table\"\n      variant=\"compact\"\n    >\n      <Thead>\n        <Tr>\n          <Th>Mount point</Th>\n          <Th>Type</Th>\n          <Th>Minimum size</Th>\n        </Tr>\n      </Thead>\n      <Tbody data-testid=\"file-system-configuration-tbody-review\">\n        {props.fsc.map((r, ri) => (\n          <Tr key={ri}>\n            <Td className=\"pf-m-width-60\">{r.mountpoint}</Td>\n            <Td className=\"pf-m-width-10\">xfs</Td>\n            <Td className=\"pf-m-width-30\">\n              {r.size}{' '}\n              {r.unit === UNIT_GIB\n                ? 'GiB'\n                : r.unit === UNIT_MIB\n                ? 'MiB'\n                : 'KiB'}\n            </Td>\n          </Tr>\n        ))}\n      </Tbody>\n    </TableComposable>\n  );\n};\n\nFSReviewTable.propTypes = {\n  fsc: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst ReviewStep = () => {\n  const [activeTabKey, setActiveTabKey] = useState(0);\n  const [orgId, setOrgId] = useState();\n  const [minSize, setMinSize] = useState();\n  const { change, getState } = useFormApi();\n\n  useEffect(() => {\n    const registerSystem = getState()?.values?.['register-system'];\n    if (\n      registerSystem === 'register-now' ||\n      registerSystem === 'register-now-insights'\n    ) {\n      (async () => {\n        const userData = await insights?.chrome?.auth?.getUser();\n        const id = userData?.identity?.internal?.org_id;\n        setOrgId(id);\n        change('subscription-organization-id', id);\n      })();\n    }\n\n    if (\n      getState()?.values?.['file-system-config-toggle'] === 'manual' &&\n      getState()?.values?.['file-system-configuration']\n    ) {\n      let size = 0;\n      for (const fsc of getState().values['file-system-configuration']) {\n        size += fsc.size * fsc.unit;\n      }\n\n      size = (size / UNIT_GIB).toFixed(1);\n      if (size < 1) {\n        setMinSize(`Less than 1 GiB`);\n      } else {\n        setMinSize(`${size} GiB`);\n      }\n    }\n  });\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  return (\n    <>\n      <Text>\n        Review the information and click &quot;Create image&quot; to create the\n        image using the following criteria.\n      </Text>\n      <DescriptionList isCompact isHorizontal>\n        <DescriptionListGroup>\n          {getState()?.values?.['image-name'] && (\n            <>\n              <DescriptionListTerm>Image name</DescriptionListTerm>\n              <DescriptionListDescription>\n                {getState()?.values?.['image-name']}\n              </DescriptionListDescription>\n            </>\n          )}\n          <DescriptionListTerm>Release</DescriptionListTerm>\n          <DescriptionListDescription>\n            {RELEASES[getState()?.values?.release]}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <Tabs\n        isFilled\n        activeKey={activeTabKey}\n        onSelect={handleTabClick}\n        className=\"pf-u-w-75\"\n      >\n        <Tab\n          eventKey={0}\n          title={<TabTitleText>Target environment</TabTitleText>}\n          data-testid=\"tab-target\"\n          autoFocus\n        >\n          <List isPlain iconSize=\"large\">\n            {getState()?.values?.['target-environment']?.aws && (\n              <ListItem\n                icon={\n                  <img\n                    className=\"provider-icon\"\n                    src=\"/apps/frontend-assets/partners-icons/aws.svg\"\n                  />\n                }\n              >\n                <TextContent>\n                  <Text component={TextVariants.h3}>Amazon Web Services</Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Account ID\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['aws-account-id']}\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.gcp && (\n              <ListItem\n                className=\"pf-c-list__item pf-u-mt-md\"\n                icon={\n                  <img\n                    className=\"provider-icon\"\n                    src=\"/apps/frontend-assets/partners-icons/google-cloud-short.svg\"\n                  />\n                }\n              >\n                <TextContent>\n                  <Text component={TextVariants.h3}>Google Cloud Platform</Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      {\n                        googleAccType?.[\n                          getState()?.values?.['google-account-type']\n                        ]\n                      }\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['google-email'] ||\n                        getState()?.values?.['google-domain']}\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.azure && (\n              <ListItem\n                className=\"pf-c-list__item pf-u-mt-md\"\n                icon={\n                  <img\n                    className=\"provider-icon\"\n                    src=\"/apps/frontend-assets/partners-icons/microsoft-azure-short.svg\"\n                  />\n                }\n              >\n                <TextContent>\n                  <Text component={TextVariants.h3}>Microsoft Azure</Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Subscription ID\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['azure-subscription-id']}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Tenant ID\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['azure-tenant-id']}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Resource group\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['azure-resource-group']}\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.vsphere && (\n              <ListItem>\n                <TextContent>\n                  <Text component={TextVariants.h3}>VMWare</Text>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.['guest-image'] && (\n              <ListItem>\n                <TextContent>\n                  <Text component={TextVariants.h3}>\n                    Virtualization - Guest image\n                  </Text>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.[\n              'image-installer'\n            ] && (\n              <ListItem>\n                <TextContent>\n                  <Text component={TextVariants.h3}>\n                    Bare metal - Installer\n                  </Text>\n                </TextContent>\n              </ListItem>\n            )}\n          </List>\n        </Tab>\n        {isRhel(getState()?.values?.release) && (\n          <Tab\n            eventKey={1}\n            title={<TabTitleText>Registration</TabTitleText>}\n            data-testid=\"tab-registration\"\n          >\n            {getState()?.values?.['register-system'] === 'register-later' && (\n              <TextContent>\n                <TextList component={TextListVariants.dl}>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Subscription\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    Register the system later\n                  </TextListItem>\n                </TextList>\n              </TextContent>\n            )}\n            {(getState()?.values?.['register-system'] === 'register-now' ||\n              getState()?.values?.['register-system'] ===\n                'register-now-insights') && (\n              <TextContent>\n                <TextList component={TextListVariants.dl}>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Subscription\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {getState()?.values?.['register-system'] ===\n                      'register-now-insights' &&\n                      'Register with Subscriptions and Red Hat Insights'}\n                    {getState()?.values?.['register-system'] ===\n                      'register-now' && 'Register with Subscriptions'}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Activation key\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {getState()?.values?.['subscription-activation-key']}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Organization ID\n                  </TextListItem>\n                  {orgId !== undefined ? (\n                    <TextListItem\n                      component={TextListItemVariants.dd}\n                      data-testid=\"organization-id\"\n                    >\n                      {orgId}\n                    </TextListItem>\n                  ) : (\n                    <TextListItem component={TextListItemVariants.dd}>\n                      <Spinner />\n                    </TextListItem>\n                  )}\n                </TextList>\n              </TextContent>\n            )}\n          </Tab>\n        )}\n        <Tab\n          eventKey={2}\n          title={<TabTitleText>System configuration</TabTitleText>}\n          data-testid=\"tab-system\"\n        >\n          <TextContent>\n            <Text component={TextVariants.h3}>File system configuration</Text>\n            <TextList component={TextListVariants.dl}>\n              <TextListItem component={TextListItemVariants.dt}>\n                Partitioning\n              </TextListItem>\n              <TextListItem\n                component={TextListItemVariants.dd}\n                data-testid=\"partitioning-auto-manual\"\n              >\n                {getState()?.values?.['file-system-config-toggle'] === 'manual'\n                  ? 'Manual'\n                  : 'Automatic'}\n                {getState()?.values?.['file-system-config-toggle'] ===\n                  'manual' && (\n                  <>\n                    {' '}\n                    <Popover\n                      position=\"bottom\"\n                      headerContent=\"Partitions\"\n                      hasAutoWidth\n                      minWidth=\"30rem\"\n                      bodyContent={\n                        <FSReviewTable\n                          fsc={getState().values['file-system-configuration']}\n                        />\n                      }\n                    >\n                      <Button\n                        data-testid=\"file-system-configuration-popover\"\n                        variant=\"link\"\n                        aria-label=\"File system configuration info\"\n                        aria-describedby=\"file-system-configuration-info\"\n                      >\n                        View partitions\n                      </Button>\n                    </Popover>\n                  </>\n                )}\n              </TextListItem>\n              {getState()?.values?.['file-system-config-toggle'] ===\n                'manual' && (\n                <>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Image size (minimum)\n                    <Popover\n                      hasAutoWidth\n                      bodyContent={\n                        <TextContent>\n                          <Text>\n                            Image Builder may extend this size based on\n                            requirements, selected packages, and configurations.\n                          </Text>\n                        </TextContent>\n                      }\n                    >\n                      <Button\n                        variant=\"plain\"\n                        aria-label=\"File system configuration info\"\n                        aria-describedby=\"file-system-configuration-info\"\n                        className=\"pf-c-form__group-label-help\"\n                      >\n                        <HelpIcon />\n                      </Button>\n                    </Popover>\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {minSize}\n                  </TextListItem>\n                </>\n              )}\n            </TextList>\n            <Text component={TextVariants.h3}>Packages</Text>\n            <TextList component={TextListVariants.dl}>\n              <TextListItem component={TextListItemVariants.dt}>\n                Chosen\n              </TextListItem>\n              <TextListItem\n                component={TextListItemVariants.dd}\n                data-testid=\"chosen-packages-count\"\n              >\n                {getState()?.values?.['selected-packages']?.length || 0}\n              </TextListItem>\n            </TextList>\n          </TextContent>\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport {\n  Checkbox,\n  FormGroup,\n  Text,\n  TextVariants,\n  Tile,\n} from '@patternfly/react-core';\n\nconst TargetEnvironment = ({ label, isRequired, ...props }) => {\n  const { getState, change } = useFormApi();\n  const { input } = useFieldApi({ label, isRequired, ...props });\n  const [environment, setEnvironment] = useState({\n    aws: false,\n    azure: false,\n    gcp: false,\n    vsphere: false,\n    'guest-image': false,\n    'image-installer': false,\n  });\n\n  useEffect(() => {\n    if (getState()?.values?.[input.name]) {\n      setEnvironment(getState().values[input.name]);\n    }\n  }, []);\n\n  const handleSetEnvironment = (env) =>\n    setEnvironment((prevEnv) => {\n      const newEnv = {\n        ...prevEnv,\n        [env]: !prevEnv[env],\n      };\n      change(input.name, newEnv);\n      return newEnv;\n    });\n\n  const handleKeyDown = (e, env) => {\n    if (e.key === ' ') {\n      handleSetEnvironment(env);\n    }\n  };\n\n  return (\n    <>\n      <FormGroup\n        isRequired={isRequired}\n        label={label}\n        data-testid=\"target-select\"\n      >\n        <FormGroup\n          label={<Text component={TextVariants.small}>Public cloud</Text>}\n          data-testid=\"target-public\"\n        >\n          <div className=\"tiles\">\n            <Tile\n              className=\"tile pf-u-mr-sm\"\n              data-testid=\"upload-aws\"\n              title=\"Amazon Web Services\"\n              icon={\n                <img\n                  className=\"provider-icon\"\n                  src={'/apps/frontend-assets/partners-icons/aws.svg'}\n                />\n              }\n              onClick={() => handleSetEnvironment('aws')}\n              onKeyDown={(e) => handleKeyDown(e, 'aws')}\n              isSelected={environment.aws}\n              isStacked\n              isDisplayLarge\n            />\n            <Tile\n              className=\"tile pf-u-mr-sm\"\n              data-testid=\"upload-google\"\n              title=\"Google Cloud Platform\"\n              icon={\n                <img\n                  className=\"provider-icon\"\n                  src={\n                    '/apps/frontend-assets/partners-icons/google-cloud-short.svg'\n                  }\n                />\n              }\n              onClick={() => handleSetEnvironment('gcp')}\n              isSelected={environment.gcp}\n              onKeyDown={(e) => handleKeyDown(e, 'gcp')}\n              isStacked\n              isDisplayLarge\n            />\n            <Tile\n              className=\"tile pf-u-mr-sm\"\n              data-testid=\"upload-azure\"\n              title=\"Microsoft Azure\"\n              icon={\n                <img\n                  className=\"provider-icon\"\n                  src={\n                    '/apps/frontend-assets/partners-icons/microsoft-azure-short.svg'\n                  }\n                />\n              }\n              onClick={() => handleSetEnvironment('azure')}\n              onKeyDown={(e) => handleKeyDown(e, 'azure')}\n              isSelected={environment.azure}\n              isStacked\n              isDisplayLarge\n            />\n          </div>\n        </FormGroup>\n        <FormGroup\n          label={<Text component={TextVariants.small}>Private cloud</Text>}\n          data-testid=\"target-private\"\n        >\n          <Checkbox\n            label=\"VMWare (.vmdk)\"\n            isChecked={environment.vsphere}\n            onChange={() => handleSetEnvironment('vsphere')}\n            aria-label=\"VMWare checkbox\"\n            id=\"checkbox-vmware\"\n            name=\"VMWare\"\n            data-testid=\"checkbox-vmware\"\n          />\n        </FormGroup>\n        <FormGroup\n          label={<Text component={TextVariants.small}>Other</Text>}\n          data-testid=\"target-other\"\n        >\n          <Checkbox\n            label=\"Virtualization - Guest image (.qcow2)\"\n            isChecked={environment['guest-image']}\n            onChange={() => handleSetEnvironment('guest-image')}\n            aria-label=\"Virtualization guest image checkbox\"\n            id=\"checkbox-guest-image\"\n            name=\"Virtualization guest image\"\n            data-testid=\"checkbox-guest-image\"\n          />\n          <Checkbox\n            label=\"Bare metal - Installer (.iso)\"\n            isChecked={environment['image-installer']}\n            onChange={() => handleSetEnvironment('image-installer')}\n            aria-label=\"Bare metal installer checkbox\"\n            id=\"checkbox-image-installer\"\n            name=\"Bare metal installer\"\n            data-testid=\"checkbox-image-installer\"\n          />\n        </FormGroup>\n      </FormGroup>\n    </>\n  );\n};\n\nTargetEnvironment.propTypes = {\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n};\n\nTargetEnvironment.defaultProps = {\n  label: '',\n  isRequired: false,\n};\n\nexport default TargetEnvironment;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport PropTypes from 'prop-types';\nimport {\n  DualListSelector,\n  DualListSelectorControl,\n  DualListSelectorControlsWrapper,\n  DualListSelectorList,\n  DualListSelectorListItem,\n  DualListSelectorPane,\n  SearchInput,\n  TextContent,\n} from '@patternfly/react-core';\nimport {\n  AngleDoubleLeftIcon,\n  AngleDoubleRightIcon,\n  AngleLeftIcon,\n  AngleRightIcon,\n} from '@patternfly/react-icons';\nimport api from '../../../api';\n\n// the fields isHidden and isSelected should not be included in the package list sent for image creation\nconst removePackagesDisplayFields = (packages) =>\n  packages.map((pack) => ({\n    name: pack.name,\n    summary: pack.summary,\n  }));\n\nconst Packages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [packagesSearchName, setPackagesSearchName] = useState(undefined);\n  const [filterAvailable, setFilterAvailable] = useState(undefined);\n  const [filterChosen, setFilterChosen] = useState(undefined);\n  const [packagesAvailable, setPackagesAvailable] = useState([]);\n  const [packagesAvailableFound, setPackagesAvailableFound] = useState(true);\n  const [packagesChosen, setPackagesChosen] = useState([]);\n  const [packagesChosenFound, setPackagesChosenFound] = useState(true);\n  const [focus, setFocus] = useState('');\n\n  // this effect only triggers on mount\n  useEffect(() => {\n    const selectedPackages = getState()?.values?.['selected-packages'];\n    if (selectedPackages) {\n      setPackagesChosen(selectedPackages);\n    }\n  }, []);\n\n  const searchResultsComparator = useCallback((searchTerm) => {\n    return (a, b) => {\n      a = a.name.toLowerCase();\n      b = b.name.toLowerCase();\n\n      // check exact match first\n      if (a === searchTerm) {\n        return -1;\n      }\n\n      if (b === searchTerm) {\n        return 1;\n      }\n\n      // check for packages that start with the search term\n      if (a.startsWith(searchTerm) && !b.startsWith(searchTerm)) {\n        return -1;\n      }\n\n      if (b.startsWith(searchTerm) && !a.startsWith(searchTerm)) {\n        return 1;\n      }\n\n      // if both (or neither) start with the search term\n      // sort alphabetically\n      if (a < b) {\n        return -1;\n      }\n\n      if (b < a) {\n        return 1;\n      }\n\n      return 0;\n    };\n  });\n\n  const setPackagesAvailableSorted = (\n    packageList,\n    filter = filterAvailable\n  ) => {\n    const sortResults = packageList.sort(searchResultsComparator(filter));\n    setPackagesAvailable(sortResults);\n  };\n\n  const setPackagesChosenSorted = (packageList) => {\n    const sortResults = packageList.sort(searchResultsComparator(filterChosen));\n    setPackagesChosen(sortResults);\n  };\n\n  // filter the packages by name\n  const filterPackagesAvailable = (packageList) => {\n    return packageList.filter((availablePackage) => {\n      // returns true if no packages in the available or chosen list have the same name\n      return !packagesChosen.some(\n        (chosenPackage) => availablePackage.name === chosenPackage.name\n      );\n    });\n  };\n\n  const getAllPackages = async () => {\n    const args = [\n      getState()?.values?.release,\n      getState()?.values?.architecture || defaultArch,\n      packagesSearchName,\n    ];\n    let { data, meta } = await api.getPackages(...args);\n    if (data?.length === meta.count) {\n      return data;\n    } else if (data) {\n      ({ data } = await api.getPackages(...args, meta.count));\n      return data;\n    }\n  };\n\n  // call api to list available packages\n  const handlePackagesAvailableSearch = async () => {\n    setFilterAvailable(packagesSearchName);\n\n    const packageList = await getAllPackages();\n    if (packageList) {\n      const packagesAvailableFiltered = filterPackagesAvailable(packageList);\n      setPackagesAvailableSorted(packagesAvailableFiltered, packagesSearchName);\n      setPackagesAvailableFound(\n        packagesAvailableFiltered.length ? true : false\n      );\n    } else {\n      setPackagesAvailable([]);\n      setPackagesAvailableFound(false);\n    }\n  };\n\n  // filter displayed selected packages\n  const handlePackagesChosenSearch = (val) => {\n    let found = false;\n    const filteredPackagesChosen = packagesChosen.map((pack) => {\n      if (!pack.name.includes(val)) {\n        pack.isHidden = true;\n      } else {\n        pack.isHidden = false;\n        found = true;\n      }\n\n      return pack;\n    });\n\n    setFilterChosen(val);\n    setPackagesChosenFound(found);\n    setPackagesChosenSorted(filteredPackagesChosen);\n  };\n\n  const keydownHandler = (event) => {\n    if (event.key === 'Enter') {\n      if (focus === 'available') {\n        event.stopPropagation();\n        handlePackagesAvailableSearch();\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', keydownHandler, true);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler, true);\n    };\n  });\n\n  const areFound = (filter, packageList) => {\n    if (filter === undefined) {\n      return true;\n    } else if (packageList.some((pack) => pack.name.includes(filter))) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const isHidden = (filter, pack) =>\n    filter && !pack.name.includes(filter) ? true : false;\n\n  const updateState = (updatedPackagesAvailable, updatedPackagesChosen) => {\n    setPackagesChosenSorted(updatedPackagesChosen);\n    setPackagesAvailableSorted(updatedPackagesAvailable);\n    setPackagesAvailableFound(\n      areFound(filterAvailable, updatedPackagesAvailable)\n    );\n    setPackagesChosenFound(areFound(filterChosen, updatedPackagesChosen));\n    // set the steps field to the current chosen packages list\n    change(input.name, removePackagesDisplayFields(updatedPackagesChosen));\n  };\n\n  const moveSelectedToChosen = () => {\n    const newPackagesChosen = [];\n\n    const updatedPackagesAvailable = packagesAvailable.filter((pack) => {\n      if (pack.selected) {\n        pack.selected = false;\n        pack.isHidden = isHidden(filterChosen, pack);\n        newPackagesChosen.push(pack);\n        return false;\n      }\n\n      return true;\n    });\n\n    const updatedPackagesChosen = [...newPackagesChosen, ...packagesChosen];\n\n    updateState(updatedPackagesAvailable, updatedPackagesChosen);\n  };\n\n  const moveSelectedToAvailable = () => {\n    const newPackagesAvailable = [];\n\n    const updatedPackagesChosen = packagesChosen.filter((pack) => {\n      if (pack.selected) {\n        pack.selected = false;\n        pack.isHidden = false;\n        pack.name.includes(filterAvailable)\n          ? newPackagesAvailable.push(pack)\n          : null;\n        return false;\n      }\n\n      return true;\n    });\n\n    const updatedPackagesAvailable = [\n      ...newPackagesAvailable,\n      ...packagesAvailable,\n    ];\n\n    updateState(updatedPackagesAvailable, updatedPackagesChosen);\n  };\n\n  const moveAllToChosen = () => {\n    const newPackagesChosen = packagesAvailable.map((pack) => {\n      return {\n        ...pack,\n        selected: false,\n        isHidden: isHidden(filterChosen, pack),\n      };\n    });\n\n    const updatedPackagesAvailable = [];\n    const updatedPackagesChosen = [...newPackagesChosen, ...packagesChosen];\n\n    updateState(updatedPackagesAvailable, updatedPackagesChosen);\n  };\n\n  const moveAllToAvailable = () => {\n    const updatedPackagesChosen = packagesChosen.filter(\n      (pack) => pack.isHidden\n    );\n\n    const newPackagesAvailable =\n      filterAvailable === undefined\n        ? []\n        : packagesChosen\n            .filter(\n              (pack) => !pack.isHidden && pack.name.includes(filterAvailable)\n            )\n            .map((pack) => {\n              return { ...pack, selected: false };\n            });\n\n    const updatedPackagesAvailable = [\n      ...newPackagesAvailable,\n      ...packagesAvailable,\n    ];\n\n    updateState(updatedPackagesAvailable, updatedPackagesChosen);\n  };\n\n  const onOptionSelect = (event, index, isChosen) => {\n    if (isChosen) {\n      const newChosen = [...packagesChosen];\n      newChosen[index].selected = !packagesChosen[index].selected;\n      setPackagesChosenSorted(newChosen);\n    } else {\n      const newAvailable = [...packagesAvailable];\n      newAvailable[index].selected = !packagesAvailable[index].selected;\n      setPackagesAvailableSorted(newAvailable);\n    }\n  };\n\n  const firstInputElement = useRef(null);\n\n  useEffect(() => {\n    firstInputElement.current?.focus();\n  }, []);\n\n  const handleClearAvailableSearch = () => {\n    setPackagesSearchName(undefined);\n    setFilterAvailable(undefined);\n    setPackagesAvailable([]);\n    setPackagesAvailableFound(true);\n  };\n\n  const handleClearChosenSearch = () => {\n    setFilterChosen(undefined);\n    setPackagesChosenSorted(\n      packagesChosen.map((pack) => {\n        return { ...pack, isHidden: false };\n      })\n    );\n    setPackagesChosenFound(true);\n  };\n\n  return (\n    <DualListSelector>\n      <DualListSelectorPane\n        title=\"Available packages\"\n        searchInput={\n          <SearchInput\n            placeholder=\"Search for a package\"\n            data-testid=\"search-available-pkgs-input\"\n            value={packagesSearchName}\n            ref={firstInputElement}\n            onFocus={() => setFocus('available')}\n            onBlur={() => setFocus('')}\n            onChange={(val) => setPackagesSearchName(val)}\n            submitSearchButtonLabel=\"Search button for available packages\"\n            onSearch={handlePackagesAvailableSearch}\n            resetButtonLabel=\"Clear available packages search\"\n            onClear={handleClearAvailableSearch}\n          />\n        }\n      >\n        <DualListSelectorList data-testid=\"available-pkgs-list\">\n          {!packagesAvailable.length ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              {!packagesAvailableFound ? (\n                'No packages found'\n              ) : (\n                <>\n                  Search above to add additional\n                  <br />\n                  packages to your image\n                </>\n              )}\n            </p>\n          ) : (\n            packagesAvailable.map((pack, index) => {\n              return !pack.isHidden ? (\n                <DualListSelectorListItem\n                  key={index}\n                  isSelected={pack.selected}\n                  onOptionSelect={(e) => onOptionSelect(e, index, false)}\n                >\n                  <TextContent key={`${pack.name}-${index}`}>\n                    <span className=\"pf-c-dual-list-selector__item-text\">\n                      {pack.name}\n                    </span>\n                    <small>{pack.summary}</small>\n                  </TextContent>\n                </DualListSelectorListItem>\n              ) : null;\n            })\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n      <DualListSelectorControlsWrapper aria-label=\"Selector controls\">\n        <DualListSelectorControl\n          isDisabled={!packagesAvailable.some((option) => option.selected)}\n          onClick={() => moveSelectedToChosen()}\n          aria-label=\"Add selected\"\n          tooltipContent=\"Add selected\"\n        >\n          <AngleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={!packagesAvailable.length}\n          onClick={() => moveAllToChosen()}\n          aria-label=\"Add all\"\n          tooltipContent=\"Add all\"\n        >\n          <AngleDoubleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={!packagesChosen.length || !packagesChosenFound}\n          onClick={() => moveAllToAvailable()}\n          aria-label=\"Remove all\"\n          tooltipContent=\"Remove all\"\n        >\n          <AngleDoubleLeftIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          onClick={() => moveSelectedToAvailable()}\n          isDisabled={\n            !packagesChosen.some((option) => option.selected) ||\n            !packagesChosenFound\n          }\n          aria-label=\"Remove selected\"\n          tooltipContent=\"Remove selected\"\n        >\n          <AngleLeftIcon />\n        </DualListSelectorControl>\n      </DualListSelectorControlsWrapper>\n      <DualListSelectorPane\n        title=\"Chosen packages\"\n        searchInput={\n          <SearchInput\n            placeholder=\"Search for a package\"\n            data-testid=\"search-chosen-pkgs-input\"\n            value={filterChosen}\n            onFocus={() => setFocus('chosen')}\n            onBlur={() => setFocus('')}\n            onChange={(val) => handlePackagesChosenSearch(val)}\n            resetButtonLabel=\"Clear chosen packages search\"\n            onClear={handleClearChosenSearch}\n          />\n        }\n        isChosen\n      >\n        <DualListSelectorList data-testid=\"chosen-pkgs-list\">\n          {!packagesChosen.length ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              No packages added\n            </p>\n          ) : !packagesChosenFound ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              No packages found\n            </p>\n          ) : (\n            packagesChosen.map((pack, index) => {\n              return !pack.isHidden ? (\n                <DualListSelectorListItem\n                  key={index}\n                  isSelected={pack.selected}\n                  onOptionSelect={(e) => onOptionSelect(e, index, true)}\n                >\n                  <TextContent key={`${pack.name}-${index}`}>\n                    <span className=\"pf-c-dual-list-selector__item-text\">\n                      {pack.name}\n                    </span>\n                    <small>{pack.summary}</small>\n                  </TextContent>\n                </DualListSelectorListItem>\n              ) : null;\n            })\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n    </DualListSelector>\n  );\n};\n\nPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","import React, { useRef } from 'react';\nimport Radio from '@data-driven-forms/pf4-component-mapper/radio';\nimport PropTypes from 'prop-types';\n\nconst RadioWithPopover = ({ Popover, ...props }) => {\n  const ref = useRef();\n  return (\n    <Radio\n      {...props}\n      label={\n        <span ref={ref} className=\"ins-c-image--builder__popover\">\n          {props.label}\n          <Popover />\n        </span>\n      }\n    />\n  );\n};\n\nRadioWithPopover.propTypes = {\n  Popover: PropTypes.elementType.isRequired,\n  label: PropTypes.node,\n};\n\nexport default RadioWithPopover;\n","import React from 'react';\nimport { Button, FormGroup } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst AzureAuthButton = () => {\n  const { getState } = useFormApi();\n\n  const tenantId = getState()?.values?.['azure-tenant-id'];\n  const guidRegex = new RegExp(\n    '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$',\n    'i'\n  );\n\n  return (\n    <FormGroup>\n      <Button\n        component=\"a\"\n        target=\"_blank\"\n        variant=\"secondary\"\n        isDisabled={!guidRegex.test(tenantId)}\n        href={\n          'https://login.microsoftonline.com/' +\n          tenantId +\n          '/oauth2/v2.0/authorize?client_id=b94bb246-b02c-4985-9c22-d44e66f657f4&scope=openid&' +\n          'response_type=code&response_mode=query&redirect_uri=https://portal.azure.com'\n        }\n      >\n        Authorize Image Builder\n      </Button>\n    </FormGroup>\n  );\n};\n\nexport default AzureAuthButton;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport api from '../../../api';\n\nconst ActivationKeys = ({ label, isRequired, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [activationKeys, setActivationKeys] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [activationKeySelected, selectActivationKey] = useState(\n    getState()?.values?.['subscription-activation-key']\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    const data = api.getActivationKeys();\n    data.then((keys) => {\n      setActivationKeys(keys);\n      setIsLoading(false);\n    });\n\n    if (insights.chrome.isProd()) {\n      change('subscription-server-url', 'subscription.rhsm.redhat.com');\n      change('subscription-base-url', 'https://cdn.redhat.com/');\n    } else {\n      change('subscription-server-url', 'subscription.rhsm.stage.redhat.com');\n      change('subscription-base-url', 'https://cdn.stage.redhat.com/');\n    }\n  }, []);\n\n  const setActivationKey = (_, selection) => {\n    selectActivationKey(selection);\n    setIsOpen(false);\n    change(input.name, selection);\n  };\n\n  const handleClear = () => {\n    selectActivationKey();\n    change(input.name, undefined);\n  };\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={label}\n      data-testid=\"subscription-activation-key\"\n    >\n      <Select\n        variant={SelectVariant.typeahead}\n        onToggle={() => setIsOpen(!isOpen)}\n        onSelect={setActivationKey}\n        onClear={handleClear}\n        selections={activationKeySelected}\n        isOpen={isOpen}\n        placeholderText=\"Select activation key\"\n        typeAheadAriaLabel=\"Select activation key\"\n      >\n        {isLoading && (\n          <SelectOption\n            isNoResultsOption={true}\n            data-testid=\"activation-keys-loading\"\n          >\n            <Spinner isSVG size=\"lg\" />\n          </SelectOption>\n        )}\n        {activationKeys.map((key, index) => (\n          <SelectOption key={index} value={key.name} />\n        ))}\n      </Select>\n    </FormGroup>\n  );\n};\n\nActivationKeys.propTypes = {\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n};\n\nActivationKeys.defaultProps = {\n  label: '',\n  isRequired: false,\n};\n\nexport default ActivationKeys;\n","import path from 'path';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\n\nconst MountPoint = ({ ...props }) => {\n  // check '/' last!\n  const validPrefixes = [\n    '/app',\n    '/data',\n    '/home',\n    '/opt',\n    '/srv',\n    '/tmp',\n    '/usr',\n    '/usr/local',\n    '/var',\n    '/',\n  ];\n  const [isOpen, setIsOpen] = useState(false);\n  const [prefix, setPrefix] = useState('/');\n  const [suffix, setSuffix] = useState('');\n\n  // split\n  useEffect(() => {\n    for (let p of validPrefixes) {\n      if (props.mountpoint.startsWith(p)) {\n        setPrefix(p);\n        setSuffix(props.mountpoint.substring(p.length));\n        return;\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    let suf = suffix;\n    let mp = prefix;\n    if (suf) {\n      if (mp !== '/' && suf[0] !== '/') {\n        suf = '/' + suf;\n      }\n\n      mp += suf;\n    }\n\n    props.onChange(path.normalize(mp));\n  }, [prefix, suffix]);\n\n  const onToggle = (isOpen) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect = (event, selection) => {\n    setPrefix(selection);\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <Select\n        className=\"pf-u-w-50\"\n        isOpen={isOpen}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        selections={prefix}\n        variant={SelectVariant.single}\n      >\n        {validPrefixes.map((pfx, index) => {\n          return <SelectOption key={index} value={pfx} />;\n        })}\n      </Select>\n      {prefix !== '/' && (\n        <TextInput\n          className=\"pf-u-w-50\"\n          type=\"text\"\n          value={suffix}\n          aria-label=\"Mount point suffix text input\"\n          onChange={(v) => setSuffix(v)}\n        />\n      )}\n    </>\n  );\n};\n\nMountPoint.propTypes = {\n  mountpoint: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default MountPoint;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport { UNIT_GIB, UNIT_KIB, UNIT_MIB } from '../../../constants';\n\nconst SizeUnit = ({ ...props }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [unit, setUnit] = useState(props.unit || UNIT_GIB);\n  const [size, setSize] = useState(props.size || 1);\n\n  useEffect(() => {\n    props.onChange(size, unit);\n  }, [unit, size]);\n\n  const onToggle = (isOpen) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect = (event, selection) => {\n    switch (selection) {\n      case 'KiB':\n        setUnit(UNIT_KIB);\n        break;\n      case 'MiB':\n        setUnit(UNIT_MIB);\n        break;\n      case 'GiB':\n        setUnit(UNIT_GIB);\n        break;\n    }\n\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <TextInput\n        className=\"pf-u-w-50\"\n        type=\"text\"\n        value={size}\n        aria-label=\"Size text input\"\n        onChange={(v) => setSize(isNaN(parseInt(v)) ? 0 : parseInt(v))}\n      />\n      <Select\n        className=\"pf-u-w-50\"\n        isOpen={isOpen}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        selections={\n          unit === UNIT_KIB ? 'KiB' : unit === UNIT_MIB ? 'MiB' : 'GiB'\n        }\n        variant={SelectVariant.single}\n        aria-label=\"Unit select\"\n      >\n        {['KiB', 'MiB', 'GiB'].map((u, index) => {\n          return <SelectOption key={index} value={u} />;\n        })}\n      </Select>\n    </>\n  );\n};\n\nSizeUnit.propTypes = {\n  size: PropTypes.number.isRequired,\n  unit: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SizeUnit;\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  HelpIcon,\n  MinusCircleIcon,\n  PlusCircleIcon,\n} from '@patternfly/react-icons';\nimport {\n  Alert,\n  Button,\n  Popover,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport MountPoint from './MountPoint';\nimport SizeUnit from './SizeUnit';\nimport { UNIT_GIB } from '../../../constants';\n\nlet initialRow = {\n  id: uuidv4(),\n  mountpoint: '/',\n  fstype: 'xfs',\n  size: 10,\n  unit: UNIT_GIB,\n};\n\nconst FileSystemConfiguration = ({ ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [draggedItemId, setDraggedItemId] = useState(null);\n  const [draggingToItemIndex, setDraggingToItemIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [itemOrder, setItemOrder] = useState([initialRow.id]);\n  const [tempItemOrder, setTempItemOrder] = useState([]);\n  const bodyref = useRef();\n  const [rows, setRows] = useState([initialRow]);\n\n  useEffect(() => {\n    const fsc = getState()?.values?.['file-system-configuration'];\n    if (!fsc) {\n      return;\n    }\n\n    const newRows = [];\n    const newOrder = [];\n    fsc.map((r) => {\n      const id = uuidv4();\n      newRows.push({\n        id,\n        mountpoint: r.mountpoint,\n        fstype: 'xfs',\n        size: r.size,\n        unit: r.unit,\n      });\n      newOrder.push(id);\n    });\n    setRows(newRows);\n    setItemOrder(newOrder);\n  }, []);\n\n  useEffect(() => {\n    change(\n      input.name,\n      itemOrder.map((r) => {\n        for (const r2 of rows) {\n          if (r2.id === r) {\n            return {\n              mountpoint: r2.mountpoint,\n              size: r2.size,\n              unit: r2.unit,\n            };\n          }\n        }\n      })\n    );\n  }, [rows, itemOrder]);\n\n  const addRow = () => {\n    const id = uuidv4();\n    setRows(\n      rows.concat([\n        {\n          id,\n          mountpoint: '/home',\n          fstype: 'xfs',\n          size: 1,\n          unit: UNIT_GIB,\n        },\n      ])\n    );\n    setItemOrder(itemOrder.concat([id]));\n  };\n\n  const removeRow = (id) => {\n    let removeIndex = rows.map((e) => e.id).indexOf(id);\n    let newRows = [...rows];\n    newRows.splice(removeIndex, 1);\n\n    let removeOrderIndex = itemOrder.indexOf(id);\n    let newOrder = [...itemOrder];\n    newOrder.splice(removeOrderIndex, 1);\n\n    setRows(newRows);\n    setItemOrder(newOrder);\n  };\n\n  const moveItem = (arr, i1, toIndex) => {\n    const fromIndex = arr.indexOf(i1);\n    if (fromIndex === toIndex) {\n      return arr;\n    }\n\n    const temp = arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, temp[0]);\n    return arr;\n  };\n\n  const move = (itemOrder) => {\n    const ulNode = bodyref.current;\n    const nodes = Array.from(ulNode.children);\n    if (nodes.map((node) => node.id).every((id, i) => id === itemOrder[i])) {\n      return;\n    }\n\n    while (ulNode.firstChild) {\n      ulNode.removeChild(ulNode.lastChild);\n    }\n\n    itemOrder.forEach((id) => {\n      ulNode.appendChild(nodes.find((n) => n.id === id));\n    });\n  };\n\n  const onDragOver = (evt) => {\n    evt.preventDefault();\n\n    const curListItem = evt.target.closest('tr');\n    if (!curListItem || !bodyref.current.contains(curListItem)) {\n      return null;\n    }\n\n    const dragId = curListItem.id;\n    const newDraggingToItemIndex = Array.from(\n      bodyref.current.children\n    ).findIndex((item) => item.id === dragId);\n    if (newDraggingToItemIndex !== draggingToItemIndex) {\n      const tempItemOrder = moveItem(\n        [...itemOrder],\n        draggedItemId,\n        newDraggingToItemIndex\n      );\n      move(tempItemOrder);\n      setDraggingToItemIndex(newDraggingToItemIndex);\n      setTempItemOrder(tempItemOrder);\n    }\n  };\n\n  const isValidDrop = (evt) => {\n    const ulRect = bodyref.current.getBoundingClientRect();\n    return (\n      evt.clientX > ulRect.x &&\n      evt.clientX < ulRect.x + ulRect.width &&\n      evt.clientY > ulRect.y &&\n      evt.clientY < ulRect.y + ulRect.height\n    );\n  };\n\n  const onDragLeave = (evt) => {\n    if (!isValidDrop(evt)) {\n      move(itemOrder);\n      setDraggingToItemIndex(null);\n    }\n  };\n\n  const onDrop = (evt) => {\n    if (isValidDrop(evt)) {\n      setItemOrder(tempItemOrder);\n    }\n  };\n\n  const onDragStart = (evt) => {\n    evt.dataTransfer.effectAllowed = 'move';\n    evt.dataTransfer.setData('text/plain', evt.currentTarget.id);\n    evt.currentTarget.classList.add(styles.modifiers.ghostRow);\n    evt.currentTarget.setAttribute('aria-pressed', 'true');\n    setDraggedItemId(evt.currentTarget.id);\n    setIsDragging(true);\n  };\n\n  const onDragEnd = (evt) => {\n    evt.target.classList.remove(styles.modifiers.ghostRow);\n    evt.target.setAttribute('aria-pressed', 'false');\n    setDraggedItemId(null);\n    setDraggingToItemIndex(null);\n    setIsDragging(false);\n  };\n\n  const setMountpoint = (id, mp) => {\n    let newRows = [...rows];\n    for (let i = 0; i < newRows.length; i++) {\n      if (newRows[i].id === id) {\n        let newRow = { ...newRows[i] };\n        newRow.mountpoint = mp;\n        newRows.splice(i, 1, newRow);\n        break;\n      }\n    }\n\n    setRows(newRows);\n  };\n\n  const setSize = (id, s, u) => {\n    let newRows = [...rows];\n    for (let i = 0; i < newRows.length; i++) {\n      if (newRows[i].id === id) {\n        let newRow = { ...newRows[i] };\n        newRow.size = s;\n        newRow.unit = u;\n        newRows.splice(i, 1, newRow);\n        break;\n      }\n    }\n\n    setRows(newRows);\n  };\n\n  return (\n    <>\n      <TextContent>\n        <Text component={TextVariants.h3}>Configure partitions</Text>\n      </TextContent>\n      {rows.length > 1 &&\n        getState()?.errors?.['file-system-configuration']?.duplicates && (\n          <Alert\n            variant=\"danger\"\n            isInline\n            title=\"Duplicate mount points: All mount points must be unique. Remove the duplicate or choose a new mount point.\"\n          />\n        )}\n      {rows.length >= 1 &&\n        getState()?.errors?.['file-system-configuration']?.root === false && (\n          <Alert\n            variant=\"danger\"\n            isInline\n            title=\"No root partition configured.\"\n          />\n        )}\n      <TextContent>\n        <Text>\n          Partitions have been generated and given default values based on best\n          practices from Red Hat, and your selections in previous steps of the\n          wizard.\n        </Text>\n      </TextContent>\n      <TableComposable\n        aria-label=\"File system table\"\n        className={isDragging && styles.modifiers.dragOver}\n        variant=\"compact\"\n      >\n        <Thead>\n          <Tr>\n            <Th />\n            <Th>Mount point</Th>\n            <Th>Type</Th>\n            <Th>\n              Minimum size\n              <Popover\n                hasAutoWidth\n                bodyContent={\n                  <TextContent>\n                    <Text>\n                      Image Builder may extend this size based on requirements,\n                      selected packages, and configurations.\n                    </Text>\n                  </TextContent>\n                }\n              >\n                <Button\n                  variant=\"plain\"\n                  aria-label=\"File system configuration info\"\n                  aria-describedby=\"file-system-configuration-info\"\n                  className=\"pf-c-form__group-label-help\"\n                >\n                  <HelpIcon />\n                </Button>\n              </Popover>\n            </Th>\n            <Th />\n          </Tr>\n        </Thead>\n        <Tbody\n          ref={bodyref}\n          onDragOver={onDragOver}\n          onDrop={onDragOver}\n          onDragLeave={onDragLeave}\n          data-testid=\"file-system-configuration-tbody\"\n        >\n          {rows.map((row, rowIndex) => (\n            <Tr\n              key={rowIndex}\n              id={row.id}\n              draggable\n              onDrop={onDrop}\n              onDragEnd={onDragEnd}\n              onDragStart={onDragStart}\n            >\n              <Td\n                draggableRow={{\n                  id: `draggable-row-${row.id}`,\n                }}\n              />\n              <Td className=\"pf-m-width-30\">\n                <MountPoint\n                  key={row.id + '-mountpoint'}\n                  mountpoint={row.mountpoint}\n                  onChange={(mp) => setMountpoint(row.id, mp)}\n                />\n                {getState().errors['file-system-configuration']?.duplicates &&\n                  getState().errors[\n                    'file-system-configuration'\n                  ]?.duplicates.indexOf(row.mountpoint) !== -1 && (\n                    <Alert\n                      variant=\"danger\"\n                      isInline\n                      isPlain\n                      title=\"Duplicate mount point.\"\n                    />\n                  )}\n              </Td>\n              <Td className=\"pf-m-width-20\">\n                {/* always xfs */}\n                {row.fstype}\n              </Td>\n              <Td className=\"pf-m-width-30\">\n                <SizeUnit\n                  key={row.id + '-sizeunit'}\n                  size={row.size}\n                  unit={row.unit}\n                  onChange={(s, u) => setSize(row.id, s, u)}\n                />\n              </Td>\n              <Td className=\"pf-m-width-10\">\n                <Button\n                  variant=\"link\"\n                  icon={<MinusCircleIcon />}\n                  onClick={() => removeRow(row.id)}\n                />\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </TableComposable>\n      <TextContent>\n        <Button\n          data-testid=\"file-system-add-partition\"\n          className=\"pf-u-text-align-left\"\n          variant=\"link\"\n          icon={<PlusCircleIcon />}\n          onClick={addRow}\n        >\n          Add partition\n        </Button>\n      </TextContent>\n    </>\n  );\n};\n\nexport default FileSystemConfiguration;\n","import React, { useEffect, useState } from 'react';\nimport { ToggleGroup, ToggleGroupItem } from '@patternfly/react-core';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nconst FileSystemConfigToggle = ({ ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [selected, setSelected] = useState(\n    getState()?.values?.['file-system-config-toggle'] || 'auto'\n  );\n\n  useEffect(() => {\n    change(input.name, selected);\n  }, [selected]);\n\n  const onClick = (_, evt) => {\n    setSelected(evt.currentTarget.id);\n  };\n\n  return (\n    <>\n      <ToggleGroup\n        data-testid=\"fsc-paritioning-toggle\"\n        aria-label=\"Automatic partitioning toggle\"\n      >\n        <ToggleGroupItem\n          onChange={onClick}\n          text=\"Use automatic partitioning\"\n          buttonId=\"auto\"\n          isSelected={selected === 'auto'}\n        />\n        <ToggleGroupItem\n          onChange={onClick}\n          text=\"Manually configure partitions\"\n          buttonId=\"manual\"\n          isSelected={selected === 'manual'}\n          data-testid=\"file-system-config-toggle-manual\"\n        />\n      </ToggleGroup>\n    </>\n  );\n};\n\nexport default FileSystemConfigToggle;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { RELEASES } from '../../../constants';\nimport isRhel from '../../../Utilities/isRhel';\n\nconst ImageOutputReleaseSelect = ({ label, isRequired, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [isOpen, setIsOpen] = useState(false);\n  const [showDevelopmentOptions, setShowDevelopmentOptions] = useState(false);\n\n  const setRelease = (_, selection) => {\n    change(input.name, selection);\n    setIsOpen(false);\n  };\n\n  const handleClear = () => {\n    change(input.name, null);\n    setShowDevelopmentOptions(false);\n  };\n\n  const handleExpand = () => {\n    setShowDevelopmentOptions(true);\n  };\n\n  return (\n    <FormGroup isRequired={isRequired} label={label}>\n      <Select\n        variant={SelectVariant.single}\n        onToggle={() => setIsOpen(!isOpen)}\n        onSelect={setRelease}\n        onClear={handleClear}\n        selections={RELEASES[getState()?.values?.[input.name]]}\n        isOpen={isOpen}\n        {...(!showDevelopmentOptions && {\n          loadingVariant: {\n            text: 'Show options for further development of RHEL',\n            onClick: handleExpand,\n          },\n        })}\n      >\n        {Object.entries(RELEASES)\n          .filter(([key]) => {\n            // Only show non-RHEL distros if expanded\n            if (showDevelopmentOptions) {\n              return true;\n            }\n\n            return isRhel(key);\n          })\n          .map(([key, release], index) => {\n            return (\n              <SelectOption key={index} value={key}>\n                {release}\n              </SelectOption>\n            );\n          })}\n      </Select>\n    </FormGroup>\n  );\n};\n\nImageOutputReleaseSelect.propTypes = {\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n};\n\nexport default ImageOutputReleaseSelect;\n","import React from 'react';\nimport { Alert, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst DeveloperProgramButton = () => {\n  return (\n    <Button\n      component=\"a\"\n      target=\"_blank\"\n      variant=\"link\"\n      icon={<ExternalLinkAltIcon />}\n      iconPosition=\"right\"\n      isInline\n      href={'https://developers.redhat.com/about'}\n    >\n      Red Hat Developer Program\n    </Button>\n  );\n};\n\nconst CentOSAcknowledgement = () => {\n  return (\n    <Alert\n      variant=\"info\"\n      isPlain\n      isInline\n      title={\n        <>\n          CentOS Stream builds are intended for the development of future\n          versions of RHEL and are not supported for production workloads or\n          other use cases.\n        </>\n      }\n    >\n      <p>\n        Join the <DeveloperProgramButton /> to learn about paid and no-cost RHEL\n        subscription options.\n      </p>\n    </Alert>\n  );\n};\n\nexport default CentOSAcknowledgement;\n","import React from 'react';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Select from '@data-driven-forms/pf4-component-mapper/select';\nimport Review from './formComponents/ReviewStep';\nimport TargetEnvironment from './formComponents/TargetEnvironment';\nimport Packages from './formComponents/Packages';\nimport RadioWithPopover from './formComponents/RadioWithPopover';\nimport AzureAuthButton from './formComponents/AzureAuthButton';\nimport ActivationKeys from './formComponents/ActivationKeys';\nimport FileSystemConfiguration from './formComponents/FileSystemConfiguration';\nimport FileSystemConfigToggle from './formComponents/FileSystemConfigToggle';\nimport ImageOutputReleaseSelect from './formComponents/ImageOutputReleaseSelect';\nimport CentOSAcknowledgement from './formComponents/CentOSAcknowledgement';\n\nconst ImageCreator = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  customValidatorMapper,\n  defaultArch,\n  className,\n  ...props\n}) => {\n  return schema ? (\n    <FormRenderer\n      initialValues={props.initialValues}\n      schema={schema}\n      className={`image-builder${className ? ` ${className}` : ''}`}\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      validatorMapper={{ ...customValidatorMapper }}\n      componentMapper={{\n        ...componentMapper,\n        review: Review,\n        output: TargetEnvironment,\n        select: Select,\n        'package-selector': {\n          component: Packages,\n          defaultArch,\n        },\n        'radio-popover': RadioWithPopover,\n        'azure-auth-button': AzureAuthButton,\n        'activation-keys': ActivationKeys,\n        'file-system-config-toggle': FileSystemConfigToggle,\n        'file-system-configuration': FileSystemConfiguration,\n        'image-output-release-select': ImageOutputReleaseSelect,\n        'centos-acknowledgement': CentOSAcknowledgement,\n        ...customComponentMapper,\n      }}\n      onCancel={onClose}\n      {...props}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nImageCreator.propTypes = {\n  schema: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  customValidatorMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.func,\n  }),\n  defaultArch: PropTypes.string,\n  className: PropTypes.string,\n  initialValues: PropTypes.object,\n};\n\nexport default ImageCreator;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Title } from '@patternfly/react-core';\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-target-aws',\n  title: 'Amazon Web Services',\n  customTitle: (\n    <Title headingLevel=\"h1\" size=\"xl\">\n      Target environment - Amazon Web Service\n    </Title>\n  ),\n  name: 'aws-target-env',\n  substepOf: 'Target environment',\n  nextStep: ({ values }) => nextStepMapper(values, { skipAws: true }),\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text-component',\n      label: (\n        <p>\n          Your image will be uploaded to AWS and shared with the account you\n          provide below. <br />\n          The shared image will expire within 14 days. To keep the image longer,\n          copy it to your AWS account.\n        </p>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'aws-account-id',\n      className: 'pf-u-w-25',\n      'data-testid': 'aws-account-id',\n      type: 'text',\n      label: 'AWS account ID',\n      isRequired: true,\n      autoFocus: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.EXACT_LENGTH,\n          threshold: 12,\n        },\n      ],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Button, Text, TextContent, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-target-msazure',\n  title: 'Microsoft Azure',\n  customTitle: (\n    <Title headingLevel=\"h1\" size=\"xl\">\n      Target environment - Microsoft Azure\n    </Title>\n  ),\n  name: 'ms-azure-target-env',\n  substepOf: 'Target environment',\n  nextStep: ({ values }) =>\n    nextStepMapper(values, {\n      skipAws: true,\n      skipGoogle: true,\n      skipAzure: true,\n    }),\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'azure-description',\n      label: (\n        <TextContent>\n          <Text>\n            Upon build, Image Builder sends the image to the selected authorized\n            Azure account. The image will be uploaded to the resource group in\n            the subscription you specify.\n          </Text>\n          <Text>\n            To authorize Image Builder to push images to Microsoft Azure, the\n            account owner must configure Image Builder as an authorized\n            application for a specific tenant ID and give it the role of\n            &quot;Contributor&quot; to at least one resource group.\n            <br />\n            <Button\n              component=\"a\"\n              target=\"_blank\"\n              variant=\"link\"\n              icon={<ExternalLinkAltIcon />}\n              iconPosition=\"right\"\n              isInline\n              href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow\"\n            >\n              Learn more about OAuth 2.0\n            </Button>\n          </Text>\n        </TextContent>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'azure-tenant-id',\n      className: 'pf-u-w-50',\n      'data-testid': 'azure-tenant-id',\n      type: 'text',\n      label: 'Azure Tenant GUID',\n      required: true,\n      isRequired: true,\n      autoFocus: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern:\n            /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i,\n          message: 'Please enter a valid tenant ID',\n        },\n      ],\n    },\n    {\n      component: 'azure-auth-button',\n      name: 'azure-auth-button',\n      'data-testid': 'azure-auth-button',\n      required: true,\n      isRequired: true,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'azure-subscription-id',\n      className: 'pf-u-w-50',\n      'data-testid': 'azure-subscription-id',\n      type: 'text',\n      label: 'Subscription ID',\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern:\n            /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i,\n          message: 'Please enter a valid subscription ID',\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'azure-resource-group',\n      className: 'pf-u-w-50',\n      'data-testid': 'azure-resource-group',\n      type: 'text',\n      label: 'Resource group',\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[-\\w._()]+[-\\w_()]$/,\n          message:\n            'Resource group names only allow alphanumeric characters, ' +\n            'periods, underscores, hyphens, and parenthesis and cannot end in a period',\n        },\n      ],\n    },\n    // TODO check oauth2 thing too here?\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport StepTemplate from './stepTemplate';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-systemconfiguration-packages',\n  title: 'Additional packages',\n  name: 'packages',\n  substepOf: 'System configuration',\n  nextStep: 'image-name',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'packages-text-component',\n      label: (\n        <Text>\n          Images built with Image Builder include all required packages.\n          <br />\n          You can add additional packages to your image by searching\n          &quot;Available packages&quot; and adding them to the &quot;Chosen\n          packages&quot; list.\n        </Text>\n      ),\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  Button,\n  Popover,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, HelpIcon } from '@patternfly/react-icons';\nimport StepTemplate from './stepTemplate';\n\nconst PopoverActivation = () => {\n  return (\n    <Popover\n      hasAutoWidth\n      maxWidth=\"35rem\"\n      bodyContent={\n        <TextContent>\n          <Text>\n            Activation keys allow you to register a system with appropriate\n            subscriptions and system purpose attached.\n          </Text>\n        </TextContent>\n      }\n    >\n      <Button\n        variant=\"plain\"\n        aria-label=\"Activation key popover\"\n        aria-describedby=\"subscription-activation-key\"\n        className=\"pf-c-form__group-label-help\"\n      >\n        <HelpIcon />\n      </Button>\n    </Popover>\n  );\n};\n\nexport default {\n  StepTemplate,\n  id: 'wizard-registration',\n  title: 'Registration',\n  name: 'registration',\n  nextStep: 'File system configuration',\n  fields: [\n    {\n      component: componentTypes.RADIO,\n      label: 'Register images with Red Hat',\n      name: 'register-system',\n      initialValue: 'register-now-insights',\n      options: [\n        {\n          label: 'Register and connect image instances with Red Hat',\n          description: 'Includes Subscriptions and Red Hat Insights',\n          value: 'register-now-insights',\n          'data-testid': 'radio-register-now-insights',\n          autoFocus: true,\n        },\n        {\n          label: 'Register image instances only',\n          description: 'Includes Subscriptions only',\n          value: 'register-now',\n          className: 'pf-u-mt-sm',\n          'data-testid': 'radio-register-now',\n        },\n        {\n          label: 'Register later',\n          value: 'register-later',\n          className: 'pf-u-mt-sm',\n          'data-testid': 'radio-register-later',\n        },\n      ],\n    },\n    {\n      component: 'activation-keys',\n      name: 'subscription-activation-key',\n      required: true,\n      label: (\n        <>\n          Activation key to use for this image\n          <PopoverActivation />\n        </>\n      ),\n      condition: {\n        or: [\n          { when: 'register-system', is: 'register-now-insights' },\n          { when: 'register-system', is: 'register-now' },\n        ],\n      },\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'subscription-activation-description',\n      label: (\n        <>\n          Create and manage activation keys in the&nbsp;\n          <Button\n            component=\"a\"\n            target=\"_blank\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            isInline\n            href=\"https://access.redhat.com/\"\n          >\n            Customer Portal\n          </Button>\n        </>\n      ),\n      condition: {\n        or: [\n          { when: 'register-system', is: 'register-now-insights' },\n          { when: 'register-system', is: 'register-now' },\n        ],\n      },\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'subscription-register-later',\n      label: (\n        <TextContent>\n          <Text component={TextVariants.h3}>Register Later</Text>\n          <Text>\n            On initial boot, systems will need to be registered manually before\n            having access to updates or Red Hat services.\n          </Text>\n          <Text>Registering now is recommended.</Text>\n        </TextContent>\n      ),\n      condition: {\n        or: [{ when: 'register-system', is: 'register-later' }],\n      },\n    },\n  ],\n};\n","import React, { useContext, useState } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport PropTypes from 'prop-types';\n\nconst CustomButtons = ({ buttonLabels: { cancel, submit, back } }) => {\n  const [isSaving, setIsSaving] = useState(false);\n  const { handlePrev, formOptions } = useContext(WizardContext);\n  return (\n    <FormSpy>\n      {() => (\n        <React.Fragment>\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            isDisabled={\n              !formOptions.valid ||\n              formOptions.getState().validating ||\n              isSaving\n            }\n            isLoading={isSaving}\n            onClick={() => {\n              formOptions.onSubmit({\n                values: formOptions.getState().values,\n                setIsSaving,\n              });\n            }}\n          >\n            {isSaving ? 'Creating image' : submit}\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={handlePrev}\n            isDisabled={isSaving}\n          >\n            {back}\n          </Button>\n          <div className=\"pf-c-wizard__footer-cancel\">\n            <Button\n              type=\"button\"\n              variant=\"link\"\n              onClick={formOptions.onCancel}\n              isDisabled={isSaving}\n            >\n              {cancel}\n            </Button>\n          </div>\n        </React.Fragment>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  buttonLabels: PropTypes.shape({\n    cancel: PropTypes.node,\n    submit: PropTypes.node,\n    back: PropTypes.node,\n  }),\n  isSaving: PropTypes.bool,\n};\n\nexport default CustomButtons;\n","import StepTemplate from './stepTemplate';\nimport CustomButtons from '../formComponents/CustomSubmitButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-review',\n  name: 'review',\n  title: 'Review',\n  buttons: CustomButtons,\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Text } from '@patternfly/react-core';\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\nimport { RHEL_9 } from '../../../constants.js';\nimport DocumentationButton from '../../sharedComponents/DocumentationButton';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-imageoutput',\n  title: 'Image output',\n  name: 'image-output',\n  nextStep: ({ values }) => nextStepMapper(values),\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'image-output-plain-text',\n      label: (\n        <Text>\n          Image builder allows you to create a custom image and push it to\n          target environments.\n          <br />\n          <DocumentationButton />\n        </Text>\n      ),\n    },\n    {\n      component: 'image-output-release-select',\n      label: 'Release',\n      name: 'release',\n      initialValue: RHEL_9,\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n    {\n      component: 'centos-acknowledgement',\n      name: 'centos-acknowledgement',\n      condition: {\n        when: 'release',\n        pattern: /centos-*/,\n      },\n    },\n    {\n      component: 'output',\n      name: 'target-environment',\n      label: 'Select target environments',\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: 'targetEnvironmentValidator',\n        },\n      ],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Text } from '@patternfly/react-core';\n\nimport StepTemplate from './stepTemplate';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-systemconfiguration-filesystem',\n  title: 'File system configuration',\n  name: 'File system configuration',\n  substepOf: 'System configuration',\n  nextStep: 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'file-system-configuration-text-component',\n      label: (\n        <>\n          <Text>\n            Red Hat recommends using automatic partitioning for most\n            installations.\n          </Text>\n          <Text>\n            Alternatively, you may manually configure the file system of your\n            image by adding, removing, and editing partitions.\n          </Text>\n        </>\n      ),\n    },\n    {\n      component: 'file-system-config-toggle',\n      name: 'file-system-config-toggle',\n      label: 'File system configurations toggle',\n    },\n    {\n      component: 'file-system-configuration',\n      name: 'file-system-configuration',\n      label: 'File system configurations',\n      validate: [\n        { type: 'fileSystemConfigurationValidator' },\n        { type: validatorTypes.REQUIRED },\n      ],\n      condition: {\n        when: 'file-system-config-toggle',\n        is: 'manual',\n      },\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport StepTemplate from './stepTemplate';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-details',\n  name: 'image-name',\n  title: 'Name image',\n  nextStep: 'review',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text-component',\n      label: (\n        <p>\n          Optionally enter a name for your image. All images will have a UUID.\n        </p>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'image-name',\n      type: 'text',\n      label: 'Image name',\n      autoFocus: true,\n      validate: [\n        {\n          type: validatorTypes.MAX_LENGTH,\n          threshold: 100,\n        },\n      ],\n    },\n  ],\n};\n","const FileSystemConfigurationValidator = () => (fsc) => {\n  if (!fsc) {\n    return undefined;\n  }\n\n  let mpFreqs = {};\n  for (const fs of fsc) {\n    const mp = fs.mountpoint;\n    if (mp in mpFreqs) {\n      mpFreqs[mp]++;\n    } else {\n      mpFreqs[mp] = 1;\n    }\n  }\n\n  let duplicates = [];\n  for (const [k, v] of Object.entries(mpFreqs)) {\n    if (v > 1) {\n      duplicates.push(k);\n    }\n  }\n\n  let root = mpFreqs['/'] >= 1;\n  return duplicates.length === 0 && root\n    ? undefined\n    : {\n        duplicates: duplicates === [] ? undefined : duplicates,\n        root,\n      };\n};\n\nexport default FileSystemConfigurationValidator;\n","const TargetEnvironmentValidator = () => (targets) => {\n  if (!targets) {\n    return undefined;\n  }\n\n  // at least one of the target environments must\n  // be set to true. This reduces the value to\n  // a single boolean which is a flag for whether\n  // at least one target has been selected or not\n  let valid = Object.values(targets).reduce(\n    (prev, curr) => curr || prev,\n    false\n  );\n  return !valid ? 'Please select an image' : undefined;\n};\n\nexport default TargetEnvironmentValidator;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useDispatch } from 'react-redux';\nimport ImageCreator from './ImageCreator';\nimport {\n  awsTarget,\n  fileSystemConfiguration,\n  googleCloudTarger,\n  imageName,\n  imageOutput,\n  msAzureTarget,\n  packages,\n  registration,\n  review,\n} from './steps';\nimport {\n  fileSystemConfigurationValidator,\n  targetEnvironmentValidator,\n} from './validators';\nimport DocumentationButton from '../sharedComponents/DocumentationButton';\nimport './CreateImageWizard.scss';\nimport api from '../../api';\nimport { UNIT_GIB, UNIT_KIB, UNIT_MIB } from '../../constants';\nimport isRhel from '../../Utilities/isRhel';\nimport { composeAdded } from '../../store/actions/actions';\n\nconst handleKeyDown = (e, handleClose) => {\n  if (e.key === 'Escape') {\n    handleClose();\n  }\n};\n\nconst onSave = (values) => {\n  let customizations = {\n    packages: values['selected-packages']?.map((p) => p.name),\n  };\n\n  if (values['register-system'] === 'register-now-insights') {\n    customizations.subscription = {\n      'activation-key': values['subscription-activation-key'],\n      insights: true,\n      organization: Number(values['subscription-organization-id']),\n      'server-url': values['subscription-server-url'],\n      'base-url': values['subscription-base-url'],\n    };\n  } else if (values['register-system'] === 'register-now') {\n    customizations.subscription = {\n      'activation-key': values['subscription-activation-key'],\n      insights: false,\n      organization: Number(values['subscription-organization-id']),\n      'server-url': values['subscription-server-url'],\n      'base-url': values['subscription-base-url'],\n    };\n  }\n\n  if (values['file-system-config-toggle'] === 'manual') {\n    customizations.filesystem = [];\n    for (let fsc of values['file-system-configuration']) {\n      customizations.filesystem.push({\n        mountpoint: fsc.mountpoint,\n        min_size: fsc.size * fsc.unit,\n      });\n    }\n  }\n\n  let requests = [];\n  if (values['target-environment']?.aws) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'ami',\n          upload_request: {\n            type: 'aws',\n            options: {\n              share_with_accounts: [values['aws-account-id']],\n            },\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.gcp) {\n    let share = '';\n    switch (values['google-account-type']) {\n      case 'googleAccount':\n        share = `user:${values['google-email']}`;\n        break;\n      case 'serviceAccount':\n        share = `serviceAccount:${values['google-email']}`;\n        break;\n      case 'googleGroup':\n        share = `group:${values['google-email']}`;\n        break;\n      case 'domain':\n        share = `domain:${values['google-domain']}`;\n        break;\n    }\n\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'gcp',\n          upload_request: {\n            type: 'gcp',\n            options: {\n              share_with_accounts: [share],\n            },\n          },\n        },\n      ],\n      customizations,\n    };\n\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.azure) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'vhd',\n          upload_request: {\n            type: 'azure',\n            options: {\n              tenant_id: values['azure-tenant-id'],\n              subscription_id: values['azure-subscription-id'],\n              resource_group: values['azure-resource-group'],\n            },\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.vsphere) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'vsphere',\n          upload_request: {\n            type: 'aws.s3',\n            options: {},\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.['guest-image']) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'guest-image',\n          upload_request: {\n            type: 'aws.s3',\n            options: {},\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.['image-installer']) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'image-installer',\n          upload_request: {\n            type: 'aws.s3',\n            options: {},\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  return requests;\n};\n\nconst parseSizeUnit = (bytesize) => {\n  let size;\n  let unit;\n\n  if (bytesize % UNIT_GIB === 0) {\n    size = bytesize / UNIT_GIB;\n    unit = UNIT_GIB;\n  } else if (bytesize % UNIT_MIB === 0) {\n    size = bytesize / UNIT_MIB;\n    unit = UNIT_MIB;\n  } else if (bytesize % UNIT_KIB === 0) {\n    size = bytesize / UNIT_KIB;\n    unit = UNIT_KIB;\n  }\n\n  return [size, unit];\n};\n\nconst getPackageDescription = async (release, arch, packageName) => {\n  const args = [release, arch, packageName];\n  let { data, meta } = await api.getPackages(...args);\n  let summary;\n\n  // the package should be found in the 0 index\n  // if not then fetch all package matches and search for the package\n  if (data[0]?.name === packageName) {\n    summary = data[0]?.summary;\n  } else {\n    if (data?.length !== meta.count) {\n      ({ data } = await api.getPackages(...args, meta.count));\n    }\n\n    const pack = data.find((pack) => packageName === pack.name);\n    summary = pack?.summary;\n  }\n\n  // if no matching package is found return an empty string for description\n  return summary || '';\n};\n\n// map the compose request object to the expected form state\nconst requestToState = (composeRequest) => {\n  if (composeRequest) {\n    const imageRequest = composeRequest.image_requests[0];\n    const uploadRequest = imageRequest.upload_request;\n    let formState = {};\n\n    formState['image-name'] = composeRequest.image_name;\n\n    formState.release = composeRequest?.distribution;\n    // set defaults for target environment first\n    formState['target-environment'] = {\n      aws: false,\n      azure: false,\n      gcp: false,\n      'guest-image': false,\n    };\n    // then select the one from the request\n    // if the image type is to a cloud provider we use the upload_request.type\n    // or if the image is intended for download we use the image_type\n    let targetEnvironment;\n    if (uploadRequest.type === 'aws.s3') {\n      targetEnvironment = imageRequest.image_type;\n    } else {\n      targetEnvironment = uploadRequest.type;\n    }\n\n    formState['target-environment'][targetEnvironment] = true;\n\n    if (targetEnvironment === 'aws') {\n      formState['aws-account-id'] =\n        uploadRequest?.options?.share_with_accounts[0];\n    } else if (targetEnvironment === 'azure') {\n      formState['azure-tenant-id'] = uploadRequest?.options?.tenant_id;\n      formState['azure-subscription-id'] =\n        uploadRequest?.options?.subscription_id;\n      formState['azure-resource-group'] =\n        uploadRequest?.options?.resource_group;\n    } else if (targetEnvironment === 'gcp') {\n      // parse google account info\n      // roughly in the format `accountType:accountEmail`\n      const accountInfo = uploadRequest?.options?.share_with_accounts[0];\n      const [accountTypePrefix, account] = accountInfo.split(':');\n\n      switch (accountTypePrefix) {\n        case 'user':\n          formState['google-account-type'] = 'googleAccount';\n          formState['google-email'] = account;\n          break;\n        case 'serviceAccount':\n          formState['google-account-type'] = 'serviceAccount';\n          formState['google-email'] = account;\n          break;\n        case 'group':\n          formState['google-account-type'] = 'googleGroup';\n          formState['google-email'] = account;\n          break;\n        case 'domain':\n          formState['google-account-type'] = 'domain';\n          formState['google-domain'] = account;\n          break;\n      }\n    }\n\n    // customizations\n    // packages\n    let packs = [];\n    composeRequest?.customizations?.packages?.forEach(async (packName) => {\n      const packageDescription = await getPackageDescription(\n        composeRequest?.distribution,\n        imageRequest?.architecture,\n        packName\n      );\n      const pack = {\n        name: packName,\n        summary: packageDescription,\n      };\n      packs.push(pack);\n    });\n    formState['selected-packages'] = packs;\n\n    // filesystem\n    const fs = composeRequest?.customizations?.filesystem;\n    if (fs) {\n      formState['file-system-config-toggle'] = 'manual';\n      let fileSystemConfiguration = [];\n      for (let fsc of fs) {\n        const [size, unit] = parseSizeUnit(fsc.min_size);\n        fileSystemConfiguration.push({\n          mountpoint: fsc.mountpoint,\n          size,\n          unit,\n        });\n      }\n\n      formState['file-system-configuration'] = fileSystemConfiguration;\n    }\n\n    // subscription\n    const subscription = composeRequest?.customizations?.subscription;\n    if (subscription) {\n      if (subscription.insights) {\n        formState['register-system'] = 'register-now-insights';\n      } else {\n        formState['register-system'] = 'register-now';\n      }\n\n      formState['subscription-activation-key'] = subscription['activation-key'];\n      formState['subscription-organization-id'] = subscription.organization;\n\n      if (insights.chrome.isProd()) {\n        formState['subscription-server-url'] = 'subscription.rhsm.redhat.com';\n        formState['subscription-base-url'] = 'https://cdn.redhat.com/';\n      } else {\n        formState['subscription-server-url'] =\n          'subscription.rhsm.stage.redhat.com';\n        formState['subscription-base-url'] = 'https://cdn.stage.redhat.com/';\n      }\n    } else {\n      formState['register-system'] = 'register-later';\n    }\n\n    return formState;\n  } else {\n    return;\n  }\n};\n\nconst formStepHistory = (composeRequest) => {\n  if (composeRequest) {\n    const imageRequest = composeRequest.image_requests[0];\n    const uploadRequest = imageRequest.upload_request;\n    let steps = ['image-output'];\n\n    if (uploadRequest.type === 'aws') {\n      steps.push('aws-target-env');\n    } else if (uploadRequest.type === 'azure') {\n      steps.push('azure-target-env');\n    } else if (uploadRequest.type === 'gcp') {\n      steps.push('google-cloud-target-env');\n    }\n\n    if (isRhel(composeRequest?.distribution)) {\n      steps.push('registration');\n    }\n\n    steps = steps.concat([\n      'File system configuration',\n      'packages',\n      'image-name',\n    ]);\n\n    return steps;\n  } else {\n    return [];\n  }\n};\n\nconst CreateImageWizard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const composeRequest = location?.state?.composeRequest;\n  const initialState = requestToState(composeRequest);\n  const stepHistory = formStepHistory(composeRequest);\n\n  const handleClose = () => navigate('/');\n\n  return (\n    <ImageCreator\n      onClose={handleClose}\n      onSubmit={({ values, setIsSaving }) => {\n        setIsSaving(() => true);\n        const requests = onSave(values);\n        Promise.all(\n          requests.map((request) =>\n            api.composeImage(request).then((response) => {\n              dispatch(\n                composeAdded(\n                  {\n                    ...response,\n                    request,\n                    image_status: { status: 'pending' },\n                  },\n                  true\n                )\n              );\n            })\n          )\n        )\n          .then(() => {\n            navigate('/');\n            dispatch(\n              addNotification({\n                variant: 'success',\n                title: 'Your image is being created',\n              })\n            );\n\n            setIsSaving(false);\n          })\n          .catch((err) => {\n            dispatch(\n              addNotification({\n                variant: 'danger',\n                title: 'Your image could not be created',\n                description:\n                  'Status code ' +\n                  err.response.status +\n                  ': ' +\n                  err.response.statusText,\n              })\n            );\n\n            setIsSaving(false);\n          });\n      }}\n      defaultArch=\"x86_64\"\n      customValidatorMapper={{\n        fileSystemConfigurationValidator,\n        targetEnvironmentValidator,\n      }}\n      schema={{\n        fields: [\n          {\n            component: componentTypes.WIZARD,\n            name: 'image-builder-wizard',\n            className: 'image_builder',\n            isDynamic: true,\n            inModal: true,\n            onKeyDown: (e) => {\n              handleKeyDown(e, handleClose);\n            },\n            buttonLabels: {\n              submit: 'Create image',\n            },\n            showTitles: true,\n            title: 'Create image',\n            crossroads: ['target-environment', 'release'],\n            description: (\n              <>\n                Image builder allows you to create a custom image and push it to\n                target environments. <DocumentationButton />\n              </>\n            ),\n            // order in this array does not reflect order in wizard nav, this order is managed inside\n            // of each step by `nextStep` property!\n            fields: [\n              imageOutput,\n              awsTarget,\n              googleCloudTarger,\n              msAzureTarget,\n              registration,\n              packages,\n              fileSystemConfiguration,\n              imageName,\n              review,\n            ],\n            initialState: {\n              activeStep: location?.state?.initialStep || 'image-output', // name of the active step\n              activeStepIndex: stepHistory.length, // active index\n              maxStepIndex: stepHistory.length, // max achieved index\n              prevSteps: stepHistory, // array with names of previously visited steps\n            },\n          },\n        ],\n      }}\n      initialValues={initialState}\n    />\n  );\n};\n\nexport default CreateImageWizard;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst DocumentationButton = () => {\n  const documentationURL =\n    'https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/uploading_a_customized_rhel_system_image_to_cloud_environments/index';\n\n  return (\n    <Button\n      component=\"a\"\n      target=\"_blank\"\n      variant=\"link\"\n      icon={<ExternalLinkAltIcon />}\n      iconPosition=\"right\"\n      isInline\n      href={documentationURL}\n    >\n      Documentation\n    </Button>\n  );\n};\n\nexport default DocumentationButton;\n","import axios from 'axios';\nimport { IMAGE_BUILDER_API, RHSM_API } from './constants';\n\nconst postHeaders = { headers: { 'Content-Type': 'application/json' } };\n\nasync function composeImage(body) {\n  let path = '/compose';\n  const request = await axios.post(\n    IMAGE_BUILDER_API.concat(path),\n    body,\n    postHeaders\n  );\n  return request.data;\n}\n\nasync function getComposes(limit, offset) {\n  const params = new URLSearchParams({\n    limit,\n    offset,\n  });\n  let path = '/composes?' + params.toString();\n  const request = await axios.get(IMAGE_BUILDER_API.concat(path));\n  return request.data;\n}\n\nasync function getComposeStatus(id) {\n  let path = '/composes/' + id;\n  const request = await axios.get(IMAGE_BUILDER_API.concat(path));\n  return request.data;\n}\n\nasync function getPackages(distribution, architecture, search, limit) {\n  const params = new URLSearchParams({\n    distribution,\n    architecture,\n    search,\n  });\n  limit && params.append('limit', limit);\n  let path = '/packages?' + params.toString();\n  const request = await axios.get(IMAGE_BUILDER_API.concat(path));\n  return request.data;\n}\n\nasync function getVersion() {\n  let path = '/version';\n  const request = await axios.get(IMAGE_BUILDER_API.concat(path));\n  return request.data;\n}\n\nasync function getActivationKeys() {\n  const path = '/activation_keys';\n  const request = await axios.get(RHSM_API.concat(path));\n  return request.data.body;\n}\n\nexport default {\n  composeImage,\n  getComposes,\n  getComposeStatus,\n  getPackages,\n  getVersion,\n  getActivationKeys,\n};\n","export const IMAGE_BUILDER_API = '/api/image-builder/v1';\nexport const RHSM_API = '/api/rhsm/v2';\nexport const RHEL_8 = 'rhel-86';\nexport const RHEL_9 = 'rhel-90';\n\nexport const UNIT_KIB = 1024 ** 1;\nexport const UNIT_MIB = 1024 ** 2;\nexport const UNIT_GIB = 1024 ** 3;\n\nexport const RELEASES = {\n  [RHEL_8]: 'Red Hat Enterprise Linux (RHEL) 8',\n  [RHEL_9]: 'Red Hat Enterprise Linux (RHEL) 9',\n  'centos-8': 'CentOS Stream 8',\n  'centos-9': 'CentOS Stream 9',\n};\n","import api from '../../api';\nimport types from '../types';\n\nfunction composeUpdated(compose) {\n  return {\n    type: types.COMPOSE_UPDATED,\n    payload: { compose },\n  };\n}\n\nexport const composeFailed = (error) => ({\n  type: types.COMPOSE_FAILED,\n  payload: { error },\n});\n\nexport const composeAdded = (compose, insert) => ({\n  type: types.COMPOSE_ADDED,\n  payload: { compose, insert },\n});\n\nexport const composeStart = (composeRequest) => async (dispatch) => {\n  // response will be of the format {id: ''}\n  const request = api.composeImage(composeRequest);\n  return request\n    .then((response) => {\n      // add the compose id to the compose object to provide access to the id if iterating through\n      // composes and add an image status of 'pending' alongside the compose request.\n      const compose = Object.assign(\n        {},\n        response,\n        { request: composeRequest },\n        { image_status: { status: 'pending' } }\n      );\n      dispatch(composeAdded(compose, true));\n    })\n    .catch((err) => {\n      if (err.response.status === 500) {\n        dispatch(composeFailed('Error: Something went wrong serverside'));\n      } else {\n        dispatch(composeFailed('Error: Something went wrong with the compose'));\n      }\n    });\n};\n\nexport const composeUpdatedStatus = (id, status) => ({\n  type: types.COMPOSE_UPDATED_STATUS,\n  payload: { id, status },\n});\n\nexport const composeGetStatus = (id) => async (dispatch) => {\n  const request = await api.getComposeStatus(id);\n  dispatch(composeUpdatedStatus(id, request.image_status));\n};\n\nexport const composesUpdatedCount = (count) => ({\n  type: types.COMPOSES_UPDATED_COUNT,\n  payload: { count },\n});\n\nexport const composesGet = (limit, offset) => async (dispatch) => {\n  const request = await api.getComposes(limit, offset);\n  request.data.map((compose) => {\n    dispatch(composeAdded(compose, false));\n    dispatch(composeGetStatus(compose.id));\n  });\n  dispatch(composesUpdatedCount(request.meta.count));\n};\n\nfunction setRelease({ arch, distro }) {\n  return {\n    type: types.SET_RELEASE,\n    payload: {\n      arch,\n      distro,\n    },\n  };\n}\n\nfunction setUploadDestinations({ aws, azure, google }) {\n  return {\n    type: types.SET_UPLOAD_DESTINATIONS,\n    payload: {\n      aws,\n      azure,\n      google,\n    },\n  };\n}\n\nfunction setUploadAWS({ shareWithAccounts }) {\n  return {\n    type: types.SET_UPLOAD_AWS,\n    payload: {\n      shareWithAccounts,\n    },\n  };\n}\n\nfunction setUploadAzure({ tenantId, subscriptionId, resourceGroup }) {\n  return {\n    type: types.SET_UPLOAD_AZURE,\n    payload: {\n      tenantId,\n      subscriptionId,\n      resourceGroup,\n    },\n  };\n}\n\nfunction setUploadGoogle({ accountType, shareWithAccounts }) {\n  return {\n    type: types.SET_UPLOAD_GOOGLE,\n    payload: {\n      accountType,\n      shareWithAccounts,\n    },\n  };\n}\n\nfunction setSelectedPackages(selectedPackages) {\n  return {\n    type: types.SET_SELECTED_PACKAGES,\n    payload: selectedPackages,\n  };\n}\n\nfunction setSubscription({ activationKey, insights, organization }) {\n  return {\n    type: types.SET_SUBSCRIPTION,\n    payload: {\n      activationKey,\n      insights,\n      organization,\n    },\n  };\n}\n\nfunction setSubscribeNow(subscribeNow) {\n  return {\n    type: types.SET_SUBSCRIBE_NOW,\n    payload: subscribeNow,\n  };\n}\n\nexport default {\n  composesGet,\n  composeStart,\n  composeUpdated,\n  composeGetStatus,\n  setRelease,\n  setUploadDestinations,\n  setUploadAWS,\n  setUploadAzure,\n  setUploadGoogle,\n  setSelectedPackages,\n  setSubscription,\n  setSubscribeNow,\n};\n"],"names":["distro","RHEL_8","RHEL_9","targetEnv","release","skipAws","skipGoogle","skipAzure","aws","gcp","azure","isRhel","StepTemplate","id","formFields","formRef","title","customTitle","showTitle","showTitles","ref","className","Title","headingLevel","size","propTypes","PropTypes","formOptions","renderForm","isRequired","current","Element","googleAccType","googleAccount","serviceAccount","googleGroup","domain","PopoverInfo","appendTo","Popover","hasAutoWidth","maxWidth","headerContent","flipBehavior","bodyContent","TextContent","Text","TextList","TextListItem","Button","variant","name","substepOf","nextStep","values","nextStepMapper","fields","component","componentTypes","label","initialValue","options","Object","entries","map","value","autoFocus","validate","type","validatorTypes","condition","or","when","is","pattern","message","FSReviewTable","props","TableComposable","Thead","Tr","Th","Tbody","fsc","r","ri","key","Td","mountpoint","unit","UNIT_GIB","UNIT_MIB","useState","activeTabKey","setActiveTabKey","orgId","setOrgId","minSize","setMinSize","useFormApi","change","getState","useEffect","registerSystem","insights","chrome","auth","getUser","userData","identity","internal","org_id","toFixed","DescriptionList","isCompact","isHorizontal","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","RELEASES","Tabs","isFilled","activeKey","onSelect","event","tabIndex","Tab","eventKey","TabTitleText","List","isPlain","iconSize","ListItem","icon","src","TextVariants","TextListVariants","TextListItemVariants","vsphere","undefined","Spinner","position","minWidth","length","TargetEnvironment","input","useFieldApi","environment","setEnvironment","handleSetEnvironment","env","prevEnv","newEnv","handleKeyDown","e","FormGroup","Tile","onClick","onKeyDown","isSelected","isStacked","isDisplayLarge","Checkbox","isChecked","onChange","defaultProps","Packages","defaultArch","packagesSearchName","setPackagesSearchName","filterAvailable","setFilterAvailable","filterChosen","setFilterChosen","packagesAvailable","setPackagesAvailable","packagesAvailableFound","setPackagesAvailableFound","packagesChosen","setPackagesChosen","packagesChosenFound","setPackagesChosenFound","focus","setFocus","selectedPackages","searchResultsComparator","useCallback","searchTerm","a","b","toLowerCase","startsWith","setPackagesAvailableSorted","packageList","filter","sortResults","sort","setPackagesChosenSorted","filterPackagesAvailable","availablePackage","some","chosenPackage","getAllPackages","args","architecture","api","data","meta","count","handlePackagesAvailableSearch","packagesAvailableFiltered","keydownHandler","stopPropagation","document","addEventListener","removeEventListener","areFound","pack","includes","isHidden","updateState","updatedPackagesAvailable","updatedPackagesChosen","summary","onOptionSelect","index","isChosen","newChosen","selected","newAvailable","firstInputElement","useRef","DualListSelector","DualListSelectorPane","searchInput","SearchInput","placeholder","onFocus","onBlur","val","submitSearchButtonLabel","onSearch","resetButtonLabel","onClear","DualListSelectorList","DualListSelectorListItem","DualListSelectorControlsWrapper","DualListSelectorControl","isDisabled","option","newPackagesChosen","push","tooltipContent","newPackagesAvailable","found","filteredPackagesChosen","handlePackagesChosenSearch","RadioWithPopover","tenantId","guidRegex","RegExp","target","test","href","ActivationKeys","activationKeys","setActivationKeys","isOpen","setIsOpen","isLoading","setIsLoading","activationKeySelected","selectActivationKey","then","keys","isProd","Select","SelectVariant","onToggle","_","selection","selections","placeholderText","typeAheadAriaLabel","SelectOption","isNoResultsOption","isSVG","MountPoint","validPrefixes","prefix","setPrefix","suffix","setSuffix","p","substring","suf","mp","path","pfx","TextInput","v","SizeUnit","setUnit","setSize","isNaN","parseInt","UNIT_KIB","u","initialRow","uuidv4","fstype","draggedItemId","setDraggedItemId","draggingToItemIndex","setDraggingToItemIndex","isDragging","setIsDragging","itemOrder","setItemOrder","tempItemOrder","setTempItemOrder","bodyref","rows","setRows","newRows","newOrder","r2","move","ulNode","nodes","Array","from","children","node","every","i","firstChild","removeChild","lastChild","forEach","appendChild","find","n","onDragOver","evt","preventDefault","curListItem","closest","contains","dragId","newDraggingToItemIndex","findIndex","item","arr","i1","toIndex","fromIndex","indexOf","temp","splice","moveItem","isValidDrop","ulRect","getBoundingClientRect","clientX","x","width","clientY","y","height","onDrop","onDragStart","dataTransfer","effectAllowed","setData","currentTarget","classList","add","styles","setAttribute","onDragEnd","remove","errors","duplicates","Alert","isInline","root","onDragLeave","row","rowIndex","draggable","draggableRow","newRow","setMountpoint","s","removeIndex","removeOrderIndex","removeRow","concat","setSelected","ToggleGroup","ToggleGroupItem","text","buttonId","ImageOutputReleaseSelect","showDevelopmentOptions","setShowDevelopmentOptions","loadingVariant","DeveloperProgramButton","iconPosition","ImageCreator","schema","onSubmit","onClose","customComponentMapper","customValidatorMapper","initialValues","subscription","FormTemplate","showFormControls","formValues","validatorMapper","componentMapper","review","Review","output","select","AzureAuthButton","FileSystemConfigToggle","FileSystemConfiguration","CentOSAcknowledgement","onCancel","threshold","required","PopoverActivation","description","CustomButtons","buttonLabels","cancel","submit","back","isSaving","setIsSaving","useContext","WizardContext","handlePrev","valid","validating","buttons","DocumentationButton","mpFreqs","k","targets","reduce","prev","curr","parseSizeUnit","bytesize","getPackageDescription","arch","packageName","dispatch","useDispatch","navigate","useNavigate","location","useLocation","composeRequest","state","initialState","targetEnvironment","imageRequest","image_requests","uploadRequest","upload_request","formState","image_name","distribution","image_type","share_with_accounts","tenant_id","subscription_id","resource_group","split","accountTypePrefix","account","packs","customizations","packages","packName","packageDescription","fs","filesystem","fileSystemConfiguration","min_size","organization","requestToState","stepHistory","steps","formStepHistory","handleClose","requests","Number","request","share","onSave","Promise","all","response","composeAdded","image_status","status","addNotification","err","statusText","fileSystemConfigurationValidator","targetEnvironmentValidator","isDynamic","inModal","crossroads","imageOutput","awsTarget","googleCloudTarger","msAzureTarget","registration","imageName","activeStep","initialStep","activeStepIndex","maxStepIndex","prevSteps","postHeaders","headers","body","axios","IMAGE_BUILDER_API","limit","offset","params","URLSearchParams","toString","search","append","RHSM_API","composeImage","getComposes","getComposeStatus","getPackages","getVersion","getActivationKeys","compose","insert","types","payload","composeUpdatedStatus","composeGetStatus","composesGet"],"sourceRoot":""}