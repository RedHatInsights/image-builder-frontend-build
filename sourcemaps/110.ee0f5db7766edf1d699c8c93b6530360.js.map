{"version":3,"file":"js/110.1674213434335.bb3cb0764cf9baad9aab.js","mappings":"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","sources":["webpack:///./src/Components/CreateImageWizard/formComponents/ActivationKeys.js","webpack:///./src/Components/CreateImageWizard/formComponents/AzureAuthButton.js","webpack:///./src/Components/CreateImageWizard/formComponents/CentOSAcknowledgement.js","webpack:///./src/Components/CreateImageWizard/formComponents/MountPoint.js","webpack:///./src/Components/CreateImageWizard/formComponents/SizeUnit.js","webpack:///./src/Components/CreateImageWizard/formComponents/FileSystemConfiguration.js","webpack:///./src/Utilities/isRhel.js","webpack:///./src/Components/CreateImageWizard/formComponents/ImageOutputReleaseSelect.js","webpack:///./src/repos.js","webpack:///./src/Components/CreateImageWizard/formComponents/Packages.js","webpack:///./src/Components/CreateImageWizard/formComponents/RadioWithPopover.js","webpack:///./src/Components/CreateImageWizard/formComponents/ActivationKeyInformation.js","webpack:///./src/Components/CreateImageWizard/formComponents/RegistrationKeyInformation.js","webpack:///./src/Components/CreateImageWizard/formComponents/Repositories.js","webpack:///./src/Components/CreateImageWizard/steps/imageOutputStepMapper.js","webpack:///./src/Components/CreateImageWizard/steps/stepTemplate.js","webpack:///./src/Components/CreateImageWizard/formComponents/CustomButtons.js","webpack:///./src/Components/CreateImageWizard/steps/googleCloud.js","webpack:///./src/Components/CreateImageWizard/formComponents/ReviewStep.js","webpack:///./src/Components/CreateImageWizard/formComponents/TargetEnvironment.js","webpack:///./src/Components/CreateImageWizard/ImageCreator.js","webpack:///./src/Components/CreateImageWizard/steps/aws.js","webpack:///./src/Components/CreateImageWizard/steps/msAzure.js","webpack:///./src/Components/CreateImageWizard/steps/packages.js","webpack:///./src/Components/CreateImageWizard/steps/packagesContentSources.js","webpack:///./src/Components/CreateImageWizard/steps/registration.js","webpack:///./src/Components/CreateImageWizard/steps/repositories.js","webpack:///./src/Components/CreateImageWizard/steps/repositoriesStepMapper.js","webpack:///./src/Components/CreateImageWizard/steps/review.js","webpack:///./src/Components/CreateImageWizard/steps/imageOutput.js","webpack:///./src/Components/CreateImageWizard/formComponents/FileSystemConfigButtons.js","webpack:///./src/Components/CreateImageWizard/steps/fileSystemConfiguration.js","webpack:///./src/Components/CreateImageWizard/steps/imageName.js","webpack:///./src/Components/CreateImageWizard/validators/fileSystemConfigurationValidator.js","webpack:///./src/Components/CreateImageWizard/validators/targetEnvironmentValidator.js","webpack:///./src/Components/CreateImageWizard/CreateImageWizard.js","webpack:///./src/Components/sharedComponents/DocumentationButton.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport api from '../../../api';\n\nconst ActivationKeys = ({ label, isRequired, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [activationKeys, setActivationKeys] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [activationKeySelected, selectActivationKey] = useState(\n    getState()?.values?.['subscription-activation-key']\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    const data = api.getActivationKeys();\n    data.then((keys) => {\n      setActivationKeys(keys);\n      setIsLoading(false);\n    });\n\n    if (insights.chrome.isProd()) {\n      change('subscription-server-url', 'subscription.rhsm.redhat.com');\n      change('subscription-base-url', 'https://cdn.redhat.com/');\n    } else {\n      change('subscription-server-url', 'subscription.rhsm.stage.redhat.com');\n      change('subscription-base-url', 'https://cdn.stage.redhat.com/');\n    }\n  }, []);\n\n  const setActivationKey = (_, selection) => {\n    selectActivationKey(selection);\n    setIsOpen(false);\n    change(input.name, selection);\n  };\n\n  const handleClear = () => {\n    selectActivationKey();\n    change(input.name, undefined);\n  };\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={label}\n      data-testid=\"subscription-activation-key\"\n    >\n      <Select\n        variant={SelectVariant.typeahead}\n        onToggle={() => setIsOpen(!isOpen)}\n        onSelect={setActivationKey}\n        onClear={handleClear}\n        selections={activationKeySelected}\n        isOpen={isOpen}\n        placeholderText=\"Select activation key\"\n        typeAheadAriaLabel=\"Select activation key\"\n      >\n        {isLoading && (\n          <SelectOption\n            isNoResultsOption={true}\n            data-testid=\"activation-keys-loading\"\n          >\n            <Spinner isSVG size=\"lg\" />\n          </SelectOption>\n        )}\n        {activationKeys.map((key, index) => (\n          <SelectOption key={index} value={key.name} />\n        ))}\n      </Select>\n    </FormGroup>\n  );\n};\n\nActivationKeys.propTypes = {\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n};\n\nActivationKeys.defaultProps = {\n  label: '',\n  isRequired: false,\n};\n\nexport default ActivationKeys;\n","import React from 'react';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { Button, FormGroup } from '@patternfly/react-core';\n\nconst AzureAuthButton = () => {\n  const { getState } = useFormApi();\n\n  const tenantId = getState()?.values?.['azure-tenant-id'];\n  const guidRegex = new RegExp(\n    '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$',\n    'i'\n  );\n\n  return (\n    <FormGroup>\n      <Button\n        component=\"a\"\n        target=\"_blank\"\n        variant=\"secondary\"\n        isDisabled={!guidRegex.test(tenantId)}\n        href={\n          'https://login.microsoftonline.com/' +\n          tenantId +\n          '/oauth2/v2.0/authorize?client_id=b94bb246-b02c-4985-9c22-d44e66f657f4&scope=openid&' +\n          'response_type=code&response_mode=query&redirect_uri=https://portal.azure.com'\n        }\n      >\n        Authorize Image Builder\n      </Button>\n    </FormGroup>\n  );\n};\n\nexport default AzureAuthButton;\n","import React from 'react';\n\nimport { Alert, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst DeveloperProgramButton = () => {\n  return (\n    <Button\n      component=\"a\"\n      target=\"_blank\"\n      variant=\"link\"\n      icon={<ExternalLinkAltIcon />}\n      iconPosition=\"right\"\n      isInline\n      href={'https://developers.redhat.com/about'}\n    >\n      Red Hat Developer Program\n    </Button>\n  );\n};\n\nconst CentOSAcknowledgement = () => {\n  return (\n    <Alert\n      variant=\"info\"\n      isPlain\n      isInline\n      title={\n        <>\n          CentOS Stream builds are intended for the development of future\n          versions of RHEL and are not supported for production workloads or\n          other use cases.\n        </>\n      }\n    >\n      <p>\n        Join the <DeveloperProgramButton /> to learn about paid and no-cost RHEL\n        subscription options.\n      </p>\n    </Alert>\n  );\n};\n\nexport default CentOSAcknowledgement;\n","import React, { useEffect, useState } from 'react';\n\nimport path from 'path';\n\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst MountPoint = ({ ...props }) => {\n  // check '/' last!\n  const validPrefixes = [\n    '/app',\n    '/boot',\n    '/data',\n    '/home',\n    '/opt',\n    '/srv',\n    '/tmp',\n    '/usr',\n    '/usr/local',\n    '/var',\n    '/',\n  ];\n  const [isOpen, setIsOpen] = useState(false);\n  const [prefix, setPrefix] = useState('/');\n  const [suffix, setSuffix] = useState('');\n\n  // split\n  useEffect(() => {\n    for (let p of validPrefixes) {\n      if (props.mountpoint.startsWith(p)) {\n        setPrefix(p);\n        setSuffix(props.mountpoint.substring(p.length));\n        return;\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    let suf = suffix;\n    let mp = prefix;\n    if (suf) {\n      if (mp !== '/' && suf[0] !== '/') {\n        suf = '/' + suf;\n      }\n\n      mp += suf;\n    }\n\n    props.onChange(path.normalize(mp));\n  }, [prefix, suffix]);\n\n  const onToggle = (isOpen) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect = (event, selection) => {\n    setPrefix(selection);\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <Select\n        className=\"pf-u-w-50\"\n        isOpen={isOpen}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        selections={prefix}\n        variant={SelectVariant.single}\n      >\n        {validPrefixes.map((pfx, index) => {\n          return <SelectOption key={index} value={pfx} />;\n        })}\n      </Select>\n      {prefix !== '/' && (\n        <TextInput\n          className=\"pf-u-w-50\"\n          type=\"text\"\n          value={suffix}\n          aria-label=\"Mount point suffix text input\"\n          onChange={(v) => setSuffix(v)}\n        />\n      )}\n    </>\n  );\n};\n\nMountPoint.propTypes = {\n  mountpoint: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default MountPoint;\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { UNIT_GIB, UNIT_KIB, UNIT_MIB } from '../../../constants';\n\nconst SizeUnit = ({ ...props }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [unit, setUnit] = useState(props.unit || UNIT_GIB);\n  const [size, setSize] = useState(props.size || 1);\n\n  useEffect(() => {\n    props.onChange(size, unit);\n  }, [unit, size]);\n\n  const onToggle = (isOpen) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect = (event, selection) => {\n    switch (selection) {\n      case 'KiB':\n        setUnit(UNIT_KIB);\n        break;\n      case 'MiB':\n        setUnit(UNIT_MIB);\n        break;\n      case 'GiB':\n        setUnit(UNIT_GIB);\n        break;\n    }\n\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <TextInput\n        className=\"pf-u-w-50\"\n        type=\"text\"\n        value={size}\n        aria-label=\"Size text input\"\n        onChange={(v) => setSize(isNaN(parseInt(v)) ? 0 : parseInt(v))}\n      />\n      <Select\n        className=\"pf-u-w-50\"\n        isOpen={isOpen}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        selections={\n          unit === UNIT_KIB ? 'KiB' : unit === UNIT_MIB ? 'MiB' : 'GiB'\n        }\n        variant={SelectVariant.single}\n        aria-label=\"Unit select\"\n      >\n        {['KiB', 'MiB', 'GiB'].map((u, index) => {\n          return <SelectOption key={index} value={u} />;\n        })}\n      </Select>\n    </>\n  );\n};\n\nSizeUnit.propTypes = {\n  size: PropTypes.number.isRequired,\n  unit: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SizeUnit;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  Alert,\n  Button,\n  Popover,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  HelpIcon,\n  MinusCircleIcon,\n  PlusCircleIcon,\n} from '@patternfly/react-icons';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport MountPoint from './MountPoint';\nimport SizeUnit from './SizeUnit';\n\nimport { UNIT_GIB } from '../../../constants';\n\nlet initialRow = {\n  id: uuidv4(),\n  mountpoint: '/',\n  fstype: 'xfs',\n  size: 10,\n  unit: UNIT_GIB,\n};\n\nconst FileSystemConfiguration = ({ ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [draggedItemId, setDraggedItemId] = useState(null);\n  const [draggingToItemIndex, setDraggingToItemIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [itemOrder, setItemOrder] = useState([initialRow.id]);\n  const [tempItemOrder, setTempItemOrder] = useState([]);\n  const bodyref = useRef();\n  const [rows, setRows] = useState([initialRow]);\n\n  useEffect(() => {\n    const fsc = getState()?.values?.['file-system-configuration'];\n    if (!fsc) {\n      return;\n    }\n\n    const newRows = [];\n    const newOrder = [];\n    fsc.map((r) => {\n      const id = uuidv4();\n      newRows.push({\n        id,\n        mountpoint: r.mountpoint,\n        fstype: 'xfs',\n        size: r.size,\n        unit: r.unit,\n      });\n      newOrder.push(id);\n    });\n    setRows(newRows);\n    setItemOrder(newOrder);\n  }, []);\n\n  const showErrors = () =>\n    getState()?.values?.['file-system-config-show-errors'];\n\n  useEffect(() => {\n    change(\n      input.name,\n      itemOrder.map((r) => {\n        for (const r2 of rows) {\n          if (r2.id === r) {\n            return {\n              mountpoint: r2.mountpoint,\n              size: r2.size,\n              unit: r2.unit,\n            };\n          }\n        }\n      })\n    );\n  }, [rows, itemOrder]);\n\n  const addRow = () => {\n    const id = uuidv4();\n    setRows(\n      rows.concat([\n        {\n          id,\n          mountpoint: '/home',\n          fstype: 'xfs',\n          size: 1,\n          unit: UNIT_GIB,\n        },\n      ])\n    );\n    setItemOrder(itemOrder.concat([id]));\n  };\n\n  const removeRow = (id) => {\n    let removeIndex = rows.map((e) => e.id).indexOf(id);\n    let newRows = [...rows];\n    newRows.splice(removeIndex, 1);\n\n    let removeOrderIndex = itemOrder.indexOf(id);\n    let newOrder = [...itemOrder];\n    newOrder.splice(removeOrderIndex, 1);\n\n    setRows(newRows);\n    setItemOrder(newOrder);\n  };\n\n  const moveItem = (arr, i1, toIndex) => {\n    const fromIndex = arr.indexOf(i1);\n    if (fromIndex === toIndex) {\n      return arr;\n    }\n\n    const temp = arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, temp[0]);\n    return arr;\n  };\n\n  const move = (itemOrder) => {\n    const ulNode = bodyref.current;\n    const nodes = Array.from(ulNode.children);\n    if (nodes.map((node) => node.id).every((id, i) => id === itemOrder[i])) {\n      return;\n    }\n\n    while (ulNode.firstChild) {\n      ulNode.removeChild(ulNode.lastChild);\n    }\n\n    itemOrder.forEach((id) => {\n      ulNode.appendChild(nodes.find((n) => n.id === id));\n    });\n  };\n\n  const onDragOver = (evt) => {\n    evt.preventDefault();\n\n    const curListItem = evt.target.closest('tr');\n    if (!curListItem || !bodyref.current.contains(curListItem)) {\n      return null;\n    }\n\n    const dragId = curListItem.id;\n    const newDraggingToItemIndex = Array.from(\n      bodyref.current.children\n    ).findIndex((item) => item.id === dragId);\n    if (newDraggingToItemIndex !== draggingToItemIndex) {\n      const tempItemOrder = moveItem(\n        [...itemOrder],\n        draggedItemId,\n        newDraggingToItemIndex\n      );\n      move(tempItemOrder);\n      setDraggingToItemIndex(newDraggingToItemIndex);\n      setTempItemOrder(tempItemOrder);\n    }\n  };\n\n  const isValidDrop = (evt) => {\n    const ulRect = bodyref.current.getBoundingClientRect();\n    return (\n      evt.clientX > ulRect.x &&\n      evt.clientX < ulRect.x + ulRect.width &&\n      evt.clientY > ulRect.y &&\n      evt.clientY < ulRect.y + ulRect.height\n    );\n  };\n\n  const onDragLeave = (evt) => {\n    if (!isValidDrop(evt)) {\n      move(itemOrder);\n      setDraggingToItemIndex(null);\n    }\n  };\n\n  const onDrop = (evt) => {\n    if (isValidDrop(evt)) {\n      setItemOrder(tempItemOrder);\n    }\n  };\n\n  const onDragStart = (evt) => {\n    evt.dataTransfer.effectAllowed = 'move';\n    evt.dataTransfer.setData('text/plain', evt.currentTarget.id);\n    evt.currentTarget.classList.add(styles.modifiers.ghostRow);\n    evt.currentTarget.setAttribute('aria-pressed', 'true');\n    setDraggedItemId(evt.currentTarget.id);\n    setIsDragging(true);\n  };\n\n  const onDragEnd = (evt) => {\n    evt.target.classList.remove(styles.modifiers.ghostRow);\n    evt.target.setAttribute('aria-pressed', 'false');\n    setDraggedItemId(null);\n    setDraggingToItemIndex(null);\n    setIsDragging(false);\n  };\n\n  const setMountpoint = (id, mp) => {\n    let newRows = [...rows];\n    for (let i = 0; i < newRows.length; i++) {\n      if (newRows[i].id === id) {\n        let newRow = { ...newRows[i] };\n        newRow.mountpoint = mp;\n        newRows.splice(i, 1, newRow);\n        break;\n      }\n    }\n\n    setRows(newRows);\n  };\n\n  const setSize = (id, s, u) => {\n    let newRows = [...rows];\n    for (let i = 0; i < newRows.length; i++) {\n      if (newRows[i].id === id) {\n        let newRow = { ...newRows[i] };\n        newRow.size = s;\n        newRow.unit = u;\n        newRows.splice(i, 1, newRow);\n        break;\n      }\n    }\n\n    setRows(newRows);\n  };\n\n  return (\n    <FormSpy>\n      {() => (\n        <>\n          <TextContent>\n            <Text component={TextVariants.h3}>Configure partitions</Text>\n          </TextContent>\n          {rows.length > 1 &&\n            getState()?.errors?.['file-system-configuration']?.duplicates\n              ?.length !== 0 &&\n            showErrors() && (\n              <Alert\n                variant=\"danger\"\n                isInline\n                title=\"Duplicate mount points: All mount points must be unique. Remove the duplicate or choose a new mount point.\"\n                data-testid=\"fsc-warning\"\n              />\n            )}\n          {rows.length >= 1 &&\n            getState()?.errors?.['file-system-configuration']?.root === false &&\n            showErrors() && (\n              <Alert\n                variant=\"danger\"\n                isInline\n                title=\"No root partition configured.\"\n              />\n            )}\n          <TextContent>\n            <Text>\n              Create partitions for your image by defining mount points and\n              minimum sizes. Image builder creates partitions with a logical\n              volume (LVM) device type.\n            </Text>\n            <Text>\n              The order of partitions may change when the image is installed in\n              order to conform to best practices and ensure functionality.\n              <br></br>\n              <Button\n                component=\"a\"\n                target=\"_blank\"\n                variant=\"link\"\n                icon={<ExternalLinkAltIcon />}\n                iconPosition=\"right\"\n                href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/installation_guide/sect-partitioning-naming-schemes-and-mount-points\"\n                className=\"pf-u-pl-0\"\n              >\n                Partition naming schemes and mount points\n              </Button>\n            </Text>\n          </TextContent>\n          <TableComposable\n            aria-label=\"File system table\"\n            className={isDragging && styles.modifiers.dragOver}\n            variant=\"compact\"\n          >\n            <Thead>\n              <Tr>\n                <Th />\n                <Th>Mount point</Th>\n                <Th>Type</Th>\n                <Th>\n                  Minimum size\n                  <Popover\n                    hasAutoWidth\n                    bodyContent={\n                      <TextContent>\n                        <Text>\n                          Image Builder may extend this size based on\n                          requirements, selected packages, and configurations.\n                        </Text>\n                      </TextContent>\n                    }\n                  >\n                    <Button\n                      variant=\"plain\"\n                      aria-label=\"File system configuration info\"\n                      aria-describedby=\"file-system-configuration-info\"\n                      className=\"pf-c-form__group-label-help\"\n                    >\n                      <HelpIcon />\n                    </Button>\n                  </Popover>\n                </Th>\n                <Th />\n              </Tr>\n            </Thead>\n            <Tbody\n              ref={bodyref}\n              onDragOver={onDragOver}\n              onDrop={onDragOver}\n              onDragLeave={onDragLeave}\n              data-testid=\"file-system-configuration-tbody\"\n            >\n              {rows.map((row, rowIndex) => (\n                <Tr\n                  key={rowIndex}\n                  id={row.id}\n                  draggable\n                  onDrop={onDrop}\n                  onDragEnd={onDragEnd}\n                  onDragStart={onDragStart}\n                >\n                  <Td\n                    draggableRow={{\n                      id: `draggable-row-${row.id}`,\n                    }}\n                  />\n                  <Td className=\"pf-m-width-30\">\n                    <MountPoint\n                      key={row.id + '-mountpoint'}\n                      mountpoint={row.mountpoint}\n                      onChange={(mp) => setMountpoint(row.id, mp)}\n                    />\n                    {getState().errors['file-system-configuration']?.duplicates\n                      .length !== 0 &&\n                      getState().errors[\n                        'file-system-configuration'\n                      ]?.duplicates.indexOf(row.mountpoint) !== -1 &&\n                      showErrors() && (\n                        <Alert\n                          variant=\"danger\"\n                          isInline\n                          isPlain\n                          title=\"Duplicate mount point.\"\n                        />\n                      )}\n                  </Td>\n                  <Td className=\"pf-m-width-20\">\n                    {/* always xfs */}\n                    {row.fstype}\n                  </Td>\n                  <Td className=\"pf-m-width-30\">\n                    <SizeUnit\n                      key={row.id + '-sizeunit'}\n                      size={row.size}\n                      unit={row.unit}\n                      onChange={(s, u) => setSize(row.id, s, u)}\n                    />\n                  </Td>\n                  <Td className=\"pf-m-width-10\">\n                    <Button\n                      variant=\"link\"\n                      icon={<MinusCircleIcon />}\n                      onClick={() => removeRow(row.id)}\n                      data-testid=\"remove-mount-point\"\n                    />\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </TableComposable>\n          <TextContent>\n            <Button\n              data-testid=\"file-system-add-partition\"\n              className=\"pf-u-text-align-left\"\n              variant=\"link\"\n              icon={<PlusCircleIcon />}\n              onClick={addRow}\n            >\n              Add partition\n            </Button>\n          </TextContent>\n        </>\n      )}\n    </FormSpy>\n  );\n};\n\nexport default FileSystemConfiguration;\n","import { RHEL_8, RHEL_9 } from '../constants';\n\nfunction isRhel(distro) {\n  switch (distro) {\n    case RHEL_8:\n    case RHEL_9:\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport default isRhel;\n","import React, { useState } from 'react';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { RELEASES } from '../../../constants';\nimport isRhel from '../../../Utilities/isRhel';\n\nconst ImageOutputReleaseSelect = ({ label, isRequired, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [isOpen, setIsOpen] = useState(false);\n  const [showDevelopmentOptions, setShowDevelopmentOptions] = useState(false);\n\n  const setRelease = (_, selection) => {\n    change(input.name, selection);\n    setIsOpen(false);\n  };\n\n  const handleExpand = () => {\n    setShowDevelopmentOptions(true);\n  };\n\n  return (\n    <FormGroup isRequired={isRequired} label={label}>\n      <Select\n        ouiaId=\"release_select\"\n        variant={SelectVariant.single}\n        onToggle={() => setIsOpen(!isOpen)}\n        onSelect={setRelease}\n        selections={RELEASES[getState()?.values?.[input.name]]}\n        isOpen={isOpen}\n        {...(!showDevelopmentOptions && {\n          loadingVariant: {\n            text: 'Show options for further development of RHEL',\n            onClick: handleExpand,\n          },\n        })}\n      >\n        {Object.entries(RELEASES)\n          .filter(([key]) => {\n            // Only show non-RHEL distros if expanded\n            if (showDevelopmentOptions) {\n              return true;\n            }\n\n            return isRhel(key);\n          })\n          .map(([key, release], index) => {\n            return (\n              <SelectOption key={index} value={key}>\n                {release}\n              </SelectOption>\n            );\n          })}\n      </Select>\n    </FormGroup>\n  );\n};\n\nImageOutputReleaseSelect.propTypes = {\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n};\n\nexport default ImageOutputReleaseSelect;\n","import { RHEL_8, RHEL_9 } from './constants';\n\nexport const getDistroRepoUrls = (distro) =>\n  repos[distro].map((repo) => repo.url);\n\nexport const repos = {\n  [RHEL_8]: [\n    {\n      name: 'baseos',\n      distribution_arch: 'x86_64',\n      url: 'https://cdn.redhat.com/content/dist/rhel8/8.7/x86_64/baseos/os',\n    },\n    {\n      distribution_arch: 'x86_64',\n      name: 'appstream',\n      url: 'https://cdn.redhat.com/content/dist/rhel8/8.7/x86_64/appstream/os',\n    },\n    {\n      distribution_arch: 'x86_64',\n      name: 'google-compute-engine',\n      url: 'https://packages.cloud.google.com/yum/repos/google-compute-engine-el8-x86_64-stable',\n    },\n    {\n      distribution_arch: 'x86_64',\n      name: 'rhel-86-google-cloud-sdk',\n      url: 'https://packages.cloud.google.com/yum/repos/cloud-sdk-el8-x86_64',\n    },\n  ],\n  [RHEL_9]: [\n    {\n      name: 'baseos',\n      distribution_arch: 'x86_64',\n      url: 'https://cdn.redhat.com/content/dist/rhel9/9.1/x86_64/baseos/os',\n    },\n    {\n      distribution_arch: 'x86_64',\n      name: 'appstream',\n      url: 'https://cdn.redhat.com/content/dist/rhel9/9.1/x86_64/appstream/os',\n    },\n    {\n      distribution_arch: 'x86_64',\n      name: 'google-compute-engine',\n      url: 'https://packages.cloud.google.com/yum/repos/google-compute-engine-el9-x86_64-stable',\n    },\n    {\n      distribution_arch: 'x86_64',\n      name: 'google-cloud-sdk',\n      url: 'https://packages.cloud.google.com/yum/repos/cloud-sdk-el9-x86_64',\n    },\n  ],\n  'centos-8': [\n    {\n      name: 'baseos',\n      distribution_arch: 'x86_64',\n      url: 'http://mirror.centos.org/centos/8-stream/BaseOS/x86_64/os/',\n    },\n    {\n      name: 'appstream',\n      distribution_arch: 'x86_64',\n      url: 'http://mirror.centos.org/centos/8-stream/AppStream/x86_64/os/',\n    },\n    {\n      name: 'extras',\n      distribution_arch: 'x86_64',\n      url: 'http://mirror.centos.org/centos/8-stream/extras/x86_64/os/',\n    },\n    {\n      name: 'google-compute-engine',\n      distribution_arch: 'x86_64',\n      url: 'https://packages.cloud.google.com/yum/repos/google-compute-engine-el8-x86_64-stable',\n    },\n    {\n      name: 'google-cloud-sdk',\n      distribution_arch: 'x86_64',\n      url: 'https://packages.cloud.google.com/yum/repos/cloud-sdk-el8-x86_64',\n    },\n  ],\n  'centos-9': [\n    {\n      name: 'baseos',\n      distribution_arch: 'x86_64',\n      url: 'http://mirror.centos.org/centos/9-stream/BaseOS/x86_64/os/',\n    },\n    {\n      name: 'appstream',\n      distribution_arch: 'x86_64',\n      url: 'http://mirror.centos.org/centos/9-stream/AppStream/x86_64/os/',\n    },\n    {\n      name: 'extras',\n      distribution_arch: 'x86_64',\n      url: 'http://mirror.centos.org/centos/9-stream/extras/x86_64/os/',\n    },\n    {\n      name: 'google-compute-engine',\n      distribution_arch: 'x86_64',\n      url: 'https://packages.cloud.google.com/yum/repos/google-compute-engine-el9-x86_64-stable',\n    },\n    {\n      name: 'google-cloud-sdk',\n      distribution_arch: 'x86_64',\n      url: 'https://packages.cloud.google.com/yum/repos/cloud-sdk-el9-x86_64',\n    },\n  ],\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  DualListSelector,\n  DualListSelectorControl,\n  DualListSelectorControlsWrapper,\n  DualListSelectorList,\n  DualListSelectorListItem,\n  DualListSelectorPane,\n  SearchInput,\n  TextContent,\n} from '@patternfly/react-core';\nimport {\n  AngleDoubleLeftIcon,\n  AngleDoubleRightIcon,\n  AngleLeftIcon,\n  AngleRightIcon,\n} from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\n\nimport api from '../../../api';\nimport { repos } from '../../../repos';\n\nexport const RedHatPackages = ({ defaultArch }) => {\n  const { getState } = useFormApi();\n\n  const getAllPackages = async (packagesSearchName) => {\n    // if the env is stage beta then use content-sources api\n    // else use image-builder api\n    if (!insights.chrome.isProd() && insights.chrome.isBeta()) {\n      const distribution = getState()?.values?.release;\n      const repoUrls = repos[distribution].map((repo) => repo.url);\n      return await api.getPackagesContentSources(repoUrls, packagesSearchName);\n    } else {\n      const args = [\n        getState()?.values?.release,\n        getState()?.values?.architecture || defaultArch,\n        packagesSearchName,\n      ];\n      let { data, meta } = await api.getPackages(...args);\n      if (data?.length === meta.count) {\n        return data;\n      } else if (data) {\n        ({ data } = await api.getPackages(...args, meta.count));\n        return data;\n      }\n    }\n  };\n\n  return <Packages getAllPackages={getAllPackages} />;\n};\n\nexport const ContentSourcesPackages = () => {\n  const { getState } = useFormApi();\n\n  const getAllPackages = async (packagesSearchName) => {\n    const repos = getState()?.values?.['custom-repositories'];\n    const repoUrls = repos?.map((repo) => repo.baseurl);\n    return await api.getPackagesContentSources(repoUrls, packagesSearchName);\n  };\n\n  return <Packages getAllPackages={getAllPackages} />;\n};\n\nconst Packages = ({ getAllPackages }) => {\n  const { change, getState } = useFormApi();\n  const [packagesSearchName, setPackagesSearchName] = useState(undefined);\n  const [filterChosen, setFilterChosen] = useState('');\n  const [chosenPackages, setChosenPackages] = useState({});\n  const [focus, setFocus] = useState('');\n  const selectedPackages = getState()?.values?.['selected-packages'];\n  const [availablePackages, setAvailablePackages] = useState(undefined);\n  const [selectedAvailablePackages, setSelectedAvailablePackages] = useState(\n    new Set()\n  );\n  const [selectedChosenPackages, setSelectedChosenPackages] = useState(\n    new Set()\n  );\n  const firstInputElement = useRef(null);\n\n  // this effect only triggers on mount\n  useEffect(() => {\n    if (selectedPackages) {\n      const newChosenPackages = {};\n      for (const pkg of selectedPackages) {\n        newChosenPackages[pkg.name] = pkg;\n      }\n      setChosenPackages(newChosenPackages);\n    }\n  }, []);\n\n  useEffect(() => {\n    firstInputElement.current?.focus();\n  }, []);\n\n  const searchResultsComparator = useCallback((searchTerm) => {\n    return (a, b) => {\n      a = a.name.toLowerCase();\n      b = b.name.toLowerCase();\n\n      // check exact match first\n      if (a === searchTerm) {\n        return -1;\n      }\n\n      if (b === searchTerm) {\n        return 1;\n      }\n\n      // check for packages that start with the search term\n      if (a.startsWith(searchTerm) && !b.startsWith(searchTerm)) {\n        return -1;\n      }\n\n      if (b.startsWith(searchTerm) && !a.startsWith(searchTerm)) {\n        return 1;\n      }\n\n      // if both (or neither) start with the search term\n      // sort alphabetically\n      if (a < b) {\n        return -1;\n      }\n\n      if (b < a) {\n        return 1;\n      }\n\n      return 0;\n    };\n  });\n\n  const availablePackagesDisplayList = useMemo(() => {\n    if (availablePackages === undefined) {\n      return [];\n    }\n    const availablePackagesList = Object.values(availablePackages).sort(\n      searchResultsComparator(packagesSearchName)\n    );\n    return availablePackagesList;\n  }, [availablePackages]);\n\n  const chosenPackagesDisplayList = useMemo(() => {\n    const chosenPackagesList = Object.values(chosenPackages)\n      .filter((pkg) => (pkg.name.includes(filterChosen) ? true : false))\n      .sort(searchResultsComparator(filterChosen));\n    return chosenPackagesList;\n  }, [chosenPackages, filterChosen]);\n\n  // call api to list available packages\n  const handleAvailablePackagesSearch = async () => {\n    const packageList = await getAllPackages(packagesSearchName);\n    // If no packages are found, Image Builder returns null, while\n    // Content Sources returns an empty array [].\n    if (packageList) {\n      const newAvailablePackages = {};\n      for (const pkg of packageList) {\n        newAvailablePackages[pkg.name] = pkg;\n      }\n      setAvailablePackages(newAvailablePackages);\n    } else {\n      setAvailablePackages([]);\n    }\n  };\n\n  const keydownHandler = (event) => {\n    if (event.key === 'Enter') {\n      if (focus === 'available') {\n        event.stopPropagation();\n        handleAvailablePackagesSearch();\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', keydownHandler, true);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler, true);\n    };\n  });\n\n  const updateState = (newChosenPackages) => {\n    setSelectedAvailablePackages(new Set());\n    setSelectedChosenPackages(new Set());\n    setChosenPackages(newChosenPackages);\n    change('selected-packages', Object.values(newChosenPackages));\n  };\n\n  const moveSelectedToChosen = () => {\n    const newChosenPackages = { ...chosenPackages };\n    for (const pkgName of selectedAvailablePackages) {\n      newChosenPackages[pkgName] = { ...availablePackages[pkgName] };\n    }\n    updateState(newChosenPackages);\n  };\n\n  const moveAllToChosen = () => {\n    const newChosenPackages = { ...chosenPackages, ...availablePackages };\n    updateState(newChosenPackages);\n  };\n\n  const removeSelectedFromChosen = () => {\n    const newChosenPackages = {};\n    for (const pkgName in chosenPackages) {\n      if (!selectedChosenPackages.has(pkgName)) {\n        newChosenPackages[pkgName] = { ...chosenPackages[pkgName] };\n      }\n    }\n    updateState(newChosenPackages);\n  };\n\n  const removeAllFromChosen = () => {\n    const newChosenPackages = {};\n    updateState(newChosenPackages);\n  };\n\n  const handleSelectAvailable = (event, pkgName) => {\n    const newSelected = new Set(selectedAvailablePackages);\n    newSelected.has(pkgName)\n      ? newSelected.delete(pkgName)\n      : newSelected.add(pkgName);\n    setSelectedAvailablePackages(newSelected);\n  };\n\n  const handleSelectChosen = (event, pkgName) => {\n    const newSelected = new Set(selectedChosenPackages);\n    newSelected.has(pkgName)\n      ? newSelected.delete(pkgName)\n      : newSelected.add(pkgName);\n    setSelectedChosenPackages(newSelected);\n  };\n\n  const handleClearAvailableSearch = () => {\n    setPackagesSearchName('');\n    setAvailablePackages(undefined);\n  };\n\n  const handleClearChosenSearch = () => {\n    setFilterChosen('');\n  };\n\n  return (\n    <DualListSelector>\n      <DualListSelectorPane\n        title=\"Available packages\"\n        searchInput={\n          <SearchInput\n            placeholder=\"Search for a package\"\n            data-testid=\"search-available-pkgs-input\"\n            value={packagesSearchName}\n            ref={firstInputElement}\n            onFocus={() => setFocus('available')}\n            onBlur={() => setFocus('')}\n            onChange={(val) => setPackagesSearchName(val)}\n            submitSearchButtonLabel=\"Search button for available packages\"\n            onSearch={handleAvailablePackagesSearch}\n            resetButtonLabel=\"Clear available packages search\"\n            onClear={handleClearAvailableSearch}\n          />\n        }\n      >\n        <DualListSelectorList data-testid=\"available-pkgs-list\">\n          {availablePackages === undefined ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              Search above to add additional\n              <br />\n              packages to your image\n            </p>\n          ) : availablePackagesDisplayList.length === 0 ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              No packages found\n            </p>\n          ) : (\n            availablePackagesDisplayList.map((pkg) => {\n              return (\n                <DualListSelectorListItem\n                  data-testid={`available-pkgs-${pkg.name}`}\n                  key={pkg.name}\n                  isDisabled={chosenPackages[pkg.name] ? true : false}\n                  isSelected={selectedAvailablePackages.has(pkg.name)}\n                  onOptionSelect={(e) => handleSelectAvailable(e, pkg.name)}\n                >\n                  <TextContent key={`${pkg.name}`}>\n                    <span className=\"pf-c-dual-list-selector__item-text\">\n                      {pkg.name}\n                    </span>\n                    <small>{pkg.summary}</small>\n                  </TextContent>\n                </DualListSelectorListItem>\n              );\n            })\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n      <DualListSelectorControlsWrapper aria-label=\"Selector controls\">\n        <DualListSelectorControl\n          isDisabled={selectedAvailablePackages.size === 0}\n          onClick={() => moveSelectedToChosen()}\n          aria-label=\"Add selected\"\n          tooltipContent=\"Add selected\"\n        >\n          <AngleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={availablePackagesDisplayList.length === 0}\n          onClick={() => moveAllToChosen()}\n          aria-label=\"Add all\"\n          tooltipContent=\"Add all\"\n        >\n          <AngleDoubleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={Object.values(chosenPackages).length === 0}\n          onClick={() => removeAllFromChosen()}\n          aria-label=\"Remove all\"\n          tooltipContent=\"Remove all\"\n        >\n          <AngleDoubleLeftIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          onClick={() => removeSelectedFromChosen()}\n          isDisabled={selectedChosenPackages.size === 0}\n          aria-label=\"Remove selected\"\n          tooltipContent=\"Remove selected\"\n        >\n          <AngleLeftIcon />\n        </DualListSelectorControl>\n      </DualListSelectorControlsWrapper>\n      <DualListSelectorPane\n        title=\"Chosen packages\"\n        searchInput={\n          <SearchInput\n            placeholder=\"Search for a package\"\n            data-testid=\"search-chosen-pkgs-input\"\n            value={filterChosen}\n            onFocus={() => setFocus('chosen')}\n            onBlur={() => setFocus('')}\n            onChange={(val) => setFilterChosen(val)}\n            resetButtonLabel=\"Clear chosen packages search\"\n            onClear={handleClearChosenSearch}\n          />\n        }\n        isChosen\n      >\n        <DualListSelectorList data-testid=\"chosen-pkgs-list\">\n          {Object.values(chosenPackages).length === 0 ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              No packages added\n            </p>\n          ) : chosenPackagesDisplayList.length === 0 ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              No packages found\n            </p>\n          ) : (\n            chosenPackagesDisplayList.map((pkg) => {\n              return (\n                <DualListSelectorListItem\n                  data-testid={`selected-pkgs-${pkg.name}`}\n                  key={pkg.name}\n                  isSelected={selectedChosenPackages.has(pkg.name)}\n                  onOptionSelect={(e) => handleSelectChosen(e, pkg.name)}\n                >\n                  <TextContent key={`${pkg.name}`}>\n                    <span className=\"pf-c-dual-list-selector__item-text\">\n                      {pkg.name}\n                    </span>\n                    <small>{pkg.summary}</small>\n                  </TextContent>\n                </DualListSelectorListItem>\n              );\n            })\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n    </DualListSelector>\n  );\n};\n\nRedHatPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nPackages.propTypes = {\n  getAllPackages: PropTypes.func,\n};\n","import React, { useRef } from 'react';\n\nimport Radio from '@data-driven-forms/pf4-component-mapper/radio';\nimport PropTypes from 'prop-types';\n\nconst RadioWithPopover = ({ Popover, ...props }) => {\n  const ref = useRef();\n  return (\n    <Radio\n      {...props}\n      label={\n        <span ref={ref} className=\"ins-c-image--builder__popover\">\n          {props.label}\n          <Popover />\n        </span>\n      }\n    />\n  );\n};\n\nRadioWithPopover.propTypes = {\n  Popover: PropTypes.elementType.isRequired,\n  label: PropTypes.node,\n};\n\nexport default RadioWithPopover;\n","import React, { useEffect, useState } from 'react';\n\nimport { useFormApi } from '@data-driven-forms/react-form-renderer';\nimport {\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { Button, Popover } from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\n\nimport api from '../../../api';\n\nconst ActivationKeyInformation = () => {\n  const { getState } = useFormApi();\n\n  const activationKey = getState()?.values?.['subscription-activation-key'];\n  const [role, setRole] = useState(undefined);\n  const [serviceLevel, setServiceLevel] = useState(undefined);\n  const [usage, setUsage] = useState(undefined);\n  const [additionalRepositories, setRepositories] = useState(undefined);\n\n  useEffect(() => {\n    const fetchKeyInformation = async () => {\n      const data = await api.getActivationKey(activationKey);\n      setRole(data?.role);\n      setServiceLevel(data?.serviceLevel);\n      setUsage(data?.usage);\n      setRepositories(data?.additionalRepositories);\n    };\n    fetchKeyInformation();\n  }, []);\n\n  return (\n    <>\n      <TextContent>\n        <TextList component={TextListVariants.dl}>\n          <TextListItem component={TextListItemVariants.dt}>Name:</TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {activationKey}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>Role:</TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {role || 'Not defined'}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>SLA:</TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {serviceLevel || 'Not defined'}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>\n            Usage:\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {usage || 'Not defined'}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>\n            Additional repositories:\n            <Popover\n              bodyContent={\n                <TextContent>\n                  <Text>\n                    The core repositories for your operating system version are\n                    always enabled and do not need to be explicitly added to the\n                    activation key.\n                  </Text>\n                </TextContent>\n              }\n            >\n              <Button\n                variant=\"plain\"\n                aria-label=\"About additional repositories\"\n                className=\"pf-u-pl-sm pf-u-pt-0 pf-u-pb-0\"\n                isSmall\n              >\n                <HelpIcon />\n              </Button>\n            </Popover>\n          </TextListItem>\n          <TextListItem\n            component={TextListItemVariants.dd}\n            className=\"pf-u-display-flex pf-u-align-items-flex-end\"\n          >\n            {additionalRepositories?.length > 0 ? (\n              <Popover\n                bodyContent={\n                  <TextContent>\n                    <Text component={TextVariants.h3}>\n                      Additional repositories\n                    </Text>\n                    <TableComposable\n                      aria-label=\"Additional repositories table\"\n                      variant=\"compact\"\n                    >\n                      <Thead>\n                        <Tr>\n                          <Th>Name</Th>\n                        </Tr>\n                      </Thead>\n                      <Tbody data-testid=\"additional-repositories-table\">\n                        {additionalRepositories?.map((repo, index) => (\n                          <Tr key={index}>\n                            <Td>{repo.repositoryLabel}</Td>\n                          </Tr>\n                        ))}\n                      </Tbody>\n                    </TableComposable>\n                  </TextContent>\n                }\n              >\n                <Button\n                  data-testid=\"repositories-popover-button\"\n                  variant=\"link\"\n                  aria-label=\"Show additional repositories\"\n                  className=\"pf-u-pl-0 pf-u-pt-0 pf-u-pb-0\"\n                >\n                  {additionalRepositories?.length} repositories\n                </Button>\n              </Popover>\n            ) : (\n              'None'\n            )}\n          </TextListItem>\n        </TextList>\n      </TextContent>\n    </>\n  );\n};\n\nexport default ActivationKeyInformation;\n","import React from 'react';\n\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport { FormGroup } from '@patternfly/react-core';\nimport { isEmpty } from 'lodash';\nimport PropTypes from 'prop-types';\n\nimport ActivationKeyInformation from './ActivationKeyInformation';\n\nconst RegistrationKeyInformation = ({ label, valueReference }) => {\n  return (\n    <FormSpy>\n      {({ values }) =>\n        isEmpty(values[valueReference]) ? null : (\n          <FormGroup label={label}>\n            <ActivationKeyInformation />\n          </FormGroup>\n        )\n      }\n    </FormSpy>\n  );\n};\n\nRegistrationKeyInformation.propTypes = {\n  label: PropTypes.node,\n  valueReference: PropTypes.node,\n};\n\nexport default RegistrationKeyInformation;\n","import React, { useMemo, useState } from 'react';\n\nimport {\n  useFieldApi,\n  useFormApi,\n} from '@data-driven-forms/react-form-renderer';\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Pagination,\n  SearchInput,\n  Title,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { RepositoryIcon } from '@patternfly/react-icons';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { selectValidRepositories } from '../../../store/repositoriesSlice';\n\nconst BulkSelect = ({\n  selected,\n  count,\n  filteredCount,\n  perPage,\n  handleSelectAll,\n  handleSelectPage,\n  handleDeselectAll,\n}) => {\n  const [dropdownIsOpen, setDropdownIsOpen] = useState(false);\n\n  const numSelected = selected.length;\n  const allSelected = count !== 0 ? numSelected === count : undefined;\n  const anySelected = numSelected > 0;\n  const someChecked = anySelected ? null : false;\n  const isChecked = allSelected ? true : someChecked;\n\n  const items = [\n    <DropdownItem\n      key=\"none\"\n      onClick={handleDeselectAll}\n    >{`Select none (0 items)`}</DropdownItem>,\n    <DropdownItem key=\"page\" onClick={handleSelectPage}>{`Select page (${\n      perPage > filteredCount ? filteredCount : perPage\n    } items)`}</DropdownItem>,\n    <DropdownItem\n      key=\"all\"\n      onClick={handleSelectAll}\n    >{`Select all (${count} items)`}</DropdownItem>,\n  ];\n\n  const handleDropdownSelect = () => {};\n\n  const toggleDropdown = () => setDropdownIsOpen(!dropdownIsOpen);\n\n  return (\n    <Dropdown\n      onSelect={handleDropdownSelect}\n      toggle={\n        <DropdownToggle\n          id=\"stacked-example-toggle\"\n          splitButtonItems={[\n            <DropdownToggleCheckbox\n              id=\"example-checkbox-1\"\n              key=\"split-checkbox\"\n              aria-label=\"Select all\"\n              isChecked={isChecked}\n              onClick={() => {\n                anySelected ? handleDeselectAll() : handleSelectAll();\n              }}\n            />,\n          ]}\n          onToggle={toggleDropdown}\n        >\n          {numSelected !== 0 ? `${numSelected} selected` : null}\n        </DropdownToggle>\n      }\n      isOpen={dropdownIsOpen}\n      dropdownItems={items}\n    />\n  );\n};\n\n// Utility function to convert from Content Sources to Image Builder API schema\nconst convertSchemaToImageBuilder = (repo) => {\n  const imageBuilderRepo = {\n    baseurl: repo.url,\n    rhsm: false,\n  };\n  if (repo.gpg_key) {\n    imageBuilderRepo.gpgkey = repo.gpg_key;\n    imageBuilderRepo.check_gpg = true;\n  }\n\n  return imageBuilderRepo;\n};\n\n// Utility function to convert from Image Builder to Content Sources API schema\nconst convertSchemaToContentSources = (repo) => {\n  const contentSourcesRepo = {\n    url: repo.baseurl,\n    rhsm: false,\n  };\n  if (repo.gpgkey) {\n    contentSourcesRepo.gpg_key = repo.gpgkey;\n  }\n\n  return contentSourcesRepo;\n};\n\nconst Repositories = (props) => {\n  const initializeRepositories = () => {\n    // Repositories obtained from Content Sources API are in Redux store\n    const contentSourcesRepos = useSelector((state) =>\n      selectValidRepositories(state)\n    );\n\n    // Repositories in the form state can be present when 'Recreate image' is used\n    // to open the wizard that are not necessarily in content sources.\n    const formStateReposList =\n      getState()?.values?.['original-payload-repositories'];\n\n    const mergeRepositories = (contentSourcesRepos, formStateReposList) => {\n      const formStateRepos = {};\n\n      for (const repo of formStateReposList) {\n        formStateRepos[repo.baseurl] = convertSchemaToContentSources(repo);\n        formStateRepos[repo.baseurl].name = '';\n      }\n\n      // In case of duplicate repo urls, the repo from Content Sources overwrites the\n      // repo from the form state.\n      const mergedRepos = { ...formStateRepos, ...contentSourcesRepos };\n\n      return mergedRepos;\n    };\n\n    const repositories = formStateReposList\n      ? mergeRepositories(contentSourcesRepos, formStateReposList)\n      : contentSourcesRepos;\n\n    return repositories;\n  };\n\n  const { getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [repositories] = useState(initializeRepositories());\n  const [filterValue, setFilterValue] = useState('');\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [selected, setSelected] = useState(\n    getState()?.values?.['custom-repositories']\n      ? getState().values['custom-repositories'].map((repo) => repo.baseurl)\n      : []\n  );\n\n  const isRepoSelected = (repoURL) => selected.includes(repoURL);\n\n  const handlePerPageSelect = (event, newPerPage, newPage) => {\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const handleSetPage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  // filter displayed selected packages\n  const handleFilterRepositories = (value) => {\n    setPage(1);\n    setFilterValue(value);\n  };\n\n  const filteredRepositoryURLs = useMemo(() => {\n    const filteredRepoURLs = Object.values(repositories)\n      .filter((repo) =>\n        repo.name.toLowerCase().includes(filterValue.toLowerCase())\n      )\n      .map((repo) => repo.url);\n\n    return filteredRepoURLs;\n  }, [filterValue]);\n\n  const handleClearFilter = () => {\n    setFilterValue('');\n  };\n\n  const updateFormState = (selectedRepoURLs) => {\n    // repositories is stored as an object with repoURLs as keys\n    const selectedRepos = [];\n    for (const repoURL of selectedRepoURLs) {\n      selectedRepos.push(repositories[repoURL]);\n    }\n\n    const payloadRepositories = selectedRepos.map((repo) =>\n      convertSchemaToImageBuilder(repo)\n    );\n\n    input.onChange(payloadRepositories);\n  };\n\n  const updateSelected = (selectedRepos) => {\n    setSelected(selectedRepos);\n    updateFormState(selectedRepos);\n  };\n\n  const handleSelect = (repoURL, rowIndex, isSelecting) => {\n    if (isSelecting === true) {\n      updateSelected([...selected, repoURL]);\n    } else if (isSelecting === false) {\n      updateSelected(\n        selected.filter((selectedRepoId) => selectedRepoId !== repoURL)\n      );\n    }\n  };\n\n  const handleSelectAll = () => {\n    updateSelected(Object.keys(repositories));\n  };\n\n  const computeStart = () => perPage * (page - 1);\n  const computeEnd = () => perPage * page;\n\n  const handleSelectPage = () => {\n    const pageRepos = filteredRepositoryURLs.slice(\n      computeStart(),\n      computeEnd()\n    );\n\n    // Filter to avoid adding duplicates\n    const newSelected = [\n      ...pageRepos.filter((repoId) => !selected.includes(repoId)),\n    ];\n\n    updateSelected([...selected, ...newSelected]);\n  };\n\n  const handleDeselectAll = () => {\n    updateSelected([]);\n  };\n\n  return (\n    <>\n      {Object.values(repositories).length === 0 ? (\n        <EmptyState variant={EmptyStateVariant.large} data-testid=\"empty-state\">\n          <EmptyStateIcon icon={RepositoryIcon} />\n          <Title headingLevel=\"h4\" size=\"lg\">\n            No Custom Repositories\n          </Title>\n          <EmptyStateBody>\n            Custom repositories managed via the Red Hat Insights Repositories\n            app will be available here to select and use to search for\n            additional packages.\n          </EmptyStateBody>\n          <Button\n            variant=\"primary\"\n            component=\"a\"\n            href={\n              insights.chrome.isBeta()\n                ? '/beta/settings/content'\n                : '/settings/content'\n            }\n          >\n            Repositories\n          </Button>\n        </EmptyState>\n      ) : (\n        <>\n          <Toolbar>\n            <ToolbarContent>\n              <ToolbarItem variant=\"bulk-select\">\n                <BulkSelect\n                  selected={selected}\n                  count={Object.values(repositories).length}\n                  filteredCount={filteredRepositoryURLs.length}\n                  perPage={perPage}\n                  handleSelectAll={handleSelectAll}\n                  handleSelectPage={handleSelectPage}\n                  handleDeselectAll={handleDeselectAll}\n                />\n              </ToolbarItem>\n              <ToolbarItem variant=\"search-filter\">\n                <SearchInput\n                  aria-label=\"Search repositories\"\n                  onChange={handleFilterRepositories}\n                  value={filterValue}\n                  onClear={handleClearFilter}\n                />\n              </ToolbarItem>\n              <ToolbarItem variant=\"pagination\">\n                <Pagination\n                  itemCount={filteredRepositoryURLs.length}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={handleSetPage}\n                  widgetId=\"compact-example\"\n                  onPerPageSelect={handlePerPageSelect}\n                  isCompact\n                />\n              </ToolbarItem>\n            </ToolbarContent>\n          </Toolbar>\n          <TableComposable variant=\"compact\" data-testid=\"repositories-table\">\n            <Thead>\n              <Tr>\n                <Th />\n                <Th width={50}>Name</Th>\n                <Th>Architecture</Th>\n                <Th>Versions</Th>\n                <Th>Packages</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {filteredRepositoryURLs\n                .slice()\n                .sort((a, b) => {\n                  if (repositories[a].name < repositories[b].name) {\n                    return -1;\n                  } else if (repositories[b].name < repositories[a].name) {\n                    return 1;\n                  } else {\n                    return 0;\n                  }\n                })\n                .slice(computeStart(), computeEnd())\n                .map((repoURL, rowIndex) => {\n                  const repo = repositories[repoURL];\n                  return (\n                    <Tr key={repo.url}>\n                      <Td\n                        select={{\n                          isSelected: isRepoSelected(repo.url),\n                          rowIndex: rowIndex,\n                          onSelect: (event, isSelecting) =>\n                            handleSelect(repo.url, rowIndex, isSelecting),\n                        }}\n                      />\n                      <Td dataLabel={'Name'}>\n                        {repo.name}\n                        <br />\n                        <Button\n                          component=\"a\"\n                          target=\"_blank\"\n                          variant=\"link\"\n                          icon={<ExternalLinkAltIcon />}\n                          iconPosition=\"right\"\n                          isInline\n                          href={repo.url}\n                        >\n                          {repo.url}\n                        </Button>\n                      </Td>\n                      <Td dataLabel={'Architecture'}>\n                        {repo.distribution_arch}\n                      </Td>\n                      <Td dataLabel={'Version'}>\n                        {repo.distribution_versions}\n                      </Td>\n                      <Td dataLabel={'Packages'}>{repo.package_count}</Td>\n                    </Tr>\n                  );\n                })}\n            </Tbody>\n          </TableComposable>\n        </>\n      )}\n    </>\n  );\n};\n\nBulkSelect.propTypes = {\n  selected: PropTypes.array,\n  count: PropTypes.number,\n  filteredCount: PropTypes.number,\n  perPage: PropTypes.number,\n  handleSelectAll: PropTypes.func,\n  handleSelectPage: PropTypes.func,\n  handleDeselectAll: PropTypes.func,\n};\n\nexport default Repositories;\n","import isRhel from '../../../Utilities/isRhel.js';\n\nexport default (\n  { 'target-environment': targetEnv, release } = {},\n  { skipAws, skipGoogle, skipAzure } = {}\n) => {\n  if (!skipAws && targetEnv?.aws) {\n    return 'aws-target-env';\n  }\n\n  if (!skipGoogle && targetEnv?.gcp) {\n    return 'google-cloud-target-env';\n  }\n\n  if (!skipAzure && targetEnv?.azure) {\n    return 'ms-azure-target-env';\n  }\n\n  return isRhel(release) ? 'registration' : 'File system configuration';\n};\n","import React from 'react';\n\nimport { Title } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst StepTemplate = ({\n  id,\n  formFields,\n  formRef,\n  title,\n  customTitle,\n  showTitle,\n  showTitles,\n}) => (\n  <div id={id} ref={formRef} className=\"pf-c-form\">\n    {((showTitles && showTitle !== false) || showTitle) &&\n      (customTitle ? (\n        customTitle\n      ) : (\n        <Title headingLevel=\"h1\" size=\"xl\">\n          {title}\n        </Title>\n      ))}\n    {formFields}\n  </div>\n);\n\nStepTemplate.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.node,\n  customTitle: PropTypes.node,\n  formFields: PropTypes.array.isRequired,\n  formOptions: PropTypes.shape({\n    renderForm: PropTypes.func.isRequired,\n  }).isRequired,\n  showTitles: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  formRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n};\n\nexport default StepTemplate;\n","import React, { useContext, useState } from 'react';\n\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport { Button } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst CustomButtons = ({\n  buttonLabels: { cancel, next, submit, back },\n  handleNext,\n  handlePrev,\n  nextStep,\n}) => {\n  const [isSaving, setIsSaving] = useState(false);\n  const { currentStep, formOptions } = useContext(WizardContext);\n\n  const onNextOrSubmit = () => {\n    if (currentStep.id === 'wizard-review') {\n      formOptions.onSubmit({\n        values: formOptions.getState().values,\n        setIsSaving,\n      });\n    } else {\n      if (typeof nextStep === 'function') {\n        handleNext(nextStep({ values: formOptions.getState().values }));\n      } else {\n        handleNext(nextStep);\n      }\n    }\n  };\n\n  return (\n    <FormSpy>\n      {() => (\n        <React.Fragment>\n          <Button\n            id={`${currentStep.id}-next-button`}\n            variant=\"primary\"\n            type=\"button\"\n            isDisabled={\n              !formOptions.valid ||\n              formOptions.getState().validating ||\n              isSaving\n            }\n            isLoading={currentStep.id === 'wizard-review' ? isSaving : null}\n            onClick={onNextOrSubmit}\n          >\n            {currentStep.id === 'wizard-review'\n              ? isSaving\n                ? 'Creating image'\n                : submit\n              : next}\n          </Button>\n          <Button\n            id={`${currentStep.id}-previous-button`}\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={handlePrev}\n            isDisabled={isSaving}\n          >\n            {back}\n          </Button>\n          <div className=\"pf-c-wizard__footer-cancel\">\n            <Button\n              id={`${currentStep.id}-cancel-button`}\n              type=\"button\"\n              variant=\"link\"\n              onClick={formOptions.onCancel}\n              isDisabled={isSaving}\n            >\n              {cancel}\n            </Button>\n          </div>\n        </React.Fragment>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  buttonLabels: PropTypes.shape({\n    cancel: PropTypes.node,\n    submit: PropTypes.node,\n    back: PropTypes.node,\n    next: PropTypes.node,\n  }),\n  handleNext: PropTypes.func,\n  handlePrev: PropTypes.func,\n  nextStep: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  isSaving: PropTypes.bool,\n};\n\nexport default CustomButtons;\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  Button,\n  Popover,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  Title,\n} from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\n\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\n\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport const googleAccType = {\n  googleAccount: 'Google account',\n  serviceAccount: 'Service account',\n  googleGroup: 'Google group',\n  domain: 'Domain',\n};\n\nconst PopoverInfo = ({ appendTo }) => {\n  return (\n    <Popover\n      appendTo={appendTo}\n      hasAutoWidth\n      maxWidth=\"35rem\"\n      headerContent={'Valid account types'}\n      flipBehavior={['right', 'bottom', 'top', 'left']}\n      bodyContent={\n        <TextContent>\n          <Text>\n            The following account types can have an image shared with them:\n          </Text>\n          <TextList className=\"pf-u-ml-0\">\n            <TextListItem>\n              <strong>Google account:</strong> A Google account represents a\n              developer, an administrator, or any other person who interacts\n              with Google Cloud. For example: <em>`alice@gmail.com`</em>.\n            </TextListItem>\n            <TextListItem>\n              <strong>Service account:</strong> A service account is an account\n              for an application instead of an individual end user. For example:{' '}\n              <em>`myapp@appspot.gserviceaccount.com`</em>.\n            </TextListItem>\n            <TextListItem>\n              <strong>Google group:</strong> A Google group is a named\n              collection of Google accounts and service accounts. For example:{' '}\n              <em>`admins@example.com`</em>.\n            </TextListItem>\n            <TextListItem>\n              <strong>Google Workspace domain or Cloud Identity domain:</strong>{' '}\n              A Google workspace or cloud identity domain represents a virtual\n              group of all the Google accounts in an organization. These domains\n              represent your organization&apos;s internet domain name. For\n              example: <em>`mycompany.com`</em>.\n            </TextListItem>\n          </TextList>\n        </TextContent>\n      }\n    >\n      <Button\n        variant=\"plain\"\n        aria-label=\"Account info\"\n        aria-describedby=\"google-account-type\"\n        className=\"pf-c-form__group-label-help\"\n      >\n        <HelpIcon />\n      </Button>\n    </Popover>\n  );\n};\n\nPopoverInfo.propTypes = {\n  appendTo: PropTypes.any,\n};\n\nexport default {\n  StepTemplate,\n  id: 'wizard-target-gcp',\n  title: 'Google Cloud Platform',\n  customTitle: (\n    <Title headingLevel=\"h1\" size=\"xl\">\n      Target environment - Google Cloud Platform\n    </Title>\n  ),\n  name: 'google-cloud-target-env',\n  substepOf: 'Target environment',\n  nextStep: ({ values }) =>\n    nextStepMapper(values, { skipGoogle: true, skipAws: true }),\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: (\n        <Text>\n          Your image will be uploaded to Google Cloud Platform and shared with\n          the account you provide below. <br />\n          The shared image will expire within 14 days. To keep the image longer,\n          copy it to your Google Cloud Platform account.\n        </Text>\n      ),\n    },\n    {\n      component: 'radio-popover',\n      label: 'Type',\n      isRequired: true,\n      Popover: PopoverInfo,\n      name: 'google-account-type',\n      initialValue: 'googleAccount',\n      options: Object.entries(googleAccType).map(([value, label]) => ({\n        label:\n          value === 'domain'\n            ? 'Google Workspace domain or Cloud Identity domain'\n            : label,\n        value,\n        autoFocus: value === 'googleAccount' ? true : false,\n      })),\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'google-email',\n      'data-testid': 'input-google-email',\n      type: 'text',\n      label: 'Email address',\n      condition: {\n        or: [\n          { when: 'google-account-type', is: 'googleAccount' },\n          { when: 'google-account-type', is: 'serviceAccount' },\n          { when: 'google-account-type', is: 'googleGroup' },\n          { when: 'google-account-type', is: null },\n        ],\n      },\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: '^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,}$',\n          message: 'Please enter a valid email address',\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'google-domain',\n      type: 'text',\n      label: 'Domain',\n      condition: {\n        when: 'google-account-type',\n        is: 'domain',\n      },\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n  ],\n};\n","import React, { useEffect, useState } from 'react';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  Button,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  List,\n  ListItem,\n  Popover,\n  Spinner,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\n\nimport ActivationKeyInformation from './ActivationKeyInformation';\n\nimport { RELEASES, UNIT_GIB, UNIT_MIB } from '../../../constants';\nimport isRhel from '../../../Utilities/isRhel';\nimport { googleAccType } from '../steps/googleCloud';\n\nconst FSReviewTable = ({ ...props }) => {\n  return (\n    <TableComposable\n      aria-label=\"File system configuration table\"\n      variant=\"compact\"\n    >\n      <Thead>\n        <Tr>\n          <Th>Mount point</Th>\n          <Th>File system type</Th>\n          <Th>Minimum size</Th>\n        </Tr>\n      </Thead>\n      <Tbody data-testid=\"file-system-configuration-tbody-review\">\n        {props.fsc.map((r, ri) => (\n          <Tr key={ri}>\n            <Td className=\"pf-m-width-30\">{r.mountpoint}</Td>\n            <Td className=\"pf-m-width-30\">xfs</Td>\n            <Td className=\"pf-m-width-30\">\n              {r.size}{' '}\n              {r.unit === UNIT_GIB\n                ? 'GiB'\n                : r.unit === UNIT_MIB\n                ? 'MiB'\n                : 'KiB'}\n            </Td>\n          </Tr>\n        ))}\n      </Tbody>\n    </TableComposable>\n  );\n};\n\nFSReviewTable.propTypes = {\n  fsc: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst ReviewStep = () => {\n  const [activeTabKey, setActiveTabKey] = useState(0);\n  const [minSize, setMinSize] = useState();\n  const { change, getState } = useFormApi();\n\n  useEffect(() => {\n    const registerSystem = getState()?.values?.['register-system'];\n    if (\n      registerSystem === 'register-now' ||\n      registerSystem === 'register-now-insights'\n    ) {\n      (async () => {\n        const userData = await insights?.chrome?.auth?.getUser();\n        const id = userData?.identity?.internal?.org_id;\n        change('subscription-organization-id', id);\n      })();\n    }\n\n    if (\n      getState()?.values?.['file-system-config-radio'] === 'manual' &&\n      getState()?.values?.['file-system-configuration']\n    ) {\n      let size = 0;\n      for (const fsc of getState().values['file-system-configuration']) {\n        size += fsc.size * fsc.unit;\n      }\n\n      size = (size / UNIT_GIB).toFixed(1);\n      if (size < 1) {\n        setMinSize(`Less than 1 GiB`);\n      } else {\n        setMinSize(`${size} GiB`);\n      }\n    }\n  });\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  return (\n    <>\n      <Text>\n        Review the information and click &quot;Create image&quot; to create the\n        image using the following criteria.\n      </Text>\n      <DescriptionList isCompact>\n        <DescriptionListGroup>\n          {getState()?.values?.['image-name'] && (\n            <>\n              <DescriptionListTerm>Image name</DescriptionListTerm>\n              <DescriptionListDescription>\n                {getState()?.values?.['image-name']}\n              </DescriptionListDescription>\n            </>\n          )}\n          <DescriptionListTerm>Release</DescriptionListTerm>\n          <DescriptionListDescription>\n            {RELEASES[getState()?.values?.release]}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <Tabs\n        isFilled\n        activeKey={activeTabKey}\n        onSelect={handleTabClick}\n        className=\"pf-u-w-75\"\n      >\n        <Tab\n          eventKey={0}\n          title={<TabTitleText>Target environment</TabTitleText>}\n          data-testid=\"tab-target\"\n          autoFocus\n        >\n          <List isPlain iconSize=\"large\">\n            {getState()?.values?.['target-environment']?.aws && (\n              <ListItem\n                icon={\n                  <img\n                    className=\"provider-icon\"\n                    src=\"/apps/frontend-assets/partners-icons/aws.svg\"\n                  />\n                }\n              >\n                <TextContent>\n                  <Text component={TextVariants.h3}>Amazon Web Services</Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem\n                      component={TextListItemVariants.dt}\n                      className=\"pf-u-min-width\"\n                    >\n                      Account ID\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['aws-account-id']}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Default Region\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      us-east-1\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.gcp && (\n              <ListItem\n                className=\"pf-c-list__item pf-u-mt-md\"\n                icon={\n                  <img\n                    className=\"provider-icon\"\n                    src=\"/apps/frontend-assets/partners-icons/google-cloud-short.svg\"\n                  />\n                }\n              >\n                <TextContent>\n                  <Text component={TextVariants.h3}>Google Cloud Platform</Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      {\n                        googleAccType?.[\n                          getState()?.values?.['google-account-type']\n                        ]\n                      }\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['google-email'] ||\n                        getState()?.values?.['google-domain']}\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.azure && (\n              <ListItem\n                className=\"pf-c-list__item pf-u-mt-md\"\n                icon={\n                  <img\n                    className=\"provider-icon\"\n                    src=\"/apps/frontend-assets/partners-icons/microsoft-azure-short.svg\"\n                  />\n                }\n              >\n                <TextContent>\n                  <Text component={TextVariants.h3}>Microsoft Azure</Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Subscription ID\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['azure-subscription-id']}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Tenant ID\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['azure-tenant-id']}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Resource group\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['azure-resource-group']}\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.vsphere && (\n              <ListItem>\n                <TextContent>\n                  <Text component={TextVariants.h3}>VMWare</Text>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.['guest-image'] && (\n              <ListItem>\n                <TextContent>\n                  <Text component={TextVariants.h3}>\n                    Virtualization - Guest image\n                  </Text>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.[\n              'image-installer'\n            ] && (\n              <ListItem>\n                <TextContent>\n                  <Text component={TextVariants.h3}>\n                    Bare metal - Installer\n                  </Text>\n                </TextContent>\n              </ListItem>\n            )}\n          </List>\n        </Tab>\n        {isRhel(getState()?.values?.release) && (\n          <Tab\n            eventKey={1}\n            title={<TabTitleText>Registration</TabTitleText>}\n            data-testid=\"tab-registration\"\n          >\n            {getState()?.values?.['register-system'] === 'register-later' && (\n              <TextContent>\n                <TextList component={TextListVariants.dl}>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Registration type\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    Register the system later\n                  </TextListItem>\n                </TextList>\n              </TextContent>\n            )}\n            {(getState()?.values?.['register-system'] === 'register-now' ||\n              getState()?.values?.['register-system'] ===\n                'register-now-insights') && (\n              <TextContent>\n                <TextList component={TextListVariants.dl}>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Registration type\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {getState()?.values?.['register-system'] ===\n                      'register-now-insights' &&\n                      'Register with Subscriptions and Red Hat Insights'}\n                    {getState()?.values?.['register-system'] ===\n                      'register-now' && 'Register with Subscriptions'}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Activation key\n                    <Popover\n                      bodyContent={\n                        <TextContent>\n                          <Text>\n                            Activation keys enable you to register a system with\n                            appropriate subscriptions, system purpose, and\n                            repositories attached.\n                            <br />\n                            <br />\n                            If using an activation key with command line\n                            registration, you must provide your\n                            organization&apos;s ID. Your organization&apos;s ID\n                            is{' '}\n                            {getState()?.values?.[\n                              'subscription-organization-id'\n                            ] !== undefined ? (\n                              getState()?.values?.[\n                                'subscription-organization-id'\n                              ]\n                            ) : (\n                              <Spinner size=\"md\" />\n                            )}\n                          </Text>\n                        </TextContent>\n                      }\n                    >\n                      <Button\n                        variant=\"plain\"\n                        aria-label=\"About activation key\"\n                        className=\"pf-u-pl-sm pf-u-pt-0 pf-u-pb-0\"\n                        isSmall\n                      >\n                        <HelpIcon />\n                      </Button>\n                    </Popover>\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <ActivationKeyInformation />\n                  </TextListItem>\n                </TextList>\n              </TextContent>\n            )}\n          </Tab>\n        )}\n        <Tab\n          eventKey={2}\n          title={<TabTitleText>System configuration</TabTitleText>}\n          data-testid=\"tab-system\"\n        >\n          <TextContent>\n            <Text component={TextVariants.h3}>File system configuration</Text>\n            <TextList component={TextListVariants.dl}>\n              <TextListItem component={TextListItemVariants.dt}>\n                Partitioning\n              </TextListItem>\n              <TextListItem\n                component={TextListItemVariants.dd}\n                data-testid=\"partitioning-auto-manual\"\n              >\n                {getState()?.values?.['file-system-config-radio'] === 'manual'\n                  ? 'Manual'\n                  : 'Automatic'}\n                {getState()?.values?.['file-system-config-radio'] ===\n                  'manual' && (\n                  <>\n                    {' '}\n                    <Popover\n                      position=\"bottom\"\n                      headerContent=\"Partitions\"\n                      hasAutoWidth\n                      minWidth=\"30rem\"\n                      bodyContent={\n                        <FSReviewTable\n                          fsc={getState().values['file-system-configuration']}\n                        />\n                      }\n                    >\n                      <Button\n                        data-testid=\"file-system-configuration-popover\"\n                        variant=\"link\"\n                        aria-label=\"File system configuration info\"\n                        aria-describedby=\"file-system-configuration-info\"\n                        className=\"pf-u-pt-0 pf-u-pb-0\"\n                      >\n                        View partitions\n                      </Button>\n                    </Popover>\n                  </>\n                )}\n              </TextListItem>\n              {getState()?.values?.['file-system-config-radio'] ===\n                'manual' && (\n                <>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Image size (minimum)\n                    <Popover\n                      hasAutoWidth\n                      bodyContent={\n                        <TextContent>\n                          <Text>\n                            Image Builder may extend this size based on\n                            requirements, selected packages, and configurations.\n                          </Text>\n                        </TextContent>\n                      }\n                    >\n                      <Button\n                        variant=\"plain\"\n                        aria-label=\"File system configuration info\"\n                        aria-describedby=\"file-system-configuration-info\"\n                        className=\"pf-c-form__group-label-help\"\n                      >\n                        <HelpIcon />\n                      </Button>\n                    </Popover>\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {minSize}\n                  </TextListItem>\n                </>\n              )}\n            </TextList>\n            <Text component={TextVariants.h3}>Additional packages</Text>\n            <TextList component={TextListVariants.dl}>\n              <TextListItem component={TextListItemVariants.dt}>\n                Chosen\n              </TextListItem>\n              <TextListItem\n                component={TextListItemVariants.dd}\n                data-testid=\"chosen-packages-count\"\n              >\n                {getState()?.values?.['selected-packages']?.length || 0}\n              </TextListItem>\n            </TextList>\n          </TextContent>\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useEffect, useState } from 'react';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  Checkbox,\n  FormGroup,\n  Text,\n  TextVariants,\n  Tile,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst TargetEnvironment = ({ label, isRequired, ...props }) => {\n  const { getState, change } = useFormApi();\n  const { input } = useFieldApi({ label, isRequired, ...props });\n  const [environment, setEnvironment] = useState({\n    aws: false,\n    azure: false,\n    gcp: false,\n    vsphere: false,\n    'guest-image': false,\n    'image-installer': false,\n  });\n\n  useEffect(() => {\n    if (getState()?.values?.[input.name]) {\n      setEnvironment(getState().values[input.name]);\n    }\n  }, []);\n\n  const handleSetEnvironment = (env) =>\n    setEnvironment((prevEnv) => {\n      const newEnv = {\n        ...prevEnv,\n        [env]: !prevEnv[env],\n      };\n      change(input.name, newEnv);\n      return newEnv;\n    });\n\n  const handleKeyDown = (e, env) => {\n    if (e.key === ' ') {\n      handleSetEnvironment(env);\n    }\n  };\n\n  return (\n    <>\n      <FormGroup\n        isRequired={isRequired}\n        label={label}\n        data-testid=\"target-select\"\n      >\n        <FormGroup\n          label={<Text component={TextVariants.small}>Public cloud</Text>}\n          data-testid=\"target-public\"\n        >\n          <div className=\"tiles\">\n            <Tile\n              className=\"tile pf-u-mr-sm\"\n              data-testid=\"upload-aws\"\n              title=\"Amazon Web Services\"\n              icon={\n                <img\n                  className=\"provider-icon\"\n                  src={'/apps/frontend-assets/partners-icons/aws.svg'}\n                />\n              }\n              onClick={() => handleSetEnvironment('aws')}\n              onKeyDown={(e) => handleKeyDown(e, 'aws')}\n              isSelected={environment.aws}\n              isStacked\n              isDisplayLarge\n            />\n            <Tile\n              className=\"tile pf-u-mr-sm\"\n              data-testid=\"upload-google\"\n              title=\"Google Cloud Platform\"\n              icon={\n                <img\n                  className=\"provider-icon\"\n                  src={\n                    '/apps/frontend-assets/partners-icons/google-cloud-short.svg'\n                  }\n                />\n              }\n              onClick={() => handleSetEnvironment('gcp')}\n              isSelected={environment.gcp}\n              onKeyDown={(e) => handleKeyDown(e, 'gcp')}\n              isStacked\n              isDisplayLarge\n            />\n            <Tile\n              className=\"tile pf-u-mr-sm\"\n              data-testid=\"upload-azure\"\n              title=\"Microsoft Azure\"\n              icon={\n                <img\n                  className=\"provider-icon\"\n                  src={\n                    '/apps/frontend-assets/partners-icons/microsoft-azure-short.svg'\n                  }\n                />\n              }\n              onClick={() => handleSetEnvironment('azure')}\n              onKeyDown={(e) => handleKeyDown(e, 'azure')}\n              isSelected={environment.azure}\n              isStacked\n              isDisplayLarge\n            />\n          </div>\n        </FormGroup>\n        <FormGroup\n          label={<Text component={TextVariants.small}>Private cloud</Text>}\n          data-testid=\"target-private\"\n        >\n          <Checkbox\n            label=\"VMWare (.vmdk)\"\n            isChecked={environment.vsphere}\n            onChange={() => handleSetEnvironment('vsphere')}\n            aria-label=\"VMWare checkbox\"\n            id=\"checkbox-vmware\"\n            name=\"VMWare\"\n            data-testid=\"checkbox-vmware\"\n          />\n        </FormGroup>\n        <FormGroup\n          label={<Text component={TextVariants.small}>Other</Text>}\n          data-testid=\"target-other\"\n        >\n          <Checkbox\n            label=\"Virtualization - Guest image (.qcow2)\"\n            isChecked={environment['guest-image']}\n            onChange={() => handleSetEnvironment('guest-image')}\n            aria-label=\"Virtualization guest image checkbox\"\n            id=\"checkbox-guest-image\"\n            name=\"Virtualization guest image\"\n            data-testid=\"checkbox-guest-image\"\n          />\n          <Checkbox\n            label=\"Bare metal - Installer (.iso)\"\n            isChecked={environment['image-installer']}\n            onChange={() => handleSetEnvironment('image-installer')}\n            aria-label=\"Bare metal installer checkbox\"\n            id=\"checkbox-image-installer\"\n            name=\"Bare metal installer\"\n            data-testid=\"checkbox-image-installer\"\n          />\n        </FormGroup>\n      </FormGroup>\n    </>\n  );\n};\n\nTargetEnvironment.propTypes = {\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n};\n\nTargetEnvironment.defaultProps = {\n  label: '',\n  isRequired: false,\n};\n\nexport default TargetEnvironment;\n","import React from 'react';\n\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport Select from '@data-driven-forms/pf4-component-mapper/select';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport ActivationKeys from './formComponents/ActivationKeys';\nimport AzureAuthButton from './formComponents/AzureAuthButton';\nimport CentOSAcknowledgement from './formComponents/CentOSAcknowledgement';\nimport FileSystemConfiguration from './formComponents/FileSystemConfiguration';\nimport ImageOutputReleaseSelect from './formComponents/ImageOutputReleaseSelect';\nimport {\n  ContentSourcesPackages,\n  RedHatPackages,\n} from './formComponents/Packages';\nimport RadioWithPopover from './formComponents/RadioWithPopover';\nimport RegistrationKeyInformation from './formComponents/RegistrationKeyInformation';\nimport Repositories from './formComponents/Repositories';\nimport Review from './formComponents/ReviewStep';\nimport TargetEnvironment from './formComponents/TargetEnvironment';\n\nconst ImageCreator = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  customValidatorMapper,\n  defaultArch,\n  className,\n  ...props\n}) => {\n  return schema ? (\n    <FormRenderer\n      initialValues={props.initialValues}\n      schema={schema}\n      className={`image-builder${className ? ` ${className}` : ''}`}\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      validatorMapper={{ ...customValidatorMapper }}\n      componentMapper={{\n        ...componentMapper,\n        review: Review,\n        output: TargetEnvironment,\n        select: Select,\n        'package-selector': {\n          component: RedHatPackages,\n          defaultArch,\n        },\n        'package-selector-content-sources': {\n          component: ContentSourcesPackages,\n        },\n        'radio-popover': RadioWithPopover,\n        'azure-auth-button': AzureAuthButton,\n        'activation-keys': ActivationKeys,\n        'activation-key-information': RegistrationKeyInformation,\n        'file-system-configuration': FileSystemConfiguration,\n        'image-output-release-select': ImageOutputReleaseSelect,\n        'centos-acknowledgement': CentOSAcknowledgement,\n        'repositories-table': Repositories,\n        ...customComponentMapper,\n      }}\n      onCancel={onClose}\n      {...props}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nImageCreator.propTypes = {\n  schema: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  customValidatorMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.func,\n  }),\n  defaultArch: PropTypes.string,\n  className: PropTypes.string,\n  initialValues: PropTypes.object,\n};\n\nexport default ImageCreator;\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { HelperText, HelperTextItem, Title } from '@patternfly/react-core';\n\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\n\nimport { DEFAULT_AWS_REGION } from '../../../constants';\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-target-aws',\n  title: 'Amazon Web Services',\n  customTitle: (\n    <Title headingLevel=\"h1\" size=\"xl\">\n      Target environment - Amazon Web Services\n    </Title>\n  ),\n  name: 'aws-target-env',\n  substepOf: 'Target environment',\n  nextStep: ({ values }) => nextStepMapper(values, { skipAws: true }),\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text-component',\n      label: (\n        <p>\n          Your image will be uploaded to AWS and shared with the account you\n          provide below.\n        </p>\n      ),\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text-component',\n      label: (\n        <p>\n          <b>The shared image will expire within 14 days.</b> To permanently\n          access the image, copy the image, which will be shared to your account\n          by Red Hat, to your own AWS account.\n        </p>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'aws-account-id',\n      className: 'pf-u-w-25',\n      'data-testid': 'aws-account-id',\n      type: 'text',\n      label: 'AWS account ID',\n      isRequired: true,\n      autoFocus: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.EXACT_LENGTH,\n          threshold: 12,\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'aws-default-region',\n      className: 'pf-u-w-25',\n      'data-testid': 'aws-default-region',\n      type: 'text',\n      label: 'Default Region',\n      value: DEFAULT_AWS_REGION,\n      isReadOnly: true,\n      isRequired: true,\n      helperText: (\n        <HelperText>\n          <HelperTextItem\n            component=\"div\"\n            variant=\"indeterminate\"\n            className=\"pf-u-w-25\"\n          >\n            Images are built in the default region but can be copied to other\n            regions later.\n          </HelperTextItem>\n        </HelperText>\n      ),\n    },\n  ],\n};\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Button, Text, TextContent, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\n\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-target-msazure',\n  title: 'Microsoft Azure',\n  customTitle: (\n    <Title headingLevel=\"h1\" size=\"xl\">\n      Target environment - Microsoft Azure\n    </Title>\n  ),\n  name: 'ms-azure-target-env',\n  substepOf: 'Target environment',\n  nextStep: ({ values }) =>\n    nextStepMapper(values, {\n      skipAws: true,\n      skipGoogle: true,\n      skipAzure: true,\n    }),\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'azure-description',\n      label: (\n        <TextContent>\n          <Text>\n            Upon build, Image Builder sends the image to the selected authorized\n            Azure account. The image will be uploaded to the resource group in\n            the subscription you specify.\n          </Text>\n          <Text>\n            To authorize Image Builder to push images to Microsoft Azure, the\n            account owner must configure Image Builder as an authorized\n            application for a specific tenant ID and give it the role of\n            &quot;Contributor&quot; to at least one resource group.\n            <br />\n            <Button\n              component=\"a\"\n              target=\"_blank\"\n              variant=\"link\"\n              icon={<ExternalLinkAltIcon />}\n              iconPosition=\"right\"\n              isInline\n              href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow\"\n            >\n              Learn more about OAuth 2.0\n            </Button>\n          </Text>\n        </TextContent>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'azure-tenant-id',\n      className: 'pf-u-w-50',\n      'data-testid': 'azure-tenant-id',\n      type: 'text',\n      label: 'Azure Tenant GUID',\n      required: true,\n      isRequired: true,\n      autoFocus: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern:\n            /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i,\n          message: 'Please enter a valid tenant ID',\n        },\n      ],\n    },\n    {\n      component: 'azure-auth-button',\n      name: 'azure-auth-button',\n      'data-testid': 'azure-auth-button',\n      required: true,\n      isRequired: true,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'azure-subscription-id',\n      className: 'pf-u-w-50',\n      'data-testid': 'azure-subscription-id',\n      type: 'text',\n      label: 'Subscription ID',\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern:\n            /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i,\n          message: 'Please enter a valid subscription ID',\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'azure-resource-group',\n      className: 'pf-u-w-50',\n      'data-testid': 'azure-resource-group',\n      type: 'text',\n      label: 'Resource group',\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[-\\w._()]+[-\\w_()]$/,\n          message:\n            'Resource group names only allow alphanumeric characters, ' +\n            'periods, underscores, hyphens, and parenthesis and cannot end in a period',\n        },\n      ],\n    },\n    // TODO check oauth2 thing too here?\n  ],\n};\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\n\nimport StepTemplate from './stepTemplate';\n\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-systemconfiguration-packages',\n  title: 'Additional Red Hat packages',\n  name: 'packages',\n  substepOf: 'Content',\n  nextStep: () => {\n    if (!insights.chrome.isProd() && insights.chrome.isBeta()) {\n      return 'repositories';\n    } else {\n      return 'image-name';\n    }\n  },\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'packages-text-component',\n      label: (\n        <Text>\n          Images built with Image Builder include all required packages.\n          <br />\n          You can add additional packages to your image by searching\n          &quot;Available packages&quot; and adding them to the &quot;Chosen\n          packages&quot; list.\n        </Text>\n      ),\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n    },\n  ],\n};\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\n\nimport StepTemplate from './stepTemplate';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-systemconfiguration-content-sources-packages',\n  title: 'Additional custom packages',\n  name: 'packages-content-sources',\n  substepOf: 'Content',\n  nextStep: 'image-name',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'packages-text-component',\n      label: (\n        <Text>\n          Images built with Image Builder include all required packages.\n          <br />\n          You can add additional packages to your image by searching\n          &quot;Available packages&quot; and adding them to the &quot;Chosen\n          packages&quot; list.\n          <br />\n          The available packages will return results from all repositories\n          chosen on the previous page.\n        </Text>\n      ),\n    },\n    {\n      component: 'package-selector-content-sources',\n      name: 'selected-packages-content-sources',\n      label: 'Available options',\n    },\n  ],\n};\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  Button,\n  Popover,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, HelpIcon } from '@patternfly/react-icons';\n\nimport StepTemplate from './stepTemplate';\n\nimport CustomButtons from '../formComponents/CustomButtons';\n\nconst PopoverActivation = () => {\n  return (\n    <Popover\n      hasAutoWidth\n      maxWidth=\"35rem\"\n      bodyContent={\n        <TextContent>\n          <Text>\n            Activation keys enable you to register a system with appropriate\n            subscriptions, system purpose, and repositories attached.\n            <br />\n            <br />\n            If using an activation key with command line registration, you must\n            provide your organization&apos;s ID.\n          </Text>\n        </TextContent>\n      }\n    >\n      <Button\n        variant=\"plain\"\n        aria-label=\"Activation key popover\"\n        aria-describedby=\"subscription-activation-key\"\n        className=\"pf-c-form__group-label-help\"\n      >\n        <HelpIcon />\n      </Button>\n    </Popover>\n  );\n};\n\nexport default {\n  StepTemplate,\n  id: 'wizard-registration',\n  title: 'Registration',\n  name: 'registration',\n  nextStep: 'File system configuration',\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.RADIO,\n      label: 'Register images with Red Hat',\n      name: 'register-system',\n      initialValue: 'register-now-insights',\n      options: [\n        {\n          label: 'Register and connect image instances with Red Hat',\n          description: 'Includes Subscriptions and Red Hat Insights',\n          value: 'register-now-insights',\n          'data-testid': 'radio-register-now-insights',\n          autoFocus: true,\n        },\n        {\n          label: 'Register image instances only',\n          description: 'Includes Subscriptions only',\n          value: 'register-now',\n          className: 'pf-u-mt-sm',\n          'data-testid': 'radio-register-now',\n        },\n        {\n          label: 'Register later',\n          value: 'register-later',\n          className: 'pf-u-mt-sm',\n          'data-testid': 'radio-register-later',\n        },\n      ],\n    },\n    {\n      component: 'activation-keys',\n      name: 'subscription-activation-key',\n      required: true,\n      label: (\n        <>\n          Activation key to use for this image\n          <PopoverActivation />\n        </>\n      ),\n      condition: {\n        or: [\n          { when: 'register-system', is: 'register-now-insights' },\n          { when: 'register-system', is: 'register-now' },\n        ],\n      },\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'subscription-activation-description',\n      label: (\n        <>\n          Create and manage activation keys in the&nbsp;\n          <Button\n            component=\"a\"\n            target=\"_blank\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            isInline\n            href=\"https://access.redhat.com/\"\n          >\n            Customer Portal\n          </Button>\n        </>\n      ),\n      condition: {\n        or: [\n          { when: 'register-system', is: 'register-now-insights' },\n          { when: 'register-system', is: 'register-now' },\n        ],\n      },\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'subscription-register-later',\n      label: (\n        <TextContent>\n          <Text component={TextVariants.h3}>Register Later</Text>\n          <Text>\n            On initial boot, systems will need to be registered manually before\n            having access to updates or Red Hat services.\n          </Text>\n          <Text>Registering now is recommended.</Text>\n        </TextContent>\n      ),\n      condition: {\n        or: [{ when: 'register-system', is: 'register-later' }],\n      },\n    },\n    {\n      component: 'activation-key-information',\n      name: 'subscription-activation-key-information',\n      label: 'Selected activation key',\n      valueReference: 'subscription-activation-key',\n    },\n  ],\n};\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\n\nimport nextStepMapper from './repositoriesStepMapper';\nimport StepTemplate from './stepTemplate';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-repositories',\n  title: 'Custom repositories',\n  name: 'repositories',\n  substepOf: 'Content',\n  nextStep: ({ values }) => nextStepMapper(values),\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'packages-text-component',\n      label: (\n        <Text>\n          Select custom repositories from which to search and add packages to\n          this image.\n          <br />\n          Custom repositories can be managed using the Repositories app on Red\n          Hat Insights.\n        </Text>\n      ),\n    },\n    {\n      component: 'repositories-table',\n      name: 'custom-repositories',\n      label: 'Custom repositories',\n    },\n  ],\n};\n","export default ({ 'custom-repositories': customRepositories } = {}) => {\n  if (customRepositories?.length > 0) {\n    return 'packages-content-sources';\n  }\n\n  return 'image-name';\n};\n","import StepTemplate from './stepTemplate';\n\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-review',\n  name: 'review',\n  title: 'Review',\n  buttons: CustomButtons,\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Text } from '@patternfly/react-core';\n\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\n\nimport { RHEL_9 } from '../../../constants.js';\nimport DocumentationButton from '../../sharedComponents/DocumentationButton';\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-imageoutput',\n  title: 'Image output',\n  name: 'image-output',\n  nextStep: ({ values }) => nextStepMapper(values),\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'image-output-plain-text',\n      label: (\n        <Text>\n          Image builder allows you to create a custom image and push it to\n          target environments.\n          <br />\n          <DocumentationButton />\n        </Text>\n      ),\n    },\n    {\n      component: 'image-output-release-select',\n      label: 'Release',\n      name: 'release',\n      initialValue: RHEL_9,\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n    {\n      component: 'centos-acknowledgement',\n      name: 'centos-acknowledgement',\n      condition: {\n        when: 'release',\n        pattern: /centos-*/,\n        then: { set: { 'register-system': null } },\n        else: { visible: false },\n      },\n    },\n    {\n      component: 'output',\n      name: 'target-environment',\n      label: 'Select target environments',\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: 'targetEnvironmentValidator',\n        },\n      ],\n    },\n  ],\n};\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { useFormApi } from '@data-driven-forms/react-form-renderer';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport { Button } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\n// FileSystemconfigButtons are defined separately to display errors inside of the button footer\nconst FileSystemConfigButtons = ({ handleNext, handlePrev, nextStep }) => {\n  const { currentStep, formOptions } = useContext(WizardContext);\n  const { change, getState } = useFormApi();\n  const [hasErrors, setHasErrors] = useState(\n    getState()?.errors?.['file-system-configuration'] ? true : false\n  );\n  const [nextHasBeenClicked, setNextHasBeenClicked] = useState(false);\n\n  useEffect(() => {\n    const errors = getState()?.errors?.['file-system-configuration'];\n    errors ? setHasErrors(true) : setHasErrors(false);\n\n    if (!errors) {\n      setNextHasBeenClicked(false);\n      change('file-system-config-show-errors', false);\n    }\n  });\n\n  const handleClick = () => {\n    if (!hasErrors) {\n      handleNext(nextStep);\n    }\n\n    setNextHasBeenClicked(true);\n    change('file-system-config-show-errors', true);\n  };\n\n  return (\n    <>\n      <Button\n        id={`${currentStep.id}-next-button`}\n        variant=\"primary\"\n        type=\"button\"\n        isDisabled={hasErrors && nextHasBeenClicked}\n        onClick={handleClick}\n      >\n        Next\n      </Button>\n      <Button\n        id={`${currentStep.id}-previous-button`}\n        variant=\"secondary\"\n        type=\"button\"\n        onClick={handlePrev}\n      >\n        Back\n      </Button>\n      <div className=\"pf-c-wizard__footer-cancel\">\n        <Button\n          id={`${currentStep.id}-cancel-button`}\n          type=\"button\"\n          variant=\"link\"\n          onClick={formOptions.onCancel}\n        >\n          Cancel\n        </Button>\n      </div>\n    </>\n  );\n};\n\nFileSystemConfigButtons.propTypes = {\n  handleNext: PropTypes.func,\n  handlePrev: PropTypes.func,\n  nextStep: PropTypes.string,\n};\n\nexport default FileSystemConfigButtons;\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  Button,\n  Label,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport StepTemplate from './stepTemplate';\n\nimport FileSystemConfigButtons from '../formComponents/FileSystemConfigButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-systemconfiguration-filesystem',\n  title: 'File system configuration',\n  name: 'File system configuration',\n  buttons: FileSystemConfigButtons,\n  nextStep: 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'file-system-configuration-text-component',\n      label: (\n        <>\n          <Text>Define the partitioning of the image</Text>\n        </>\n      ),\n    },\n    {\n      component: componentTypes.RADIO,\n      name: 'file-system-config-radio',\n      initialValue: 'automatic',\n      options: [\n        {\n          label: (\n            <>\n              <Text>\n                <Label isCompact color=\"blue\">\n                  Recommended\n                </Label>{' '}\n                Use automatic partitioning\n              </Text>\n            </>\n          ),\n          description:\n            'Automatically partition your image to what is best, depending on the target environment(s)',\n          value: 'automatic',\n          'data-testid': 'file-system-config-radio-automatic',\n          autoFocus: true,\n        },\n        {\n          label: 'Manually configure partitions',\n          description:\n            'Manually configure the file system of your image by adding, removing, and editing partitions',\n          value: 'manual',\n          'data-testid': 'file-system-config-radio-manual',\n          className: 'pf-u-mt-sm',\n        },\n      ],\n    },\n    {\n      component: 'file-system-configuration',\n      name: 'file-system-configuration',\n      label: 'File system configurations',\n      validate: [\n        { type: 'fileSystemConfigurationValidator' },\n        { type: validatorTypes.REQUIRED },\n      ],\n      condition: {\n        when: 'file-system-config-radio',\n        is: 'manual',\n      },\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'automatic-partitioning-info',\n      label: (\n        <TextContent>\n          <Text component={TextVariants.h3}>Automatic partitioning</Text>\n          <Text>\n            Red Hat will automatically partition your image to what is best,\n            depending on the target environment(s).\n          </Text>\n          <Text>\n            The target environment sometimes dictates the partitioning scheme or\n            parts of it, and sometimes the target environment is unknown (e.g.,\n            for the .qcow2 generic cloud image).\n          </Text>\n          <Text>\n            Using automatic partitioning will apply the most current supported\n            configuration.\n            <br></br>\n            <Button\n              component=\"a\"\n              target=\"_blank\"\n              variant=\"link\"\n              icon={<ExternalLinkAltIcon />}\n              iconPosition=\"right\"\n              href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/performing_a_standard_rhel_8_installation/partitioning-reference_installing-rhel#recommended-partitioning-scheme_partitioning-reference\"\n              className=\"pf-u-pl-0\"\n            >\n              Learn more\n            </Button>\n          </Text>\n        </TextContent>\n      ),\n      condition: {\n        or: [{ when: 'file-system-config-radio', is: 'automatic' }],\n      },\n    },\n  ],\n};\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nimport StepTemplate from './stepTemplate';\n\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-details',\n  name: 'image-name',\n  title: 'Name image',\n  nextStep: 'review',\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text-component',\n      label: (\n        <p>\n          Optionally enter a name for your image. All images will have a UUID.\n        </p>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'image-name',\n      type: 'text',\n      label: 'Image name',\n      autoFocus: true,\n      validate: [\n        {\n          type: validatorTypes.MAX_LENGTH,\n          threshold: 100,\n        },\n      ],\n    },\n  ],\n};\n","const FileSystemConfigurationValidator = () => (fsc) => {\n  if (!fsc) {\n    return undefined;\n  }\n\n  let mpFreqs = {};\n  for (const fs of fsc) {\n    const mp = fs.mountpoint;\n    if (mp in mpFreqs) {\n      mpFreqs[mp]++;\n    } else {\n      mpFreqs[mp] = 1;\n    }\n  }\n\n  let duplicates = [];\n  for (const [k, v] of Object.entries(mpFreqs)) {\n    if (v > 1) {\n      duplicates.push(k);\n    }\n  }\n\n  let root = mpFreqs['/'] >= 1;\n  return duplicates.length === 0 && root\n    ? undefined\n    : {\n        duplicates: duplicates === [] ? undefined : duplicates,\n        root,\n      };\n};\n\nexport default FileSystemConfigurationValidator;\n","const TargetEnvironmentValidator = () => (targets) => {\n  if (!targets) {\n    return undefined;\n  }\n\n  // at least one of the target environments must\n  // be set to true. This reduces the value to\n  // a single boolean which is a flag for whether\n  // at least one target has been selected or not\n  let valid = Object.values(targets).reduce(\n    (prev, curr) => curr || prev,\n    false\n  );\n  return !valid ? 'Please select an image' : undefined;\n};\n\nexport default TargetEnvironmentValidator;\n","import React, { useEffect } from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport ImageCreator from './ImageCreator';\nimport {\n  awsTarget,\n  fileSystemConfiguration,\n  googleCloudTarger,\n  imageName,\n  imageOutput,\n  msAzureTarget,\n  packages,\n  packagesContentSources,\n  registration,\n  repositories,\n  review,\n} from './steps';\nimport {\n  fileSystemConfigurationValidator,\n  targetEnvironmentValidator,\n} from './validators';\n\nimport './CreateImageWizard.scss';\nimport api from '../../api';\nimport { UNIT_GIB, UNIT_KIB, UNIT_MIB } from '../../constants';\nimport { getDistroRepoUrls } from '../../repos';\nimport { composeAdded } from '../../store/composesSlice';\nimport { fetchRepositories } from '../../store/repositoriesSlice';\nimport isRhel from '../../Utilities/isRhel';\nimport { resolveRelPath } from '../../Utilities/path';\nimport DocumentationButton from '../sharedComponents/DocumentationButton';\n\nconst handleKeyDown = (e, handleClose) => {\n  if (e.key === 'Escape') {\n    handleClose();\n  }\n};\n\nconst onSave = (values) => {\n  let customizations = {\n    packages: values['selected-packages']?.map((p) => p.name),\n  };\n\n  if (values['custom-repositories']?.length > 0) {\n    customizations['payload_repositories'] = [...values['custom-repositories']];\n  }\n\n  if (values['register-system'] === 'register-now-insights') {\n    customizations.subscription = {\n      'activation-key': values['subscription-activation-key'],\n      insights: true,\n      organization: Number(values['subscription-organization-id']),\n      'server-url': values['subscription-server-url'],\n      'base-url': values['subscription-base-url'],\n    };\n  } else if (values['register-system'] === 'register-now') {\n    customizations.subscription = {\n      'activation-key': values['subscription-activation-key'],\n      insights: false,\n      organization: Number(values['subscription-organization-id']),\n      'server-url': values['subscription-server-url'],\n      'base-url': values['subscription-base-url'],\n    };\n  }\n\n  if (values['file-system-config-radio'] === 'manual') {\n    customizations.filesystem = [];\n    for (let fsc of values['file-system-configuration']) {\n      customizations.filesystem.push({\n        mountpoint: fsc.mountpoint,\n        min_size: fsc.size * fsc.unit,\n      });\n    }\n  }\n\n  let requests = [];\n  if (values['target-environment']?.aws) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'aws',\n          upload_request: {\n            type: 'aws',\n            options: {\n              share_with_accounts: [values['aws-account-id']],\n            },\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.gcp) {\n    let share = '';\n    switch (values['google-account-type']) {\n      case 'googleAccount':\n        share = `user:${values['google-email']}`;\n        break;\n      case 'serviceAccount':\n        share = `serviceAccount:${values['google-email']}`;\n        break;\n      case 'googleGroup':\n        share = `group:${values['google-email']}`;\n        break;\n      case 'domain':\n        share = `domain:${values['google-domain']}`;\n        break;\n    }\n\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'gcp',\n          upload_request: {\n            type: 'gcp',\n            options: {\n              share_with_accounts: [share],\n            },\n          },\n        },\n      ],\n      customizations,\n    };\n\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.azure) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'azure',\n          upload_request: {\n            type: 'azure',\n            options: {\n              tenant_id: values['azure-tenant-id'],\n              subscription_id: values['azure-subscription-id'],\n              resource_group: values['azure-resource-group'],\n            },\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.vsphere) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'vsphere',\n          upload_request: {\n            type: 'aws.s3',\n            options: {},\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.['guest-image']) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'guest-image',\n          upload_request: {\n            type: 'aws.s3',\n            options: {},\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.['image-installer']) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'image-installer',\n          upload_request: {\n            type: 'aws.s3',\n            options: {},\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  return requests;\n};\n\nconst parseSizeUnit = (bytesize) => {\n  let size;\n  let unit;\n\n  if (bytesize % UNIT_GIB === 0) {\n    size = bytesize / UNIT_GIB;\n    unit = UNIT_GIB;\n  } else if (bytesize % UNIT_MIB === 0) {\n    size = bytesize / UNIT_MIB;\n    unit = UNIT_MIB;\n  } else if (bytesize % UNIT_KIB === 0) {\n    size = bytesize / UNIT_KIB;\n    unit = UNIT_KIB;\n  }\n\n  return [size, unit];\n};\n\nconst getPackageDescription = async (release, arch, repoUrls, packageName) => {\n  let pack;\n  // if the env is stage beta then use content-sources api\n  // else use image-builder api\n  if (!insights.chrome.isProd() && insights.chrome.isBeta()) {\n    const data = await api.getPackagesContentSources(repoUrls, packageName);\n    pack = data.find((pack) => packageName === pack.name);\n  } else {\n    const args = [release, arch, packageName];\n    let { data, meta } = await api.getPackages(...args);\n\n    // the package should be found in the 0 index\n    // if not then fetch all package matches and search for the package\n    if (data[0]?.name === packageName) {\n      pack = data[0];\n    } else {\n      if (data?.length !== meta.count) {\n        ({ data } = await api.getPackages(...args, meta.count));\n      }\n\n      pack = data.find((pack) => packageName === pack.name);\n    }\n  }\n  const summary = pack?.summary;\n  // if no matching package is found return an empty string for description\n  return summary || '';\n};\n\n// map the compose request object to the expected form state\nconst requestToState = (composeRequest) => {\n  if (composeRequest) {\n    const imageRequest = composeRequest.image_requests[0];\n    const uploadRequest = imageRequest.upload_request;\n    let formState = {};\n\n    formState['image-name'] = composeRequest.image_name;\n\n    formState.release = composeRequest?.distribution;\n    // set defaults for target environment first\n    formState['target-environment'] = {\n      aws: false,\n      azure: false,\n      gcp: false,\n      'guest-image': false,\n    };\n    // then select the one from the request\n    // if the image type is to a cloud provider we use the upload_request.type\n    // or if the image is intended for download we use the image_type\n    let targetEnvironment;\n    if (uploadRequest.type === 'aws.s3') {\n      targetEnvironment = imageRequest.image_type;\n    } else {\n      targetEnvironment = uploadRequest.type;\n    }\n\n    formState['target-environment'][targetEnvironment] = true;\n\n    if (targetEnvironment === 'aws') {\n      formState['aws-account-id'] =\n        uploadRequest?.options?.share_with_accounts[0];\n    } else if (targetEnvironment === 'azure') {\n      formState['azure-tenant-id'] = uploadRequest?.options?.tenant_id;\n      formState['azure-subscription-id'] =\n        uploadRequest?.options?.subscription_id;\n      formState['azure-resource-group'] =\n        uploadRequest?.options?.resource_group;\n    } else if (targetEnvironment === 'gcp') {\n      // parse google account info\n      // roughly in the format `accountType:accountEmail`\n      const accountInfo = uploadRequest?.options?.share_with_accounts[0];\n      const [accountTypePrefix, account] = accountInfo.split(':');\n\n      switch (accountTypePrefix) {\n        case 'user':\n          formState['google-account-type'] = 'googleAccount';\n          formState['google-email'] = account;\n          break;\n        case 'serviceAccount':\n          formState['google-account-type'] = 'serviceAccount';\n          formState['google-email'] = account;\n          break;\n        case 'group':\n          formState['google-account-type'] = 'googleGroup';\n          formState['google-email'] = account;\n          break;\n        case 'domain':\n          formState['google-account-type'] = 'domain';\n          formState['google-domain'] = account;\n          break;\n      }\n    }\n\n    // customizations\n    // packages\n    let packs = [];\n\n    const distro = composeRequest?.distribution;\n    const distroRepoUrls = getDistroRepoUrls(distro);\n    const payloadRepositories =\n      composeRequest?.customizations?.payload_repositories?.map(\n        (repo) => repo.baseurl\n      );\n    const repoUrls = [...distroRepoUrls];\n    payloadRepositories ? repoUrls.push(...payloadRepositories) : null;\n\n    composeRequest?.customizations?.packages?.forEach(async (packName) => {\n      const packageDescription = await getPackageDescription(\n        distro,\n        imageRequest?.architecture,\n        repoUrls,\n        packName\n      );\n      const pack = {\n        name: packName,\n        summary: packageDescription,\n      };\n      packs.push(pack);\n    });\n    formState['selected-packages'] = packs;\n\n    // repositories\n    // 'original-payload-repositories' is treated as read-only and is used to populate\n    // the table in the repositories step\n    // This is necessary because there may be repositories present in the request's\n    // json blob that are not managed using the content sources API. In that case,\n    // they are still displayed in the table of repositories but without any information\n    // from the content sources API (in other words, only the URL of the repository is\n    // displayed). This information needs to persist throughout the lifetime of the\n    // Wizard as it is needed every time the repositories step is visited.\n    formState['original-payload-repositories'] =\n      composeRequest?.customizations?.payload_repositories;\n    // 'custom-repositories' is mutable and is used to generate the request\n    // sent to image-builder\n    formState['custom-repositories'] =\n      composeRequest?.customizations?.payload_repositories;\n\n    // filesystem\n    const fs = composeRequest?.customizations?.filesystem;\n    if (fs) {\n      formState['file-system-config-radio'] = 'manual';\n      let fileSystemConfiguration = [];\n      for (let fsc of fs) {\n        const [size, unit] = parseSizeUnit(fsc.min_size);\n        fileSystemConfiguration.push({\n          mountpoint: fsc.mountpoint,\n          size,\n          unit,\n        });\n      }\n\n      formState['file-system-configuration'] = fileSystemConfiguration;\n    }\n\n    // subscription\n    const subscription = composeRequest?.customizations?.subscription;\n    if (subscription) {\n      if (subscription.insights) {\n        formState['register-system'] = 'register-now-insights';\n      } else {\n        formState['register-system'] = 'register-now';\n      }\n\n      formState['subscription-activation-key'] = subscription['activation-key'];\n      formState['subscription-organization-id'] = subscription.organization;\n\n      if (insights.chrome.isProd()) {\n        formState['subscription-server-url'] = 'subscription.rhsm.redhat.com';\n        formState['subscription-base-url'] = 'https://cdn.redhat.com/';\n      } else {\n        formState['subscription-server-url'] =\n          'subscription.rhsm.stage.redhat.com';\n        formState['subscription-base-url'] = 'https://cdn.stage.redhat.com/';\n      }\n    } else {\n      formState['register-system'] = 'register-later';\n    }\n\n    return formState;\n  } else {\n    return;\n  }\n};\n\nconst formStepHistory = (composeRequest) => {\n  if (composeRequest) {\n    const imageRequest = composeRequest.image_requests[0];\n    const uploadRequest = imageRequest.upload_request;\n    // the order of steps must match the order of the steps in the Wizard\n    const steps = ['image-output'];\n\n    if (uploadRequest.type === 'aws') {\n      steps.push('aws-target-env');\n    } else if (uploadRequest.type === 'azure') {\n      steps.push('azure-target-env');\n    } else if (uploadRequest.type === 'gcp') {\n      steps.push('google-cloud-target-env');\n    }\n\n    if (isRhel(composeRequest?.distribution)) {\n      steps.push('registration');\n    }\n\n    if (!insights.chrome.isProd() && insights.chrome.isBeta()) {\n      steps.push('File system configuration', 'packages', 'repositories');\n\n      const customRepositories =\n        composeRequest.customizations?.payload_repositories;\n      if (customRepositories) {\n        steps.push('packages-content-sources');\n      }\n    } else {\n      steps.push('File system configuration', 'packages');\n    }\n\n    steps.push('image-name');\n\n    return steps;\n  } else {\n    return [];\n  }\n};\n\nconst CreateImageWizard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const composeRequest = location?.state?.composeRequest;\n  const initialState = requestToState(composeRequest);\n  const stepHistory = formStepHistory(composeRequest);\n\n  const handleClose = () => navigate(resolveRelPath(''));\n\n  useEffect(() => {\n    if (!insights.chrome.isProd() && insights.chrome.isBeta()) {\n      dispatch(fetchRepositories());\n    }\n  }, []);\n\n  return (\n    <ImageCreator\n      onClose={handleClose}\n      onSubmit={({ values, setIsSaving }) => {\n        setIsSaving(() => true);\n        const requests = onSave(values);\n        Promise.all(\n          requests.map((request) =>\n            api.composeImage(request).then((response) => {\n              dispatch(\n                composeAdded({\n                  compose: {\n                    ...response,\n                    request,\n                    image_status: { status: 'pending' },\n                  },\n                  insert: true,\n                })\n              );\n            })\n          )\n        )\n          .then(() => {\n            navigate(resolveRelPath(''));\n            dispatch(\n              addNotification({\n                variant: 'success',\n                title: 'Your image is being created',\n              })\n            );\n\n            setIsSaving(false);\n          })\n          .catch((err) => {\n            dispatch(\n              addNotification({\n                variant: 'danger',\n                title: 'Your image could not be created',\n                description:\n                  'Status code ' +\n                  err.response.status +\n                  ': ' +\n                  err.response.statusText,\n              })\n            );\n\n            setIsSaving(false);\n          });\n      }}\n      defaultArch=\"x86_64\"\n      customValidatorMapper={{\n        fileSystemConfigurationValidator,\n        targetEnvironmentValidator,\n      }}\n      schema={{\n        fields: [\n          {\n            component: componentTypes.WIZARD,\n            name: 'image-builder-wizard',\n            className: 'image_builder',\n            isDynamic: true,\n            inModal: true,\n            onKeyDown: (e) => {\n              handleKeyDown(e, handleClose);\n            },\n            buttonLabels: {\n              submit: 'Create image',\n            },\n            showTitles: true,\n            title: 'Create image',\n            crossroads: [\n              'target-environment',\n              'release',\n              'custom-repositories',\n            ],\n            description: (\n              <>\n                Image builder allows you to create a custom image and push it to\n                target environments. <DocumentationButton />\n              </>\n            ),\n            // order in this array does not reflect order in wizard nav, this order is managed inside\n            // of each step by `nextStep` property!\n            fields: [\n              imageOutput,\n              awsTarget,\n              googleCloudTarger,\n              msAzureTarget,\n              registration,\n              packages,\n              packagesContentSources,\n              repositories,\n              fileSystemConfiguration,\n              imageName,\n              review,\n            ],\n            initialState: {\n              activeStep: location?.state?.initialStep || 'image-output', // name of the active step\n              activeStepIndex: stepHistory.length, // active index\n              maxStepIndex: stepHistory.length, // max achieved index\n              prevSteps: stepHistory, // array with names of previously visited steps\n            },\n          },\n        ],\n      }}\n      initialValues={initialState}\n    />\n  );\n};\n\nexport default CreateImageWizard;\n","import React from 'react';\n\nimport { Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst DocumentationButton = () => {\n  const documentationURL =\n    'https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/creating_customized_rhel_images_using_the_image_builder_service/index';\n\n  return (\n    <Button\n      component=\"a\"\n      target=\"_blank\"\n      variant=\"link\"\n      icon={<ExternalLinkAltIcon />}\n      iconPosition=\"right\"\n      isInline\n      href={documentationURL}\n    >\n      Documentation\n    </Button>\n  );\n};\n\nexport default DocumentationButton;\n"],"names":["ActivationKeys","label","isRequired","props","useFormApi","change","getState","input","useFieldApi","useState","activationKeys","setActivationKeys","isOpen","setIsOpen","isLoading","setIsLoading","values","activationKeySelected","selectActivationKey","useEffect","api","then","keys","insights","chrome","isProd","FormGroup","Select","variant","SelectVariant","onToggle","onSelect","_","selection","name","onClear","undefined","selections","placeholderText","typeAheadAriaLabel","SelectOption","isNoResultsOption","Spinner","isSVG","size","map","key","index","value","propTypes","PropTypes","defaultProps","tenantId","guidRegex","RegExp","Button","component","target","isDisabled","test","href","DeveloperProgramButton","icon","iconPosition","isInline","Alert","isPlain","title","MountPoint","validPrefixes","prefix","setPrefix","suffix","setSuffix","p","mountpoint","startsWith","substring","length","suf","mp","onChange","path","className","event","pfx","TextInput","type","v","SizeUnit","unit","UNIT_GIB","setUnit","setSize","isNaN","parseInt","UNIT_KIB","UNIT_MIB","u","initialRow","id","uuidv4","fstype","draggedItemId","setDraggedItemId","draggingToItemIndex","setDraggingToItemIndex","isDragging","setIsDragging","itemOrder","setItemOrder","tempItemOrder","setTempItemOrder","bodyref","useRef","rows","setRows","fsc","newRows","newOrder","r","push","showErrors","r2","addRow","concat","move","ulNode","current","nodes","Array","from","children","node","every","i","firstChild","removeChild","lastChild","forEach","appendChild","find","n","onDragOver","evt","preventDefault","curListItem","closest","contains","dragId","newDraggingToItemIndex","findIndex","item","arr","i1","toIndex","fromIndex","indexOf","temp","splice","moveItem","isValidDrop","ulRect","getBoundingClientRect","clientX","x","width","clientY","y","height","onDragLeave","onDrop","onDragStart","dataTransfer","effectAllowed","setData","currentTarget","classList","add","styles","setAttribute","onDragEnd","remove","TextContent","Text","TextVariants","errors","duplicates","root","TableComposable","Thead","Tr","Th","Popover","hasAutoWidth","bodyContent","Tbody","ref","row","rowIndex","draggable","Td","draggableRow","newRow","setMountpoint","s","onClick","removeIndex","e","removeOrderIndex","removeRow","distro","RHEL_8","RHEL_9","ImageOutputReleaseSelect","showDevelopmentOptions","setShowDevelopmentOptions","ouiaId","RELEASES","loadingVariant","text","Object","entries","filter","isRhel","release","repos","distribution_arch","url","RedHatPackages","defaultArch","getAllPackages","packagesSearchName","isBeta","distribution","repoUrls","repo","args","architecture","data","meta","count","Packages","ContentSourcesPackages","baseurl","setPackagesSearchName","filterChosen","setFilterChosen","chosenPackages","setChosenPackages","focus","setFocus","selectedPackages","availablePackages","setAvailablePackages","Set","selectedAvailablePackages","setSelectedAvailablePackages","selectedChosenPackages","setSelectedChosenPackages","firstInputElement","newChosenPackages","pkg","searchResultsComparator","useCallback","searchTerm","a","b","toLowerCase","availablePackagesDisplayList","useMemo","sort","chosenPackagesDisplayList","includes","handleAvailablePackagesSearch","packageList","newAvailablePackages","keydownHandler","stopPropagation","document","addEventListener","removeEventListener","updateState","DualListSelector","DualListSelectorPane","searchInput","SearchInput","placeholder","onFocus","onBlur","val","submitSearchButtonLabel","onSearch","resetButtonLabel","DualListSelectorList","DualListSelectorListItem","isSelected","has","onOptionSelect","pkgName","newSelected","summary","DualListSelectorControlsWrapper","DualListSelectorControl","moveSelectedToChosen","tooltipContent","removeSelectedFromChosen","isChosen","RadioWithPopover","activationKey","role","setRole","serviceLevel","setServiceLevel","usage","setUsage","additionalRepositories","setRepositories","fetchKeyInformation","TextList","TextListVariants","TextListItem","TextListItemVariants","isSmall","repositoryLabel","RegistrationKeyInformation","valueReference","isEmpty","BulkSelect","selected","filteredCount","perPage","handleSelectAll","handleSelectPage","handleDeselectAll","dropdownIsOpen","setDropdownIsOpen","numSelected","anySelected","isChecked","items","DropdownItem","Dropdown","toggle","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","dropdownItems","convertSchemaToContentSources","contentSourcesRepo","rhsm","gpgkey","gpg_key","contentSourcesRepos","useSelector","state","selectValidRepositories","formStateReposList","repositories","formStateRepos","mergeRepositories","initializeRepositories","filterValue","setFilterValue","setPerPage","page","setPage","setSelected","isRepoSelected","repoURL","filteredRepositoryURLs","updateSelected","selectedRepos","selectedRepoURLs","payloadRepositories","imageBuilderRepo","check_gpg","convertSchemaToImageBuilder","updateFormState","computeStart","computeEnd","EmptyState","EmptyStateVariant","EmptyStateIcon","RepositoryIcon","Title","headingLevel","EmptyStateBody","Toolbar","ToolbarContent","ToolbarItem","pageRepos","slice","repoId","Pagination","itemCount","onSetPage","newPage","widgetId","onPerPageSelect","newPerPage","isCompact","select","isSelecting","selectedRepoId","handleSelect","dataLabel","distribution_versions","package_count","targetEnv","skipAws","skipGoogle","skipAzure","aws","gcp","azure","StepTemplate","formFields","formRef","customTitle","showTitle","showTitles","formOptions","renderForm","Element","CustomButtons","buttonLabels","cancel","next","submit","back","handleNext","handlePrev","nextStep","isSaving","setIsSaving","useContext","WizardContext","currentStep","onNextOrSubmit","onSubmit","valid","validating","onCancel","googleAccType","googleAccount","serviceAccount","googleGroup","domain","PopoverInfo","appendTo","maxWidth","headerContent","flipBehavior","substepOf","nextStepMapper","buttons","fields","componentTypes","initialValue","options","autoFocus","validate","validatorTypes","condition","or","when","is","pattern","message","FSReviewTable","ri","activeTabKey","setActiveTabKey","minSize","setMinSize","registerSystem","auth","getUser","userData","identity","internal","org_id","toFixed","DescriptionList","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Tabs","isFilled","activeKey","tabIndex","Tab","eventKey","TabTitleText","List","iconSize","ListItem","src","vsphere","position","minWidth","TargetEnvironment","environment","setEnvironment","handleSetEnvironment","env","prevEnv","newEnv","handleKeyDown","Tile","onKeyDown","isStacked","isDisplayLarge","Checkbox","ImageCreator","schema","onClose","customComponentMapper","customValidatorMapper","initialValues","subscription","FormTemplate","showFormControls","formValues","validatorMapper","componentMapper","review","Review","output","AzureAuthButton","FileSystemConfiguration","CentOSAcknowledgement","Repositories","threshold","DEFAULT_AWS_REGION","isReadOnly","helperText","HelperText","HelperTextItem","required","PopoverActivation","description","customRepositories","DocumentationButton","set","else","visible","FileSystemConfigButtons","hasErrors","setHasErrors","nextHasBeenClicked","setNextHasBeenClicked","Label","color","mpFreqs","k","targets","reduce","prev","curr","parseSizeUnit","bytesize","getPackageDescription","arch","packageName","pack","dispatch","useDispatch","navigate","useNavigate","location","useLocation","composeRequest","initialState","targetEnvironment","imageRequest","image_requests","uploadRequest","upload_request","formState","image_name","image_type","share_with_accounts","tenant_id","subscription_id","resource_group","split","accountTypePrefix","account","packs","distroRepoUrls","getDistroRepoUrls","customizations","payload_repositories","packages","packName","packageDescription","fs","filesystem","fileSystemConfiguration","min_size","organization","requestToState","stepHistory","steps","formStepHistory","handleClose","resolveRelPath","fetchRepositories","requests","Number","request","share","onSave","Promise","all","response","composeAdded","compose","image_status","status","insert","addNotification","err","statusText","fileSystemConfigurationValidator","targetEnvironmentValidator","isDynamic","inModal","crossroads","imageOutput","awsTarget","googleCloudTarger","msAzureTarget","registration","packagesContentSources","imageName","activeStep","initialStep","activeStepIndex","maxStepIndex","prevSteps"],"sourceRoot":""}