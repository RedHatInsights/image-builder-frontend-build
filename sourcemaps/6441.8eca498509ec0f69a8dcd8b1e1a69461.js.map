{"version":3,"file":"js/6441.9ea63f873cca83bfc662.js","mappings":"mNAEWA,E,SAAiB,G,iCCOjBC,EAAqB,SAAUC,GACtC,IAAIC,EAAcD,EAAGC,YACjBC,GAAK,IAAAC,oBAAoBC,EAAeF,EAAGE,aAAcC,EAAeH,EAAGG,aAAcC,EAAQJ,EAAGI,MACxG,OAAQ,UAAM,EAAAC,oBAAqB,CAAEC,SAAU,EAAC,SAAK,EAAAC,OAAQ,CAAEC,QAAS,UAAWC,QAASP,EAAcQ,WAAYX,EAAaO,SAAU,UAAW,SAAK,EAAAC,OAAQ,CAAEC,QAAS,YAAaC,QAASN,EAAcG,SAAU,UAAW,SAAK,EAAAC,OAAQ,CAAEC,QAAS,OAAQC,QAASL,EAAOE,SAAU,aACvS,EAQA,QAPwB,WACpB,IAAIK,GAAW,IAAAC,eAIf,OAHehB,GAEfiB,CAAS,OACD,UAAM,WAAW,CAAEP,SAAU,EAAC,SAAKQ,EAAA,EAAoB,CAAC,IAAI,SAAK,UAAW,CAAEC,UAAW,kDAAmDT,UAAU,UAAM,EAAAU,OAAQ,CAAEC,QAAS,WAAc,OAAON,GAAS,OAAe,IAAM,EAAGO,iBAAiB,EAAMZ,SAAU,EAAC,SAAK,EAAAa,WAAY,CAAEC,KAAM,eAAgBC,GAAI,oBAAqBC,QAAQ,SAAKzB,EAAoB,CAAEE,aAAa,OAAa,SAAK,EAAAoB,WAAY,CAAEC,KAAM,SAAUC,GAAI,cAAeC,QAAQ,SAAKzB,EAAoB,CAAEE,aAAa,aACxf,C,wGCbWe,EAAqB,WAC5B,OAAQ,SAAK,WAAW,CAAER,UAAU,UAAM,EAAAiB,WAAY,CAAEjB,SAAU,EAAC,SAAK,EAAAkB,gBAAiB,CAAET,UAAW,QAASU,MAAO,mBAAoB,SAAK,EAAAC,QAAS,CAAEC,SAAU,QAASC,cAAe,sBAAuBC,aAAa,UAAM,EAAAC,YAAa,CAAExB,SAAU,EAAC,SAAK,EAAAyB,KAAM,CAAEzB,SAAU,sUAAuU,SAAK,EAAAyB,KAAM,CAAEzB,UAAU,SAAK,EAAAC,OAAQ,CAAEyB,UAAW,IAAKC,OAAQ,SAAUzB,QAAS,OAAQ0B,MAAM,SAAK,KAAqB,CAAC,GAAIC,aAAc,QAASC,UAAU,EAAMC,KAAM,gJAAiJ/B,SAAU,+CAAiD,SAAK,EAAAyB,KAAM,CAAEzB,UAAU,SAAK,EAAAC,OAAQ,CAAEyB,UAAW,IAAKC,OAAQ,SAAUzB,QAAS,OAAQ0B,MAAM,SAAK,KAAqB,CAAC,GAAIC,aAAc,QAASC,UAAU,EAAMC,KAAM,+IAAgJ/B,SAAU,gDAAoDA,UAAU,SAAK,EAAAC,OAAQ,CAAEC,QAAS,QAAS,aAAc,sBAAuBO,UAAW,2BAA4BT,UAAU,SAAK,KAAU,CAAC,QAAU,SAAK,EAAAgC,gBAAiB,CAAEC,gBAAiB,+EACthD,C","sources":["webpack:///./src/store/hooks.ts","webpack:///./src/Components/CreateImageWizardV2/CreateImageWizard.tsx","webpack:///./src/Components/sharedComponents/ImageBuilderHeader.tsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport var useAppDispatch = useDispatch;\nexport var useAppSelector = useSelector;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Button, Wizard, WizardFooterWrapper, WizardStep, useWizardContext, } from '@patternfly/react-core';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppDispatch } from '../../store/hooks';\nimport './CreateImageWizard.scss';\nimport { initializeWizard } from '../../store/wizardSlice';\nimport { resolveRelPath } from '../../Utilities/path';\nimport { ImageBuilderHeader } from '../sharedComponents/ImageBuilderHeader';\nexport var CustomWizardFooter = function (_a) {\n    var disableNext = _a.disableNext;\n    var _b = useWizardContext(), goToNextStep = _b.goToNextStep, goToPrevStep = _b.goToPrevStep, close = _b.close;\n    return (_jsxs(WizardFooterWrapper, { children: [_jsx(Button, { variant: \"primary\", onClick: goToNextStep, isDisabled: disableNext, children: \"Next\" }), _jsx(Button, { variant: \"secondary\", onClick: goToPrevStep, children: \"Back\" }), _jsx(Button, { variant: \"link\", onClick: close, children: \"Cancel\" })] }));\n};\nvar CreateImageWizard = function () {\n    var navigate = useNavigate();\n    var dispatch = useAppDispatch();\n    // Ensure the wizard starts with a fresh initial state\n    dispatch(initializeWizard);\n    return (_jsxs(_Fragment, { children: [_jsx(ImageBuilderHeader, {}), _jsx(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", children: _jsxs(Wizard, { onClose: function () { return navigate(resolveRelPath('')); }, isVisitRequired: true, children: [_jsx(WizardStep, { name: \"Image output\", id: \"step-image-output\", footer: _jsx(CustomWizardFooter, { disableNext: false }) }), _jsx(WizardStep, { name: \"Review\", id: \"step-review\", footer: _jsx(CustomWizardFooter, { disableNext: true }) })] }) })] }));\n};\nexport default CreateImageWizard;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Button, Popover, Text, TextContent } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, HelpIcon } from '@patternfly/react-icons';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { OpenSourceBadge, PageHeader, PageHeaderTitle, } from '@redhat-cloud-services/frontend-components';\nimport './ImageBuilderHeader.scss';\nexport var ImageBuilderHeader = function () {\n    return (_jsx(_Fragment, { children: _jsxs(PageHeader, { children: [_jsx(PageHeaderTitle, { className: \"title\", title: \"Image Builder\" }), _jsx(Popover, { minWidth: \"35rem\", headerContent: 'About image builder', bodyContent: _jsxs(TextContent, { children: [_jsx(Text, { children: \"Image builder is a tool for creating deployment-ready customized system images: installation disks, virtual machines, cloud vendor-specific images, and others. By using image builder, you can make these images faster than manual procedures because it eliminates the specific configurations required for each output type.\" }), _jsx(Text, { children: _jsx(Button, { component: \"a\", target: \"_blank\", variant: \"link\", icon: _jsx(ExternalLinkAltIcon, {}), iconPosition: \"right\", isInline: true, href: 'https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/creating_customized_rhel_images_using_the_image_builder_service', children: \"Image builder for RPM-DNF documentation\" }) }), _jsx(Text, { children: _jsx(Button, { component: \"a\", target: \"_blank\", variant: \"link\", icon: _jsx(ExternalLinkAltIcon, {}), iconPosition: \"right\", isInline: true, href: 'https://access.redhat.com/documentation/en-us/edge_management/2022/html/create_rhel_for_edge_images_and_configure_automated_management/index', children: \"Image builder for OSTree documentation\" }) })] }), children: _jsx(Button, { variant: \"plain\", \"aria-label\": \"About image builder\", className: \"pf-u-pl-sm header-button\", children: _jsx(HelpIcon, {}) }) }), _jsx(OpenSourceBadge, { repositoriesURL: \"https://www.osbuild.org/guides/image-builder-service/architecture.html\" })] }) }));\n};\n"],"names":["useAppDispatch","CustomWizardFooter","_a","disableNext","_b","useWizardContext","goToNextStep","goToPrevStep","close","WizardFooterWrapper","children","Button","variant","onClick","isDisabled","navigate","useNavigate","dispatch","ImageBuilderHeader","className","Wizard","onClose","isVisitRequired","WizardStep","name","id","footer","PageHeader","PageHeaderTitle","title","Popover","minWidth","headerContent","bodyContent","TextContent","Text","component","target","icon","iconPosition","isInline","href","OpenSourceBadge","repositoriesURL"],"sourceRoot":""}