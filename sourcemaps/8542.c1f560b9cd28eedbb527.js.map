{"version":3,"sources":["webpack:///./src/Components/CreateImageWizard/steps/imageOutputStepMapper.js","webpack:///./src/Components/CreateImageWizard/steps/imageOutput.js","webpack:///./src/Components/CreateImageWizard/steps/registration.js","webpack:///./src/Components/CreateImageWizard/steps/googleCloud.js","webpack:///./src/Components/CreateImageWizard/formComponents/ReviewStep.js","webpack:///./src/Components/CreateImageWizard/formComponents/TargetEnvironment.js","webpack:///./src/Components/CreateImageWizard/formComponents/Packages.js","webpack:///./src/Components/CreateImageWizard/formComponents/RadioWithPopover.js","webpack:///./src/Components/CreateImageWizard/ImageCreator.js","webpack:///./src/Components/CreateImageWizard/steps/aws.js","webpack:///./src/Components/CreateImageWizard/steps/msAzure.js","webpack:///./src/Components/CreateImageWizard/steps/packages.js","webpack:///./src/Components/CreateImageWizard/formComponents/CustomSubmitButtons.js","webpack:///./src/Components/CreateImageWizard/steps/review.js","webpack:///./src/Components/CreateImageWizard/CreateImageWizard.js","webpack:///./src/Components/CreateImageWizard/CreateImageWizard.scss","webpack:///./src/Components/CreateImageWizard/formComponents/TargetEnvironment.scss","webpack:///./src/Components/CreateImageWizard/CreateImageWizard.scss?d927","webpack:///./src/Components/CreateImageWizard/formComponents/TargetEnvironment.scss?5a04"],"names":["targetEnv","release","skipAws","skipGoogle","skipAzure","aws","google","azure","releaseValues","title","name","nextStep","values","nextStepMapper","fields","component","componentTypes","label","simpleValue","initialValue","options","Object","entries","map","key","value","isRequired","validate","type","validatorTypes","registerValues","testId","user","Number","identity","internal","org_id","isDisabled","condition","or","when","is","required","googleAccType","googleAccount","serviceAccount","googleGroup","domain","PopoverInfo","appendTo","Popover","hasAutoWidth","maxWidth","headerContent","bodyContent","TextContent","Text","TextList","TextListItem","Button","variant","aria-label","aria-describedby","className","propTypes","PropTypes","customTitle","Title","headingLevel","size","substepOf","getState","useFormApi","TextVariants","TextListVariants","data-testid","TextListItemVariants","id","repeat","length","TargetEnvironment","props","change","input","useFieldApi","useState","environemt","setEnvironment","useEffect","FormGroup","Tile","icon","src","onClick","prevEnv","newEnv","isSelected","isStacked","isDisplayLarge","defaultProps","mapPackagesToComponent","packages","pack","summary","mapComponentToPackage","children","Packages","defaultArch","packagesSearchName","useRef","packagesAvailable","setPackagesAvailable","packagesSelected","setPackagesSelected","filterSelected","setFilterSelected","packageListChange","newAvailablePackages","newChosenPackages","chosenPkgs","handlePackagesSearch","api","architecture","current","data","DualListSelector","isSearchable","availableOptionsActions","availableOptions","availableOptionsTitle","chosenOptions","filter","item","includes","chosenOptionsTitle","addSelected","removeSelected","addAll","removeAll","onAvailableOptionsSearchInputChanged","val","onChosenOptionsSearchInputChanged","filterOption","RadioWithPopover","ref","ImageCreator","schema","onSubmit","onClose","customComponentMapper","subscription","FormTemplate","showFormControls","formValues","componentMapper","review","Review","output","select","Select","onCancel","Spinner","threshold","target","iconPosition","isInline","href","rel","CustomButtons","buttonLabels","cancel","submit","back","isSaving","setIsSaving","useContext","WizardContext","handlePrev","formOptions","valid","validating","buttons","dispatch","useDispatch","history","useHistory","setUser","insights","chrome","auth","getUser","userData","push","requests","customizations","p","organization","request","distribution","image_requests","image_type","upload_request","share_with_accounts","share","tenant_id","subscription_id","resource_group","onSave","Promise","all","then","response","composeAdded","image_status","status","addNotification","isDynamic","inModal","showTitles","crossroads","description","imageOutput","awsTarget","googleCloudTarger","msAzureTarget","registration","___CSS_LOADER_EXPORT___","module","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","isEqualLocals","dispose"],"mappings":"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","file":"js/8542.b65c9683e677ae4340ac.js","sourcesContent":["export default ({ 'target-environment': targetEnv, release } = {}, { skipAws, skipGoogle, skipAzure } = {}) => {\n    if (!skipAws && targetEnv?.aws) {\n        return 'aws-target-env';\n    }\n\n    if (!skipGoogle && targetEnv?.google) {\n        return 'google-cloud-target-env';\n    }\n\n    if (!skipAzure && targetEnv?.azure) {\n        return 'ms-azure-target-env';\n    }\n\n    return release === 'rhel-8' ? 'registration' : 'packages';\n};\n","import componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport nextStepMapper from './imageOutputStepMapper';\n\nexport const releaseValues = {\n    'rhel-8': 'Red Hat Enterprise Linux (RHEL) 8',\n    'centos-8': 'CentOS Stream 8'\n};\n\nexport default {\n    title: 'Image output',\n    name: 'image-output',\n    nextStep: ({ values }) => nextStepMapper(values),\n    fields: [\n        {\n            component: componentTypes.SELECT,\n            label: 'Release',\n            name: 'release',\n            simpleValue: true,\n            initialValue: 'rhel-8',\n            options: Object.entries(releaseValues).map(([ key, title ]) => ({\n                label: title,\n                value: key\n            })),\n            isRequired: true,\n            validate: [\n                {\n                    type: validatorTypes.REQUIRED\n                }\n            ],\n        },\n        {\n            component: 'output',\n            name: 'target-environment',\n            label: 'Select target environment',\n            isRequired: true,\n            validate: [\n                {\n                    type: validatorTypes.REQUIRED\n                }\n            ],\n        }\n    ]\n};\n","import componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport const registerValues = {\n    'subscribe-now-radio': {\n        title: 'Embed an activation key and register systems on first boot',\n        testId: 'register-now-radio-button'\n    },\n    'register-later-radio-button': {\n        title: 'Register the system later',\n        testId: 'register-later-radio-button'\n    }\n};\n\nexport default (user) => ({\n    title: 'Registration',\n    name: 'registration',\n    nextStep: 'packages',\n    fields: [\n        {\n            component: componentTypes.RADIO,\n            label: 'Register the system',\n            name: 'register-system',\n            initialValue: 'register-later-radio-button',\n            options: Object.entries(registerValues).map(([ key, { title, testId }]) => ({\n                label: title,\n                value: key,\n                'data-testid': testId,\n            }))\n        },\n        {\n            component: componentTypes.TEXT_FIELD,\n            name: 'subscription-organization',\n            type: 'text',\n            'data-testid': 'organization-id',\n            label: 'Organization ID',\n            initialValue: Number(user?.identity?.internal?.org_id),\n            isDisabled: true,\n            condition: {\n                or: [\n                    { when: 'register-system', is: 'subscribe-now-radio' },\n                ]\n            }\n        },\n        {\n            component: componentTypes.TEXT_FIELD,\n            name: 'subscription-activation',\n            'data-testid': 'subscription-activation',\n            required: true,\n            type: 'password',\n            label: 'Activation key',\n            condition: {\n                or: [\n                    { when: 'register-system', is: 'subscribe-now-radio' },\n                ]\n            },\n            isRequired: true,\n            validate: [\n                {\n                    type: validatorTypes.REQUIRED,\n                },\n            ],\n        }\n    ]\n});\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport nextStepMapper from './imageOutputStepMapper';\nimport { Title, Text, Popover, TextContent, TextList, TextListItem, Button } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nexport const googleAccType = {\n    googleAccount: 'Google account',\n    serviceAccount: 'Service account',\n    googleGroup: 'Google group',\n    domain: 'Domain'\n};\n\nconst PopoverInfo = ({ appendTo }) => {\n    return <Popover\n        appendTo={ appendTo }\n        hasAutoWidth\n        maxWidth='35rem'\n        headerContent={ 'Valid account types' }\n        bodyContent={ <TextContent>\n            <Text>The following account types can have an image shared with them:</Text>\n            <TextList>\n                <TextListItem>\n                    <strong>Google account:</strong> A Google account represents a developer, an administrator,\n    or any other person who interacts with Google Cloud. e.g., <em>`alice@gmail.com`</em>.\n                </TextListItem>\n                <TextListItem>\n                    <strong>Service account:</strong> A service account is an account for an application instead\n    of an individual end user. e.g., <em>`myapp@appspot.gserviceaccount.com`</em>.\n                </TextListItem>\n                <TextListItem>\n                    <strong>Google group:</strong> A Google group is a named collection of Google accounts and\n    and service accounts. e.g., <em>`admins@example.com`</em>.\n                </TextListItem>\n                <TextListItem>\n                    <strong>Google workspace domain/Cloud identity domain:</strong> A Google workspace or cloud identity\n    domain represents a virtual group of all the Google accounts in an organization. These domains\n    represent your organization&apos;s internet domain name. e.g., <em>`mycompany.com`</em>.\n                </TextListItem>\n            </TextList>\n        </TextContent> }>\n        <Button\n            variant=\"plain\"\n            aria-label=\"Account info\"\n            aria-describedby=\"google-account-type\"\n            className=\"pf-c-form__group-label-help\">\n            <HelpIcon />\n        </Button>\n    </Popover>;\n};\n\nPopoverInfo.propTypes = {\n    appendTo: PropTypes.any\n};\n\nexport default {\n    title: 'Google Cloud Platform',\n    customTitle: <Title headingLevel=\"h1\" size=\"xl\">Target Environment - Google Cloud Platform</Title>,\n    name: 'google-cloud-target-env',\n    substepOf: 'Target environment',\n    nextStep: ({ values }) => nextStepMapper(values, { skipGoogle: true, skipAws: true }),\n    fields: [\n        {\n            component: componentTypes.PLAIN_TEXT,\n            name: 'google-cloud-text-component',\n            label: <Text>\n            Your image will be uploaded to Google Cloud Platform and shared with the email you provide below. <br />\n            The image should be copied to your account within 14 days.\n            </Text>\n        },\n        {\n            component: 'radio-popover',\n            label: 'Type',\n            Popover: PopoverInfo,\n            name: 'google-account-type',\n            initialValue: 'googleAccount',\n            options: Object.entries(googleAccType).map(([ value, label ]) => ({\n                label: value === 'domain' ? 'Google Workspace Domain or Cloud Identity Domain' : label,\n                value\n            })),\n            isRequired: true,\n            validate: [\n                {\n                    type: validatorTypes.REQUIRED,\n                },\n            ],\n        },\n        {\n            component: componentTypes.TEXT_FIELD,\n            name: 'google-email',\n            'data-testid': 'input-google-email',\n            type: 'text',\n            label: 'Email address',\n            condition: {\n                or: [\n                    { when: 'google-account-type', is: 'googleAccount' },\n                    { when: 'google-account-type', is: 'serviceAccount' },\n                    { when: 'google-account-type', is: 'googleGroup' },\n                    { when: 'google-account-type', is: null },\n                ]\n            },\n            isRequired: true,\n            validate: [\n                {\n                    type: validatorTypes.REQUIRED,\n                },\n            ],\n        },\n        {\n            component: componentTypes.TEXT_FIELD,\n            name: 'google-domain',\n            type: 'text',\n            label: 'Domain',\n            condition: {\n                when: 'google-account-type',\n                is: 'domain'\n            },\n            isRequired: true,\n            validate: [\n                {\n                    type: validatorTypes.REQUIRED,\n                },\n            ],\n        }\n    ]\n};\n","import React from 'react';\nimport { TextContent, Text, TextVariants, TextList, TextListItem, TextListVariants, TextListItemVariants } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { releaseValues } from '../steps/imageOutput';\nimport { registerValues } from '../steps/registration';\nimport { googleAccType } from '../steps/googleCloud';\n\nconst ReviewStep = () => {\n    const { getState } = useFormApi();\n    return (\n        <TextContent>\n            <Text component={ TextVariants.small }>\n                    Review the information and click the Create button\n                    to create your image using the following criteria.\n            </Text>\n            <Text component={ TextVariants.h3 }>Image output</Text>\n            <TextList component={ TextListVariants.dl } data-testid='review-image-output'>\n                <TextListItem component={ TextListItemVariants.dt }>Release</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                    {releaseValues?.[getState()?.values?.release]}\n                </TextListItem>\n            </TextList>\n            <Text component={ TextVariants.h3 }>Target environment</Text>\n            {getState()?.values?.['aws-account-id'] && <>\n                <Text id=\"destination-header\">Amazon Web Services</Text>\n                <TextList component={ TextListVariants.dl } data-testid='review-image-upload-aws'>\n                    <TextListItem component={ TextListItemVariants.dt }>Account ID</TextListItem>\n                    <TextListItem component={ TextListItemVariants.dd }>{getState()?.values?.['aws-account-id']}</TextListItem>\n                </TextList>\n            </>}\n            {getState()?.values?.['google-account-type'] && <>\n                <Text id=\"destination-header\">Google Cloud Platform</Text>\n                <TextList component={ TextListVariants.dl } data-testid='review-image-upload-google'>\n                    <TextListItem component={ TextListItemVariants.dt }>{\n                        googleAccType?.[getState()?.values?.['google-account-type']]\n                    }</TextListItem>\n                    <TextListItem component={ TextListItemVariants.dd }>\n                        {getState()?.values?.['google-email'] || getState()?.values?.['google-domain']}\n                    </TextListItem>\n                </TextList>\n            </>}\n            <Text component={ TextVariants.h3 }>Registration</Text>\n            <TextList component={ TextListVariants.dl } data-testid='review-image-registration'>\n                <TextListItem component={ TextListItemVariants.dt }>Subscription</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd }>\n                    {getState()?.values?.['register-system'] === 'subscribe-now-radio' ?\n                        'Register the system on first boot' :\n                    registerValues?.[getState()?.values?.['register-system']?.title]\n                    }\n                </TextListItem>\n                <TextListItem component={ TextListItemVariants.dt }>Activation key</TextListItem>\n                <TextListItem component={ TextListItemVariants.dd } type=\"password\">\n                    {'*'.repeat(getState()?.values?.['subscription-activation']?.length)}\n                </TextListItem>\n            </TextList>\n        </TextContent>\n    );\n};\n\nexport default ReviewStep;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { FormGroup, Tile } from '@patternfly/react-core';\nimport './TargetEnvironment.scss';\n\nconst TargetEnvironment = ({ label, isRequired, ...props }) => {\n    const { getState, change } = useFormApi();\n    const { input } = useFieldApi({ label, isRequired, ...props });\n    const [ environemt, setEnvironment ] = useState({\n        aws: false,\n        azure: false,\n        google: false,\n    });\n\n    useEffect(() => {\n        if (getState()?.values?.[input.name]) {\n            setEnvironment(getState().values[input.name]);\n        }\n    }, []);\n\n    return <FormGroup isRequired={ isRequired } label={ label } data-testid=\"target-select\">\n        <div className=\"tiles\">\n            <Tile\n                className=\"tile pf-u-mr-sm\"\n                data-testid=\"upload-aws\"\n                title=\"Amazon Web Services\"\n                icon={ <img\n                    className='provider-icon'\n                    src={ '/apps/frontend-assets/partners-icons/aws.svg' } /> }\n                onClick={ () => setEnvironment((prevEnv) => {\n                    const newEnv = ({\n                        ...prevEnv,\n                        aws: !prevEnv.aws\n                    });\n                    change(input.name, newEnv);\n                    return newEnv;\n                }) }\n                isSelected={ environemt.aws }\n                isStacked\n                isDisplayLarge />\n            <Tile\n                className=\"tile pf-u-mr-sm\"\n                data-testid=\"upload-google\"\n                title=\"Google Cloud Platform\"\n                icon={ <img\n                    className='provider-icon'\n                    src={ '/apps/frontend-assets/partners-icons/google-cloud-short.svg' } /> }\n                onClick={ () => setEnvironment((prevEnv) => {\n                    const newEnv = ({\n                        ...prevEnv,\n                        google: !prevEnv.google\n                    });\n                    change(input.name, newEnv);\n                    return newEnv;\n                }) }\n                isSelected={ environemt.google }\n                isStacked\n                isDisplayLarge />\n            <Tile\n                className=\"tile pf-u-mr-sm\"\n                data-testid=\"upload-azure\"\n                title=\"Microsoft Azure\"\n                icon={ <img\n                    className='provider-icon'\n                    src={ '/apps/frontend-assets/partners-icons/microsoft-azure-short.svg' } /> }\n                onClick={ () => setEnvironment((prevEnv) => {\n                    const newEnv = ({\n                        ...prevEnv,\n                        azure: !prevEnv.azure\n                    });\n                    input.value = newEnv;\n                    change(input.name, newEnv);\n                    return newEnv;\n                }) }\n                isSelected={ environemt.azure }\n                isStacked\n                isDisplayLarge />\n        </div>\n    </FormGroup>;\n};\n\nTargetEnvironment.propTypes = {\n    label: PropTypes.node,\n    isRequired: PropTypes.bool\n};\n\nTargetEnvironment.defaultProps = {\n    label: '',\n    isRequired: false\n};\n\nexport default TargetEnvironment;\n","import React, { useState, useRef, useEffect } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { DualListSelector, Button, TextContent } from '@patternfly/react-core';\nimport api from '../../../api';\nimport PropTypes from 'prop-types';\n\nconst mapPackagesToComponent = (packages) => packages.map((pack, key) => (\n    <TextContent key={ `${pack.name}-${key}` }>\n        <span className=\"pf-c-dual-list-selector__item-text\">{ pack.name }</span>\n        <small>{ pack.summary }</small>\n    </TextContent>\n));\n\nconst mapComponentToPackage = (component) => ({\n    name: component.props.children[0].props.children,\n    summary: component.props.children[1].props.children\n});\n\nconst Packages = ({ defaultArch, ...props }) => {\n    const { change, getState } = useFormApi();\n    const { input } = useFieldApi(props);\n    const packagesSearchName = useRef();\n    const [ packagesAvailable, setPackagesAvailable ] = useState([]);\n    const [ packagesSelected, setPackagesSelected ] = useState([]);\n    const [ filterSelected, setFilterSelected ] = useState('');\n\n    useEffect(() => {\n        setPackagesSelected(mapPackagesToComponent(getState()?.values?.[input.name] || []));\n    }, []);\n\n    const packageListChange = (newAvailablePackages, newChosenPackages) => {\n        const chosenPkgs = newChosenPackages.map(mapComponentToPackage);\n        setPackagesAvailable(newAvailablePackages);\n        setPackagesSelected(newChosenPackages);\n        change(input.name, chosenPkgs);\n    };\n\n    const handlePackagesSearch = async () => {\n        const { data } = await api.getPackages(\n            getState()?.values?.release,\n            getState()?.values?.architecture || defaultArch,\n            packagesSearchName.current\n        );\n        setPackagesAvailable(mapPackagesToComponent(data || []));\n    };\n\n    return <DualListSelector\n        className=\"pf-u-mt-sm\"\n        isSearchable\n        availableOptionsActions={ [\n            <Button\n                aria-label=\"Search button for available packages\"\n                key=\"availableSearchButton\"\n                data-testid=\"search-pkgs-button\"\n                onClick={ handlePackagesSearch }>\n                Search\n            </Button>\n        ] }\n        availableOptions={ packagesAvailable }\n        availableOptionsTitle=\"Available packages\"\n        chosenOptions={ packagesSelected.filter((item) => mapComponentToPackage(item)?.name?.includes(filterSelected)) }\n        chosenOptionsTitle=\"Chosen packages\"\n        addSelected={ packageListChange }\n        removeSelected={ packageListChange }\n        addAll={ packageListChange }\n        removeAll= { (newAvailablePackages) => packageListChange(\n            newAvailablePackages,\n            packagesSelected.filter((item) => !mapComponentToPackage(item)?.name?.includes(filterSelected))\n        ) }\n        onAvailableOptionsSearchInputChanged={ (val) => {\n            packagesSearchName.current = val;\n        } }\n        onChosenOptionsSearchInputChanged={ (val) => setFilterSelected(val) }\n        filterOption={ () => true }\n        id=\"basicSelectorWithSearch\" />;\n};\n\nPackages.propTypes = {\n    defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","import React, { useRef } from 'react';\nimport Radio from '@data-driven-forms/pf4-component-mapper/radio';\nimport PropTypes from 'prop-types';\n\nconst RadioWithPopover = ({ Popover, ...props }) => {\n    const ref = useRef();\n    return <Radio { ...props } label={ <span ref={ ref } className=\"ins-c-image--builder__popover\">{props.label}\n        <Popover />\n    </span> } />;\n};\n\nRadioWithPopover.propTypes = {\n    Popover: PropTypes.elementType.isRequired,\n    label: PropTypes.node\n};\n\nexport default RadioWithPopover;\n","import React from 'react';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Review from './formComponents/ReviewStep';\nimport TargetEnvironment from './formComponents/TargetEnvironment';\nimport Packages from './formComponents/Packages';\nimport RadioWithPopover from './formComponents/RadioWithPopover';\nimport Select from '@data-driven-forms/pf4-component-mapper/select';\n\nconst ImageCreator = ({ schema, onSubmit, onClose, customComponentMapper, defaultArch, className, ...props }) => {\n    return schema ? <FormRenderer\n        schema={ schema }\n        className={ `image-builder${className ? ` ${className}` : ''}` }\n        subscription={ { values: true } }\n        FormTemplate={ (props) => <Pf4FormTemplate { ...props } showFormControls={ false } /> }\n        onSubmit={ (formValues) => onSubmit(formValues) }\n        componentMapper={ {\n            ...componentMapper,\n            review: Review,\n            output: TargetEnvironment,\n            select: Select,\n            'package-selector': {\n                component: Packages,\n                defaultArch\n            },\n            'radio-popover': RadioWithPopover,\n            ...customComponentMapper\n        } }\n        onCancel={ onClose }\n        { ...props } /> : <Spinner />;\n};\n\nImageCreator.propTypes = {\n    schema: PropTypes.object,\n    onSubmit: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    customComponentMapper: PropTypes.shape({\n        [PropTypes.string]: PropTypes.oneOfType([ PropTypes.node, PropTypes.shape({\n            component: PropTypes.node\n        }) ])\n    }),\n    defaultArch: PropTypes.string,\n    className: PropTypes.string\n};\n\nexport default ImageCreator;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport nextStepMapper from './imageOutputStepMapper';\nimport { Title } from '@patternfly/react-core';\n\nexport default {\n    title: 'Amazon Web Services',\n    customTitle: <Title headingLevel=\"h1\" size=\"xl\">Target Environment - Amazon Web Service</Title>,\n    name: 'aws-target-env',\n    substepOf: 'Target environment',\n    nextStep: ({ values }) => nextStepMapper(values, { skipAws: true }),\n    fields: [\n        {\n            component: componentTypes.PLAIN_TEXT,\n            name: 'plain-text-component',\n            label: <p>\n            Your image will be uploaded to a temporary account on Amazon Web Services. <br />\n            The image will be shared with the account you provide below. <br />\n            Within the next 14 days you will need to copy the shared image to your own account.\n            After 14 days it will be unavailable and will have to be regenerated.\n            </p>\n        },\n        {\n            component: componentTypes.TEXT_FIELD,\n            name: 'aws-account-id',\n            'data-testid': 'aws-account-id',\n            type: 'text',\n            label: 'AWS account ID',\n            isRequired: true,\n            validate: [\n                {\n                    type: validatorTypes.REQUIRED,\n                },\n                {\n                    type: validatorTypes.EXACT_LENGTH,\n                    threshold: 12\n                }\n            ],\n        }\n    ]\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Title, Text, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport nextStepMapper from './imageOutputStepMapper';\n\nexport default {\n    title: 'Microsoft Azure',\n    customTitle: <Title headingLevel=\"h1\" size=\"xl\">Target Environment - Microsoft Azure</Title>,\n    name: 'ms-azure-target-env',\n    substepOf: 'Target environment',\n    nextStep: ({ values }) => nextStepMapper(values, { skipAws: true, skipGoogle: true, skipAzure: true }),\n    fields: [\n        {\n            component: componentTypes.PLAIN_TEXT,\n            name: 'azure-text-component',\n            label: <>\n                <Text>\n            Image Builder will send an image to an authorized Azure account.\n                </Text>\n                <Title headingLevel=\"h3\">OAuth permissions</Title>\n                <Text>\n            To authorize Image Builder to push images to Microsoft Azure, the account owner\n            must configure Image Builder as an authorized application and give it the role of\n            &quot;Contributor&quot; to at least one resource group.<br />\n                </Text>\n                <small>\n                    <Button\n                        component=\"a\"\n                        target=\"_blank\"\n                        variant=\"link\"\n                        icon={ <ExternalLinkAltIcon /> }\n                        iconPosition=\"right\"\n                        isInline\n                        href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow\">\n                      Learn more about OAuth 2.0\n                    </Button>\n                </small>\n                <a href=\"https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=b94bb246-b02c-4985-9c22-d44e66f657f4\n&scope=openid&response_type=code&response_mode=form_post\n&redirect_uri=https%3A%2F%2Flogin.microsoftonline.com%2Fcommon%2Foauth2%2Fnativeclient\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Authorize Image Builder on Azure <ExternalLinkAltIcon />\n                </a>\n                <Title headingLevel=\"h3\">Destination</Title>\n                <Text>\n                    Your image will be uploaded to the resource group in the subscription you specify.\n                </Text>\n            </>\n        },\n        {\n            component: componentTypes.TEXT_FIELD,\n            name: 'azure-tenant-id',\n            'data-testid': 'azure-tenant-id',\n            type: 'text',\n            label: 'Tenant ID',\n            required: true,\n            isRequired: true,\n            validate: [\n                {\n                    type: validatorTypes.REQUIRED,\n                },\n            ],\n        },\n        {\n            component: componentTypes.TEXT_FIELD,\n            name: 'azure-subscription-id',\n            'data-testid': 'azure-subscription-id',\n            type: 'text',\n            label: 'Subscription ID',\n            isRequired: true,\n            validate: [\n                {\n                    type: validatorTypes.REQUIRED,\n                },\n            ],\n        },\n        {\n            component: componentTypes.TEXT_FIELD,\n            name: 'azure-resource-group',\n            'data-testid': 'azure-resource-group',\n            type: 'text',\n            label: 'Resource group',\n            isRequired: true,\n            validate: [\n                {\n                    type: validatorTypes.REQUIRED,\n                },\n            ],\n        }\n        // TODO check oauth2 thing too here?\n    ]\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\n\nexport default {\n    title: 'Packages',\n    name: 'packages',\n    nextStep: 'review',\n    fields: [\n        {\n            component: componentTypes.PLAIN_TEXT,\n            name: 'google-cloud-text-component',\n            label: <Text>Add optional additional packages to your image by searching available packages.</Text>\n        },\n        {\n            component: 'package-selector',\n            name: 'selected-packages',\n            label: 'Available options'\n        }\n    ]\n};\n","import React, { useContext, useState } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport PropTypes from 'prop-types';\n\nconst CustomButtons = ({ buttonLabels: { cancel, submit, back }}) => {\n    const [ isSaving, setIsSaving ] = useState(false);\n    const { handlePrev, formOptions } = useContext(WizardContext);\n    return <FormSpy>\n        {() => (\n            <React.Fragment>\n                <Button\n                    variant=\"primary\"\n                    type=\"button\"\n                    isDisabled={ !formOptions.valid || formOptions.getState().validating || isSaving }\n                    onClick={ () => {\n                        formOptions.onSubmit({\n                            values: formOptions.getState().values,\n                            setIsSaving\n                        });\n                    } }>\n                    {submit}\n                </Button>\n                <Button type=\"button\" variant=\"secondary\" onClick={ handlePrev } isDisabled={ isSaving }>\n                    {back}\n                </Button>\n                <div className=\"pf-c-wizard__footer-cancel\">\n                    <Button type=\"button\" variant=\"link\" onClick={ formOptions.onCancel } isDisabled={ isSaving }>\n                        {cancel}\n                    </Button>\n                </div>\n            </React.Fragment>\n        )}\n    </FormSpy>;\n};\n\nCustomButtons.propTypes = {\n    buttonLabels: PropTypes.shape({\n        cancel: PropTypes.node,\n        submit: PropTypes.node,\n        back: PropTypes.node,\n    }),\n    isSaving: PropTypes.bool\n};\n\nexport default CustomButtons;\n","import CustomButtons from '../formComponents/CustomSubmitButtons';\n\nexport default {\n    name: 'review',\n    title: 'Review',\n    buttons: CustomButtons,\n    fields: [\n        {\n            name: 'review',\n            component: 'review'\n        }\n    ]\n};\n","import React, { useState, useEffect } from 'react';\nimport ImageCreator from './ImageCreator';\nimport { useHistory } from 'react-router-dom';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Button, Spinner } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { review, awsTarget, registration, googleCloudTarger, msAzureTarget, packages, imageOutput } from './steps';\nimport './CreateImageWizard.scss';\nimport { useDispatch } from 'react-redux';\nimport api from '../../api';\nimport { composeAdded } from '../../store/actions/actions';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst onSave = (values) => {\n    let customizations = {\n        packages: values['selected-packages']?.map(p => p.name),\n    };\n\n    if (values['subscription-activation']) {\n        customizations.subscription = {\n            'activation-key': values['subscription-activation'],\n            insights: true,\n            organization: Number(values['subscription-organization']),\n            'server-url': 'subscription.rhsm.redhat.com',\n            'base-url': 'https://cdn.redhat.com/',\n        };\n    }\n\n    let requests = [];\n    if (values['target-environment']?.aws) {\n        let request = {\n            distribution: values.release,\n            image_requests: [\n                {\n                    architecture: 'x86_64',\n                    image_type: 'ami',\n                    upload_request: {\n                        type: 'aws',\n                        options: {\n                            share_with_accounts: [ values['aws-account-id'] ],\n                        },\n                    },\n                }],\n            customizations,\n        };\n        requests.push(request);\n    }\n\n    if (values['target-environment']?.google) {\n        let share = '';\n        switch (values['google-account-type']) {\n            case 'googleAccount':\n                share = `user:${values['google-email']}`;\n                break;\n            case 'serviceAccount':\n                share = `serviceAccount:${values['google-email']}`;\n                break;\n            case 'googleGroup':\n                share = `group:${values['google-email']}`;\n                break;\n            case 'domain':\n                share = `domain:${values['google-domain']}`;\n                break;\n        }\n\n        let request = {\n            distribution: values.release,\n            image_requests: [\n                {\n                    architecture: 'x86_64',\n                    image_type: 'vhd',\n                    upload_request: {\n                        type: 'gcp',\n                        options: {\n                            share_with_accounts: [ share ],\n                        },\n                    },\n                }],\n            customizations,\n        };\n\n        requests.push(request);\n    }\n\n    if (values['target-environment']?.azure) {\n        let request = {\n            distribution: values.release,\n            image_requests: [\n                {\n                    architecture: 'x86_64',\n                    image_type: 'vhd',\n                    upload_request: {\n                        type: 'azure',\n                        options: {\n                            tenant_id: values['azure-tenant-id'],\n                            subscription_id: values['azure-subscription-id'],\n                            resource_group: values['azure-resource-group'],\n                        },\n                    },\n                }],\n            customizations,\n        };\n        requests.push(request);\n    }\n\n    return requests;\n};\n\nconst CreateImageWizard = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [ user, setUser ] = useState();\n    useEffect(() => {\n        (async () => {\n            const userData = await insights?.chrome?.auth?.getUser() || {};\n            setUser(() => userData);\n        })();\n    }, []);\n    return user ? <ImageCreator\n        onClose={ () => history.push('/landing') }\n        onSubmit={ ({ values, setIsSaving }) => {\n            setIsSaving(() => true);\n            const requests = onSave(values);\n            Promise.all(requests.map(request => api.composeImage(request).then((response) => {\n                dispatch(composeAdded({\n                    ...response,\n                    request,\n                    image_status: { status: 'pending' }\n                }));\n            })))\n                .then(() => {\n                    history.push('/landing');\n                    dispatch(addNotification({\n                        variant: 'success',\n                        title: 'Your image is being created',\n                    }));\n\n                    setIsSaving(false);\n                });\n        } }\n        defaultArch=\"x86_64\"\n        schema={ {\n            fields: [\n                {\n                    component: componentTypes.WIZARD,\n                    name: 'image-builder-wizard',\n                    className: 'image-builder',\n                    isDynamic: true,\n                    inModal: true,\n                    buttonLabels: {\n                        submit: 'Create',\n                    },\n                    showTitles: true,\n                    title: 'Create image',\n                    crossroads: [ 'target-environment', 'release' ],\n                    description: <div>Create a RHEL image and push it to cloud providers. <Button\n                        component=\"a\"\n                        target=\"_blank\"\n                        variant=\"link\"\n                        icon={ <ExternalLinkAltIcon /> }\n                        iconPosition=\"right\"\n                        isInline\n                        href=\"\nhttps://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/uploading_a_customized_rhel_system_image_to_cloud_environments/index\n            \">\n                Documentation\n                    </Button></div>,\n                    // order in this array does not reflect order in wizard nav, this order is managed inside\n                    // of each step by `nextStep` property!\n                    fields: [\n                        imageOutput,\n                        awsTarget,\n                        googleCloudTarger,\n                        msAzureTarget,\n                        registration(user),\n                        packages,\n                        review,\n                    ]\n                }\n            ]\n        } } /> : <Spinner />;\n};\n\nexport default CreateImageWizard;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".image-builder .pf-c-wizard__nav-list,body .pf-c-wizard__nav-list{padding-right:0px}.image-builder .pf-c-popover[data-popper-reference-hidden=true],body .pf-c-popover[data-popper-reference-hidden=true]{font-weight:initial;visibility:initial;pointer-events:initial}.image-builder .pf-c-dual-list-selector__menu,body .pf-c-dual-list-selector__menu{--pf-c-dual-list-selector__menu--MinHeight: 18rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/CreateImageWizard/CreateImageWizard.scss\"],\"names\":[],\"mappings\":\"AACA,kEAAA,iBAAA,CAAA,sHAAA,mBAAA,CAAA,kBAAA,CAAA,sBAAA,CAAA,kFAAA,iDAAA\",\"sourcesContent\":[\".image-builder, body{\\n.pf-c-wizard__nav-list{padding-right:0px}.pf-c-popover[data-popper-reference-hidden=true]{font-weight:initial;visibility:initial;pointer-events:initial}.pf-c-dual-list-selector__menu{--pf-c-dual-list-selector__menu--MinHeight: 18rem}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".image-builder .tiles,body .tiles{display:flex}.image-builder .tile,body .tile{flex:1 0 0px}.image-builder .pf-c-tile:focus,body .pf-c-tile:focus{--pf-c-tile__title--Color: var(--pf-c-tile__title--Color);--pf-c-tile__icon--Color: var(---pf-global--Color--100);--pf-c-tile--before--BorderWidth: var(--pf-global--BorderWidth--sm);--pf-c-tile--before--BorderColor: var(--pf-global--BorderColor--100)}.image-builder .pf-c-tile.pf-m-selected:focus,body .pf-c-tile.pf-m-selected:focus{--pf-c-tile__title--Color: var(--pf-c-tile--focus__title--Color);--pf-c-tile__icon--Color: var(--pf-c-tile--focus__icon--Color);--pf-c-tile--before--BorderWidth: var(--pf-c-tile--focus--before--BorderWidth);--pf-c-tile--before--BorderColor: var(--pf-c-tile--focus--before--BorderColor)}.image-builder .provider-icon,body .provider-icon{width:1em;height:1em}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/CreateImageWizard/formComponents/TargetEnvironment.scss\"],\"names\":[],\"mappings\":\"AACA,kCAAA,YAAA,CAAA,gCAAA,YAAA,CAAA,sDAAA,yDAAA,CAAA,uDAAA,CAAA,mEAAA,CAAA,oEAAA,CAAA,kFAAA,gEAAA,CAAA,8DAAA,CAAA,8EAAA,CAAA,8EAAA,CAAA,kDAAA,SAAA,CAAA,UAAA\",\"sourcesContent\":[\".image-builder, body{\\n.tiles{display:flex}.tile{flex:1 0 0px}.pf-c-tile:focus{--pf-c-tile__title--Color: var(--pf-c-tile__title--Color);--pf-c-tile__icon--Color: var(---pf-global--Color--100);--pf-c-tile--before--BorderWidth: var(--pf-global--BorderWidth--sm);--pf-c-tile--before--BorderColor: var(--pf-global--BorderColor--100)}.pf-c-tile.pf-m-selected:focus{--pf-c-tile__title--Color: var(--pf-c-tile--focus__title--Color);--pf-c-tile__icon--Color: var(--pf-c-tile--focus__icon--Color);--pf-c-tile--before--BorderWidth: var(--pf-c-tile--focus--before--BorderWidth);--pf-c-tile--before--BorderColor: var(--pf-c-tile--focus--before--BorderColor)}.provider-icon{width:1em;height:1em}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./CreateImageWizard.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./TargetEnvironment.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./TargetEnvironment.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}