{"version":3,"file":"js/16.1669997328303.7af7ed15c485095c6c4c.js","mappings":"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","sources":["webpack:///./src/Components/CreateImageWizard/formComponents/ActivationKeys.js","webpack:///./src/Components/CreateImageWizard/formComponents/AzureAuthButton.js","webpack:///./src/Components/CreateImageWizard/formComponents/CentOSAcknowledgement.js","webpack:///./src/Components/CreateImageWizard/formComponents/FileSystemConfigToggle.js","webpack:///./src/Components/CreateImageWizard/formComponents/MountPoint.js","webpack:///./src/Components/CreateImageWizard/formComponents/SizeUnit.js","webpack:///./src/Components/CreateImageWizard/formComponents/FileSystemConfiguration.js","webpack:///./src/Utilities/isRhel.js","webpack:///./src/Components/CreateImageWizard/formComponents/ImageOutputReleaseSelect.js","webpack:///./src/Components/CreateImageWizard/formComponents/Packages.js","webpack:///./src/Components/CreateImageWizard/formComponents/RadioWithPopover.js","webpack:///./src/Components/CreateImageWizard/formComponents/ActivationKeyInformation.js","webpack:///./src/Components/CreateImageWizard/steps/imageOutputStepMapper.js","webpack:///./src/Components/CreateImageWizard/steps/stepTemplate.js","webpack:///./src/Components/CreateImageWizard/formComponents/CustomButtons.js","webpack:///./src/Components/CreateImageWizard/steps/googleCloud.js","webpack:///./src/Components/CreateImageWizard/formComponents/ReviewStep.js","webpack:///./src/Components/CreateImageWizard/formComponents/TargetEnvironment.js","webpack:///./src/Components/CreateImageWizard/ImageCreator.js","webpack:///./src/Components/CreateImageWizard/steps/aws.js","webpack:///./src/Components/CreateImageWizard/steps/msAzure.js","webpack:///./src/Components/CreateImageWizard/steps/packages.js","webpack:///./src/Components/CreateImageWizard/steps/registration.js","webpack:///./src/Components/CreateImageWizard/steps/review.js","webpack:///./src/Components/CreateImageWizard/steps/imageOutput.js","webpack:///./src/Components/CreateImageWizard/formComponents/FileSystemConfigButtons.js","webpack:///./src/Components/CreateImageWizard/steps/fileSystemConfiguration.js","webpack:///./src/Components/CreateImageWizard/steps/imageName.js","webpack:///./src/Components/CreateImageWizard/validators/fileSystemConfigurationValidator.js","webpack:///./src/Components/CreateImageWizard/validators/targetEnvironmentValidator.js","webpack:///./src/Components/CreateImageWizard/CreateImageWizard.js","webpack:///./src/Components/sharedComponents/DocumentationButton.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport api from '../../../api';\n\nconst ActivationKeys = ({ label, isRequired, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [activationKeys, setActivationKeys] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [activationKeySelected, selectActivationKey] = useState(\n    getState()?.values?.['subscription-activation-key']\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    const data = api.getActivationKeys();\n    data.then((keys) => {\n      setActivationKeys(keys);\n      setIsLoading(false);\n    });\n\n    if (insights.chrome.isProd()) {\n      change('subscription-server-url', 'subscription.rhsm.redhat.com');\n      change('subscription-base-url', 'https://cdn.redhat.com/');\n    } else {\n      change('subscription-server-url', 'subscription.rhsm.stage.redhat.com');\n      change('subscription-base-url', 'https://cdn.stage.redhat.com/');\n    }\n  }, []);\n\n  const setActivationKey = (_, selection) => {\n    selectActivationKey(selection);\n    setIsOpen(false);\n    change(input.name, selection);\n  };\n\n  const handleClear = () => {\n    selectActivationKey();\n    change(input.name, undefined);\n  };\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={label}\n      data-testid=\"subscription-activation-key\"\n    >\n      <Select\n        variant={SelectVariant.typeahead}\n        onToggle={() => setIsOpen(!isOpen)}\n        onSelect={setActivationKey}\n        onClear={handleClear}\n        selections={activationKeySelected}\n        isOpen={isOpen}\n        placeholderText=\"Select activation key\"\n        typeAheadAriaLabel=\"Select activation key\"\n      >\n        {isLoading && (\n          <SelectOption\n            isNoResultsOption={true}\n            data-testid=\"activation-keys-loading\"\n          >\n            <Spinner isSVG size=\"lg\" />\n          </SelectOption>\n        )}\n        {activationKeys.map((key, index) => (\n          <SelectOption key={index} value={key.name} />\n        ))}\n      </Select>\n    </FormGroup>\n  );\n};\n\nActivationKeys.propTypes = {\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n};\n\nActivationKeys.defaultProps = {\n  label: '',\n  isRequired: false,\n};\n\nexport default ActivationKeys;\n","import React from 'react';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { Button, FormGroup } from '@patternfly/react-core';\n\nconst AzureAuthButton = () => {\n  const { getState } = useFormApi();\n\n  const tenantId = getState()?.values?.['azure-tenant-id'];\n  const guidRegex = new RegExp(\n    '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$',\n    'i'\n  );\n\n  return (\n    <FormGroup>\n      <Button\n        component=\"a\"\n        target=\"_blank\"\n        variant=\"secondary\"\n        isDisabled={!guidRegex.test(tenantId)}\n        href={\n          'https://login.microsoftonline.com/' +\n          tenantId +\n          '/oauth2/v2.0/authorize?client_id=b94bb246-b02c-4985-9c22-d44e66f657f4&scope=openid&' +\n          'response_type=code&response_mode=query&redirect_uri=https://portal.azure.com'\n        }\n      >\n        Authorize Image Builder\n      </Button>\n    </FormGroup>\n  );\n};\n\nexport default AzureAuthButton;\n","import React from 'react';\n\nimport { Alert, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst DeveloperProgramButton = () => {\n  return (\n    <Button\n      component=\"a\"\n      target=\"_blank\"\n      variant=\"link\"\n      icon={<ExternalLinkAltIcon />}\n      iconPosition=\"right\"\n      isInline\n      href={'https://developers.redhat.com/about'}\n    >\n      Red Hat Developer Program\n    </Button>\n  );\n};\n\nconst CentOSAcknowledgement = () => {\n  return (\n    <Alert\n      variant=\"info\"\n      isPlain\n      isInline\n      title={\n        <>\n          CentOS Stream builds are intended for the development of future\n          versions of RHEL and are not supported for production workloads or\n          other use cases.\n        </>\n      }\n    >\n      <p>\n        Join the <DeveloperProgramButton /> to learn about paid and no-cost RHEL\n        subscription options.\n      </p>\n    </Alert>\n  );\n};\n\nexport default CentOSAcknowledgement;\n","import React, { useEffect, useState } from 'react';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { ToggleGroup, ToggleGroupItem } from '@patternfly/react-core';\n\nconst FileSystemConfigToggle = ({ ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [selected, setSelected] = useState(\n    getState()?.values?.['file-system-config-toggle'] || 'auto'\n  );\n\n  useEffect(() => {\n    change(input.name, selected);\n  }, [selected]);\n\n  const onClick = (_, evt) => {\n    setSelected(evt.currentTarget.id);\n  };\n\n  return (\n    <>\n      <ToggleGroup\n        data-testid=\"fsc-paritioning-toggle\"\n        aria-label=\"Automatic partitioning toggle\"\n      >\n        <ToggleGroupItem\n          onChange={onClick}\n          text=\"Use automatic partitioning\"\n          buttonId=\"auto\"\n          isSelected={selected === 'auto'}\n        />\n        <ToggleGroupItem\n          onChange={onClick}\n          text=\"Manually configure partitions\"\n          buttonId=\"manual\"\n          isSelected={selected === 'manual'}\n          data-testid=\"file-system-config-toggle-manual\"\n        />\n      </ToggleGroup>\n    </>\n  );\n};\n\nexport default FileSystemConfigToggle;\n","import React, { useEffect, useState } from 'react';\n\nimport path from 'path';\n\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst MountPoint = ({ ...props }) => {\n  // check '/' last!\n  const validPrefixes = [\n    '/app',\n    '/boot',\n    '/data',\n    '/home',\n    '/opt',\n    '/srv',\n    '/tmp',\n    '/usr',\n    '/usr/local',\n    '/var',\n    '/',\n  ];\n  const [isOpen, setIsOpen] = useState(false);\n  const [prefix, setPrefix] = useState('/');\n  const [suffix, setSuffix] = useState('');\n\n  // split\n  useEffect(() => {\n    for (let p of validPrefixes) {\n      if (props.mountpoint.startsWith(p)) {\n        setPrefix(p);\n        setSuffix(props.mountpoint.substring(p.length));\n        return;\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    let suf = suffix;\n    let mp = prefix;\n    if (suf) {\n      if (mp !== '/' && suf[0] !== '/') {\n        suf = '/' + suf;\n      }\n\n      mp += suf;\n    }\n\n    props.onChange(path.normalize(mp));\n  }, [prefix, suffix]);\n\n  const onToggle = (isOpen) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect = (event, selection) => {\n    setPrefix(selection);\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <Select\n        className=\"pf-u-w-50\"\n        isOpen={isOpen}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        selections={prefix}\n        variant={SelectVariant.single}\n      >\n        {validPrefixes.map((pfx, index) => {\n          return <SelectOption key={index} value={pfx} />;\n        })}\n      </Select>\n      {prefix !== '/' && (\n        <TextInput\n          className=\"pf-u-w-50\"\n          type=\"text\"\n          value={suffix}\n          aria-label=\"Mount point suffix text input\"\n          onChange={(v) => setSuffix(v)}\n        />\n      )}\n    </>\n  );\n};\n\nMountPoint.propTypes = {\n  mountpoint: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default MountPoint;\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  Select,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { UNIT_GIB, UNIT_KIB, UNIT_MIB } from '../../../constants';\n\nconst SizeUnit = ({ ...props }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [unit, setUnit] = useState(props.unit || UNIT_GIB);\n  const [size, setSize] = useState(props.size || 1);\n\n  useEffect(() => {\n    props.onChange(size, unit);\n  }, [unit, size]);\n\n  const onToggle = (isOpen) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect = (event, selection) => {\n    switch (selection) {\n      case 'KiB':\n        setUnit(UNIT_KIB);\n        break;\n      case 'MiB':\n        setUnit(UNIT_MIB);\n        break;\n      case 'GiB':\n        setUnit(UNIT_GIB);\n        break;\n    }\n\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <TextInput\n        className=\"pf-u-w-50\"\n        type=\"text\"\n        value={size}\n        aria-label=\"Size text input\"\n        onChange={(v) => setSize(isNaN(parseInt(v)) ? 0 : parseInt(v))}\n      />\n      <Select\n        className=\"pf-u-w-50\"\n        isOpen={isOpen}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        selections={\n          unit === UNIT_KIB ? 'KiB' : unit === UNIT_MIB ? 'MiB' : 'GiB'\n        }\n        variant={SelectVariant.single}\n        aria-label=\"Unit select\"\n      >\n        {['KiB', 'MiB', 'GiB'].map((u, index) => {\n          return <SelectOption key={index} value={u} />;\n        })}\n      </Select>\n    </>\n  );\n};\n\nSizeUnit.propTypes = {\n  size: PropTypes.number.isRequired,\n  unit: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SizeUnit;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  Alert,\n  Button,\n  Popover,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  HelpIcon,\n  MinusCircleIcon,\n  PlusCircleIcon,\n} from '@patternfly/react-icons';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport MountPoint from './MountPoint';\nimport SizeUnit from './SizeUnit';\n\nimport { UNIT_GIB } from '../../../constants';\n\nlet initialRow = {\n  id: uuidv4(),\n  mountpoint: '/',\n  fstype: 'xfs',\n  size: 10,\n  unit: UNIT_GIB,\n};\n\nconst FileSystemConfiguration = ({ ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [draggedItemId, setDraggedItemId] = useState(null);\n  const [draggingToItemIndex, setDraggingToItemIndex] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [itemOrder, setItemOrder] = useState([initialRow.id]);\n  const [tempItemOrder, setTempItemOrder] = useState([]);\n  const bodyref = useRef();\n  const [rows, setRows] = useState([initialRow]);\n\n  useEffect(() => {\n    const fsc = getState()?.values?.['file-system-configuration'];\n    if (!fsc) {\n      return;\n    }\n\n    const newRows = [];\n    const newOrder = [];\n    fsc.map((r) => {\n      const id = uuidv4();\n      newRows.push({\n        id,\n        mountpoint: r.mountpoint,\n        fstype: 'xfs',\n        size: r.size,\n        unit: r.unit,\n      });\n      newOrder.push(id);\n    });\n    setRows(newRows);\n    setItemOrder(newOrder);\n  }, []);\n\n  const showErrors = () =>\n    getState()?.values?.['file-system-config-show-errors'];\n\n  useEffect(() => {\n    change(\n      input.name,\n      itemOrder.map((r) => {\n        for (const r2 of rows) {\n          if (r2.id === r) {\n            return {\n              mountpoint: r2.mountpoint,\n              size: r2.size,\n              unit: r2.unit,\n            };\n          }\n        }\n      })\n    );\n  }, [rows, itemOrder]);\n\n  const addRow = () => {\n    const id = uuidv4();\n    setRows(\n      rows.concat([\n        {\n          id,\n          mountpoint: '/home',\n          fstype: 'xfs',\n          size: 1,\n          unit: UNIT_GIB,\n        },\n      ])\n    );\n    setItemOrder(itemOrder.concat([id]));\n  };\n\n  const removeRow = (id) => {\n    let removeIndex = rows.map((e) => e.id).indexOf(id);\n    let newRows = [...rows];\n    newRows.splice(removeIndex, 1);\n\n    let removeOrderIndex = itemOrder.indexOf(id);\n    let newOrder = [...itemOrder];\n    newOrder.splice(removeOrderIndex, 1);\n\n    setRows(newRows);\n    setItemOrder(newOrder);\n  };\n\n  const moveItem = (arr, i1, toIndex) => {\n    const fromIndex = arr.indexOf(i1);\n    if (fromIndex === toIndex) {\n      return arr;\n    }\n\n    const temp = arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, temp[0]);\n    return arr;\n  };\n\n  const move = (itemOrder) => {\n    const ulNode = bodyref.current;\n    const nodes = Array.from(ulNode.children);\n    if (nodes.map((node) => node.id).every((id, i) => id === itemOrder[i])) {\n      return;\n    }\n\n    while (ulNode.firstChild) {\n      ulNode.removeChild(ulNode.lastChild);\n    }\n\n    itemOrder.forEach((id) => {\n      ulNode.appendChild(nodes.find((n) => n.id === id));\n    });\n  };\n\n  const onDragOver = (evt) => {\n    evt.preventDefault();\n\n    const curListItem = evt.target.closest('tr');\n    if (!curListItem || !bodyref.current.contains(curListItem)) {\n      return null;\n    }\n\n    const dragId = curListItem.id;\n    const newDraggingToItemIndex = Array.from(\n      bodyref.current.children\n    ).findIndex((item) => item.id === dragId);\n    if (newDraggingToItemIndex !== draggingToItemIndex) {\n      const tempItemOrder = moveItem(\n        [...itemOrder],\n        draggedItemId,\n        newDraggingToItemIndex\n      );\n      move(tempItemOrder);\n      setDraggingToItemIndex(newDraggingToItemIndex);\n      setTempItemOrder(tempItemOrder);\n    }\n  };\n\n  const isValidDrop = (evt) => {\n    const ulRect = bodyref.current.getBoundingClientRect();\n    return (\n      evt.clientX > ulRect.x &&\n      evt.clientX < ulRect.x + ulRect.width &&\n      evt.clientY > ulRect.y &&\n      evt.clientY < ulRect.y + ulRect.height\n    );\n  };\n\n  const onDragLeave = (evt) => {\n    if (!isValidDrop(evt)) {\n      move(itemOrder);\n      setDraggingToItemIndex(null);\n    }\n  };\n\n  const onDrop = (evt) => {\n    if (isValidDrop(evt)) {\n      setItemOrder(tempItemOrder);\n    }\n  };\n\n  const onDragStart = (evt) => {\n    evt.dataTransfer.effectAllowed = 'move';\n    evt.dataTransfer.setData('text/plain', evt.currentTarget.id);\n    evt.currentTarget.classList.add(styles.modifiers.ghostRow);\n    evt.currentTarget.setAttribute('aria-pressed', 'true');\n    setDraggedItemId(evt.currentTarget.id);\n    setIsDragging(true);\n  };\n\n  const onDragEnd = (evt) => {\n    evt.target.classList.remove(styles.modifiers.ghostRow);\n    evt.target.setAttribute('aria-pressed', 'false');\n    setDraggedItemId(null);\n    setDraggingToItemIndex(null);\n    setIsDragging(false);\n  };\n\n  const setMountpoint = (id, mp) => {\n    let newRows = [...rows];\n    for (let i = 0; i < newRows.length; i++) {\n      if (newRows[i].id === id) {\n        let newRow = { ...newRows[i] };\n        newRow.mountpoint = mp;\n        newRows.splice(i, 1, newRow);\n        break;\n      }\n    }\n\n    setRows(newRows);\n  };\n\n  const setSize = (id, s, u) => {\n    let newRows = [...rows];\n    for (let i = 0; i < newRows.length; i++) {\n      if (newRows[i].id === id) {\n        let newRow = { ...newRows[i] };\n        newRow.size = s;\n        newRow.unit = u;\n        newRows.splice(i, 1, newRow);\n        break;\n      }\n    }\n\n    setRows(newRows);\n  };\n\n  return (\n    <FormSpy>\n      {() => (\n        <>\n          <TextContent>\n            <Text component={TextVariants.h3}>Configure partitions</Text>\n          </TextContent>\n          {rows.length > 1 &&\n            getState()?.errors?.['file-system-configuration']?.duplicates\n              ?.length !== 0 &&\n            showErrors() && (\n              <Alert\n                variant=\"danger\"\n                isInline\n                title=\"Duplicate mount points: All mount points must be unique. Remove the duplicate or choose a new mount point.\"\n                data-testid=\"fsc-warning\"\n              />\n            )}\n          {rows.length >= 1 &&\n            getState()?.errors?.['file-system-configuration']?.root === false &&\n            showErrors() && (\n              <Alert\n                variant=\"danger\"\n                isInline\n                title=\"No root partition configured.\"\n              />\n            )}\n          <TextContent>\n            <Text>\n              Partitions have been generated and given default values based on\n              best practices from Red Hat, and your selections in previous steps\n              of the wizard.\n            </Text>\n          </TextContent>\n          <TableComposable\n            aria-label=\"File system table\"\n            className={isDragging && styles.modifiers.dragOver}\n            variant=\"compact\"\n          >\n            <Thead>\n              <Tr>\n                <Th />\n                <Th>Mount point</Th>\n                <Th>Type</Th>\n                <Th>\n                  Minimum size\n                  <Popover\n                    hasAutoWidth\n                    bodyContent={\n                      <TextContent>\n                        <Text>\n                          Image Builder may extend this size based on\n                          requirements, selected packages, and configurations.\n                        </Text>\n                      </TextContent>\n                    }\n                  >\n                    <Button\n                      variant=\"plain\"\n                      aria-label=\"File system configuration info\"\n                      aria-describedby=\"file-system-configuration-info\"\n                      className=\"pf-c-form__group-label-help\"\n                    >\n                      <HelpIcon />\n                    </Button>\n                  </Popover>\n                </Th>\n                <Th />\n              </Tr>\n            </Thead>\n            <Tbody\n              ref={bodyref}\n              onDragOver={onDragOver}\n              onDrop={onDragOver}\n              onDragLeave={onDragLeave}\n              data-testid=\"file-system-configuration-tbody\"\n            >\n              {rows.map((row, rowIndex) => (\n                <Tr\n                  key={rowIndex}\n                  id={row.id}\n                  draggable\n                  onDrop={onDrop}\n                  onDragEnd={onDragEnd}\n                  onDragStart={onDragStart}\n                >\n                  <Td\n                    draggableRow={{\n                      id: `draggable-row-${row.id}`,\n                    }}\n                  />\n                  <Td className=\"pf-m-width-30\">\n                    <MountPoint\n                      key={row.id + '-mountpoint'}\n                      mountpoint={row.mountpoint}\n                      onChange={(mp) => setMountpoint(row.id, mp)}\n                    />\n                    {getState().errors['file-system-configuration']?.duplicates\n                      .length !== 0 &&\n                      getState().errors[\n                        'file-system-configuration'\n                      ]?.duplicates.indexOf(row.mountpoint) !== -1 &&\n                      showErrors() && (\n                        <Alert\n                          variant=\"danger\"\n                          isInline\n                          isPlain\n                          title=\"Duplicate mount point.\"\n                        />\n                      )}\n                  </Td>\n                  <Td className=\"pf-m-width-20\">\n                    {/* always xfs */}\n                    {row.fstype}\n                  </Td>\n                  <Td className=\"pf-m-width-30\">\n                    <SizeUnit\n                      key={row.id + '-sizeunit'}\n                      size={row.size}\n                      unit={row.unit}\n                      onChange={(s, u) => setSize(row.id, s, u)}\n                    />\n                  </Td>\n                  <Td className=\"pf-m-width-10\">\n                    <Button\n                      variant=\"link\"\n                      icon={<MinusCircleIcon />}\n                      onClick={() => removeRow(row.id)}\n                      data-testid=\"remove-mount-point\"\n                    />\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </TableComposable>\n          <TextContent>\n            <Button\n              data-testid=\"file-system-add-partition\"\n              className=\"pf-u-text-align-left\"\n              variant=\"link\"\n              icon={<PlusCircleIcon />}\n              onClick={addRow}\n            >\n              Add partition\n            </Button>\n          </TextContent>\n        </>\n      )}\n    </FormSpy>\n  );\n};\n\nexport default FileSystemConfiguration;\n","import { RHEL_8, RHEL_9 } from '../constants';\n\nfunction isRhel(distro) {\n  switch (distro) {\n    case RHEL_8:\n    case RHEL_9:\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport default isRhel;\n","import React, { useState } from 'react';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { RELEASES } from '../../../constants';\nimport isRhel from '../../../Utilities/isRhel';\n\nconst ImageOutputReleaseSelect = ({ label, isRequired, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [isOpen, setIsOpen] = useState(false);\n  const [showDevelopmentOptions, setShowDevelopmentOptions] = useState(false);\n\n  const setRelease = (_, selection) => {\n    change(input.name, selection);\n    setIsOpen(false);\n  };\n\n  const handleClear = () => {\n    change(input.name, null);\n    setShowDevelopmentOptions(false);\n  };\n\n  const handleExpand = () => {\n    setShowDevelopmentOptions(true);\n  };\n\n  return (\n    <FormGroup isRequired={isRequired} label={label}>\n      <Select\n        variant={SelectVariant.single}\n        onToggle={() => setIsOpen(!isOpen)}\n        onSelect={setRelease}\n        onClear={handleClear}\n        selections={RELEASES[getState()?.values?.[input.name]]}\n        isOpen={isOpen}\n        {...(!showDevelopmentOptions && {\n          loadingVariant: {\n            text: 'Show options for further development of RHEL',\n            onClick: handleExpand,\n          },\n        })}\n      >\n        {Object.entries(RELEASES)\n          .filter(([key]) => {\n            // Only show non-RHEL distros if expanded\n            if (showDevelopmentOptions) {\n              return true;\n            }\n\n            return isRhel(key);\n          })\n          .map(([key, release], index) => {\n            return (\n              <SelectOption key={index} value={key}>\n                {release}\n              </SelectOption>\n            );\n          })}\n      </Select>\n    </FormGroup>\n  );\n};\n\nImageOutputReleaseSelect.propTypes = {\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n};\n\nexport default ImageOutputReleaseSelect;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  DualListSelector,\n  DualListSelectorControl,\n  DualListSelectorControlsWrapper,\n  DualListSelectorList,\n  DualListSelectorListItem,\n  DualListSelectorPane,\n  SearchInput,\n  TextContent,\n} from '@patternfly/react-core';\nimport {\n  AngleDoubleLeftIcon,\n  AngleDoubleRightIcon,\n  AngleLeftIcon,\n  AngleRightIcon,\n} from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\n\nimport api from '../../../api';\n\n// the fields isHidden and isSelected should not be included in the package list sent for image creation\nconst removePackagesDisplayFields = (packages) =>\n  packages.map((pack) => ({\n    name: pack.name,\n    summary: pack.summary,\n  }));\n\nconst Packages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [packagesSearchName, setPackagesSearchName] = useState(undefined);\n  const [filterAvailable, setFilterAvailable] = useState(undefined);\n  const [filterChosen, setFilterChosen] = useState(undefined);\n  const [packagesAvailable, setPackagesAvailable] = useState([]);\n  const [packagesAvailableFound, setPackagesAvailableFound] = useState(true);\n  const [packagesChosen, setPackagesChosen] = useState([]);\n  const [packagesChosenFound, setPackagesChosenFound] = useState(true);\n  const [focus, setFocus] = useState('');\n\n  // this effect only triggers on mount\n  useEffect(() => {\n    const selectedPackages = getState()?.values?.['selected-packages'];\n    if (selectedPackages) {\n      setPackagesChosen(selectedPackages);\n    }\n  }, []);\n\n  const searchResultsComparator = useCallback((searchTerm) => {\n    return (a, b) => {\n      a = a.name.toLowerCase();\n      b = b.name.toLowerCase();\n\n      // check exact match first\n      if (a === searchTerm) {\n        return -1;\n      }\n\n      if (b === searchTerm) {\n        return 1;\n      }\n\n      // check for packages that start with the search term\n      if (a.startsWith(searchTerm) && !b.startsWith(searchTerm)) {\n        return -1;\n      }\n\n      if (b.startsWith(searchTerm) && !a.startsWith(searchTerm)) {\n        return 1;\n      }\n\n      // if both (or neither) start with the search term\n      // sort alphabetically\n      if (a < b) {\n        return -1;\n      }\n\n      if (b < a) {\n        return 1;\n      }\n\n      return 0;\n    };\n  });\n\n  const setPackagesAvailableSorted = (\n    packageList,\n    filter = filterAvailable\n  ) => {\n    const sortResults = packageList.sort(searchResultsComparator(filter));\n    setPackagesAvailable(sortResults);\n  };\n\n  const setPackagesChosenSorted = (packageList) => {\n    const sortResults = packageList.sort(searchResultsComparator(filterChosen));\n    setPackagesChosen(sortResults);\n  };\n\n  // filter the packages by name\n  const filterPackagesAvailable = (packageList) => {\n    return packageList.filter((availablePackage) => {\n      // returns true if no packages in the available or chosen list have the same name\n      return !packagesChosen.some(\n        (chosenPackage) => availablePackage.name === chosenPackage.name\n      );\n    });\n  };\n\n  const getAllPackages = async () => {\n    // if the env is stage beta then use content-sources api\n    // else use image-builder api\n    if (!insights.chrome.isProd() && insights.chrome.isBeta()) {\n      const args = [getState()?.values?.release, packagesSearchName];\n      return await api.getPackagesContentSources(...args);\n    } else {\n      const args = [\n        getState()?.values?.release,\n        getState()?.values?.architecture || defaultArch,\n        packagesSearchName,\n      ];\n      let { data, meta } = await api.getPackages(...args);\n      if (data?.length === meta.count) {\n        return data;\n      } else if (data) {\n        ({ data } = await api.getPackages(...args, meta.count));\n        return data;\n      }\n    }\n  };\n\n  // call api to list available packages\n  const handlePackagesAvailableSearch = async () => {\n    setFilterAvailable(packagesSearchName);\n\n    const packageList = await getAllPackages();\n    if (packageList) {\n      const packagesAvailableFiltered = filterPackagesAvailable(packageList);\n      setPackagesAvailableSorted(packagesAvailableFiltered, packagesSearchName);\n      setPackagesAvailableFound(\n        packagesAvailableFiltered.length ? true : false\n      );\n    } else {\n      setPackagesAvailable([]);\n      setPackagesAvailableFound(false);\n    }\n  };\n\n  // filter displayed selected packages\n  const handlePackagesChosenSearch = (val) => {\n    let found = false;\n    const filteredPackagesChosen = packagesChosen.map((pack) => {\n      if (!pack.name.includes(val)) {\n        pack.isHidden = true;\n      } else {\n        pack.isHidden = false;\n        found = true;\n      }\n\n      return pack;\n    });\n\n    setFilterChosen(val);\n    setPackagesChosenFound(found);\n    setPackagesChosenSorted(filteredPackagesChosen);\n  };\n\n  const keydownHandler = (event) => {\n    if (event.key === 'Enter') {\n      if (focus === 'available') {\n        event.stopPropagation();\n        handlePackagesAvailableSearch();\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', keydownHandler, true);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler, true);\n    };\n  });\n\n  const areFound = (filter, packageList) => {\n    if (filter === undefined) {\n      return true;\n    } else if (packageList.some((pack) => pack.name.includes(filter))) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const isHidden = (filter, pack) =>\n    filter && !pack.name.includes(filter) ? true : false;\n\n  const updateState = (updatedPackagesAvailable, updatedPackagesChosen) => {\n    setPackagesChosenSorted(updatedPackagesChosen);\n    setPackagesAvailableSorted(updatedPackagesAvailable);\n    setPackagesAvailableFound(\n      areFound(filterAvailable, updatedPackagesAvailable)\n    );\n    setPackagesChosenFound(areFound(filterChosen, updatedPackagesChosen));\n    // set the steps field to the current chosen packages list\n    change(input.name, removePackagesDisplayFields(updatedPackagesChosen));\n  };\n\n  const moveSelectedToChosen = () => {\n    const newPackagesChosen = [];\n\n    const updatedPackagesAvailable = packagesAvailable.filter((pack) => {\n      if (pack.selected) {\n        pack.selected = false;\n        pack.isHidden = isHidden(filterChosen, pack);\n        newPackagesChosen.push(pack);\n        return false;\n      }\n\n      return true;\n    });\n\n    const updatedPackagesChosen = [...newPackagesChosen, ...packagesChosen];\n\n    updateState(updatedPackagesAvailable, updatedPackagesChosen);\n  };\n\n  const moveSelectedToAvailable = () => {\n    const newPackagesAvailable = [];\n\n    const updatedPackagesChosen = packagesChosen.filter((pack) => {\n      if (pack.selected) {\n        pack.selected = false;\n        pack.isHidden = false;\n        pack.name.includes(filterAvailable)\n          ? newPackagesAvailable.push(pack)\n          : null;\n        return false;\n      }\n\n      return true;\n    });\n\n    const updatedPackagesAvailable = [\n      ...newPackagesAvailable,\n      ...packagesAvailable,\n    ];\n\n    updateState(updatedPackagesAvailable, updatedPackagesChosen);\n  };\n\n  const moveAllToChosen = () => {\n    const newPackagesChosen = packagesAvailable.map((pack) => {\n      return {\n        ...pack,\n        selected: false,\n        isHidden: isHidden(filterChosen, pack),\n      };\n    });\n\n    const updatedPackagesAvailable = [];\n    const updatedPackagesChosen = [...newPackagesChosen, ...packagesChosen];\n\n    updateState(updatedPackagesAvailable, updatedPackagesChosen);\n  };\n\n  const moveAllToAvailable = () => {\n    const updatedPackagesChosen = packagesChosen.filter(\n      (pack) => pack.isHidden\n    );\n\n    const newPackagesAvailable =\n      filterAvailable === undefined\n        ? []\n        : packagesChosen\n            .filter(\n              (pack) => !pack.isHidden && pack.name.includes(filterAvailable)\n            )\n            .map((pack) => {\n              return { ...pack, selected: false };\n            });\n\n    const updatedPackagesAvailable = [\n      ...newPackagesAvailable,\n      ...packagesAvailable,\n    ];\n\n    updateState(updatedPackagesAvailable, updatedPackagesChosen);\n  };\n\n  const onOptionSelect = (event, index, isChosen) => {\n    if (isChosen) {\n      const newChosen = [...packagesChosen];\n      newChosen[index].selected = !packagesChosen[index].selected;\n      setPackagesChosenSorted(newChosen);\n    } else {\n      const newAvailable = [...packagesAvailable];\n      newAvailable[index].selected = !packagesAvailable[index].selected;\n      setPackagesAvailableSorted(newAvailable);\n    }\n  };\n\n  const firstInputElement = useRef(null);\n\n  useEffect(() => {\n    firstInputElement.current?.focus();\n  }, []);\n\n  const handleClearAvailableSearch = () => {\n    setPackagesSearchName(undefined);\n    setFilterAvailable(undefined);\n    setPackagesAvailable([]);\n    setPackagesAvailableFound(true);\n  };\n\n  const handleClearChosenSearch = () => {\n    setFilterChosen(undefined);\n    setPackagesChosenSorted(\n      packagesChosen.map((pack) => {\n        return { ...pack, isHidden: false };\n      })\n    );\n    setPackagesChosenFound(true);\n  };\n\n  return (\n    <DualListSelector>\n      <DualListSelectorPane\n        title=\"Available packages\"\n        searchInput={\n          <SearchInput\n            placeholder=\"Search for a package\"\n            data-testid=\"search-available-pkgs-input\"\n            value={packagesSearchName}\n            ref={firstInputElement}\n            onFocus={() => setFocus('available')}\n            onBlur={() => setFocus('')}\n            onChange={(val) => setPackagesSearchName(val)}\n            submitSearchButtonLabel=\"Search button for available packages\"\n            onSearch={handlePackagesAvailableSearch}\n            resetButtonLabel=\"Clear available packages search\"\n            onClear={handleClearAvailableSearch}\n          />\n        }\n      >\n        <DualListSelectorList data-testid=\"available-pkgs-list\">\n          {!packagesAvailable.length ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              {!packagesAvailableFound ? (\n                'No packages found'\n              ) : (\n                <>\n                  Search above to add additional\n                  <br />\n                  packages to your image\n                </>\n              )}\n            </p>\n          ) : (\n            packagesAvailable.map((pack, index) => {\n              return !pack.isHidden ? (\n                <DualListSelectorListItem\n                  key={index}\n                  isSelected={pack.selected}\n                  onOptionSelect={(e) => onOptionSelect(e, index, false)}\n                >\n                  <TextContent key={`${pack.name}-${index}`}>\n                    <span className=\"pf-c-dual-list-selector__item-text\">\n                      {pack.name}\n                    </span>\n                    <small>{pack.summary}</small>\n                  </TextContent>\n                </DualListSelectorListItem>\n              ) : null;\n            })\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n      <DualListSelectorControlsWrapper aria-label=\"Selector controls\">\n        <DualListSelectorControl\n          isDisabled={!packagesAvailable.some((option) => option.selected)}\n          onClick={() => moveSelectedToChosen()}\n          aria-label=\"Add selected\"\n          tooltipContent=\"Add selected\"\n        >\n          <AngleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={!packagesAvailable.length}\n          onClick={() => moveAllToChosen()}\n          aria-label=\"Add all\"\n          tooltipContent=\"Add all\"\n        >\n          <AngleDoubleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={!packagesChosen.length || !packagesChosenFound}\n          onClick={() => moveAllToAvailable()}\n          aria-label=\"Remove all\"\n          tooltipContent=\"Remove all\"\n        >\n          <AngleDoubleLeftIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          onClick={() => moveSelectedToAvailable()}\n          isDisabled={\n            !packagesChosen.some((option) => option.selected) ||\n            !packagesChosenFound\n          }\n          aria-label=\"Remove selected\"\n          tooltipContent=\"Remove selected\"\n        >\n          <AngleLeftIcon />\n        </DualListSelectorControl>\n      </DualListSelectorControlsWrapper>\n      <DualListSelectorPane\n        title=\"Chosen packages\"\n        searchInput={\n          <SearchInput\n            placeholder=\"Search for a package\"\n            data-testid=\"search-chosen-pkgs-input\"\n            value={filterChosen}\n            onFocus={() => setFocus('chosen')}\n            onBlur={() => setFocus('')}\n            onChange={(val) => handlePackagesChosenSearch(val)}\n            resetButtonLabel=\"Clear chosen packages search\"\n            onClear={handleClearChosenSearch}\n          />\n        }\n        isChosen\n      >\n        <DualListSelectorList data-testid=\"chosen-pkgs-list\">\n          {!packagesChosen.length ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              No packages added\n            </p>\n          ) : !packagesChosenFound ? (\n            <p className=\"pf-u-text-align-center pf-u-mt-md\">\n              No packages found\n            </p>\n          ) : (\n            packagesChosen.map((pack, index) => {\n              return !pack.isHidden ? (\n                <DualListSelectorListItem\n                  key={index}\n                  isSelected={pack.selected}\n                  onOptionSelect={(e) => onOptionSelect(e, index, true)}\n                >\n                  <TextContent key={`${pack.name}-${index}`}>\n                    <span className=\"pf-c-dual-list-selector__item-text\">\n                      {pack.name}\n                    </span>\n                    <small>{pack.summary}</small>\n                  </TextContent>\n                </DualListSelectorListItem>\n              ) : null;\n            })\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n    </DualListSelector>\n  );\n};\n\nPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","import React, { useRef } from 'react';\n\nimport Radio from '@data-driven-forms/pf4-component-mapper/radio';\nimport PropTypes from 'prop-types';\n\nconst RadioWithPopover = ({ Popover, ...props }) => {\n  const ref = useRef();\n  return (\n    <Radio\n      {...props}\n      label={\n        <span ref={ref} className=\"ins-c-image--builder__popover\">\n          {props.label}\n          <Popover />\n        </span>\n      }\n    />\n  );\n};\n\nRadioWithPopover.propTypes = {\n  Popover: PropTypes.elementType.isRequired,\n  label: PropTypes.node,\n};\n\nexport default RadioWithPopover;\n","import React, { useEffect, useState } from 'react';\n\nimport { useFormApi } from '@data-driven-forms/react-form-renderer';\nimport {\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { Button, Popover } from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\n\nimport api from '../../../api';\n\nconst ActivationKeyInformation = () => {\n  const { getState } = useFormApi();\n\n  const activationKey = getState()?.values?.['subscription-activation-key'];\n  const [role, setRole] = useState(undefined);\n  const [serviceLevel, setServiceLevel] = useState(undefined);\n  const [usage, setUsage] = useState(undefined);\n  const [additionalRepositories, setRepositories] = useState(undefined);\n\n  useEffect(() => {\n    const fetchKeyInformation = async () => {\n      const data = await api.getActivationKey(activationKey);\n      setRole(data?.role);\n      setServiceLevel(data?.serviceLevel);\n      setUsage(data?.usage);\n      setRepositories(data?.additionalRepositories);\n    };\n    fetchKeyInformation();\n  }, []);\n\n  return (\n    <>\n      <TextContent>\n        <TextList component={TextListVariants.dl}>\n          <TextListItem component={TextListItemVariants.dt}>Name:</TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {activationKey}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>Role:</TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {role || 'Not defined'}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>SLA:</TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {serviceLevel || 'Not defined'}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>\n            Usage:\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {usage || 'Not defined'}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>\n            Additional <br /> repositories:\n            <Popover\n              bodyContent={\n                <TextContent>\n                  <Text>\n                    The core repositories for your operating system version are\n                    always enabled and do not need to be explicitly added to the\n                    activation key.\n                  </Text>\n                </TextContent>\n              }\n            >\n              <Button\n                variant=\"plain\"\n                aria-label=\"About additional repositories\"\n                className=\"pf-u-pl-sm pf-u-pt-0 pf-u-pb-0\"\n                isSmall\n              >\n                <HelpIcon />\n              </Button>\n            </Popover>\n          </TextListItem>\n          <TextListItem\n            component={TextListItemVariants.dd}\n            className=\"pf-u-display-flex pf-u-align-items-flex-end\"\n          >\n            {additionalRepositories?.length > 0 ? (\n              <Popover\n                bodyContent={\n                  <TextContent>\n                    <Text component={TextVariants.h3}>\n                      Additional repositories\n                    </Text>\n                    <TableComposable\n                      aria-label=\"Additional repositories table\"\n                      variant=\"compact\"\n                    >\n                      <Thead>\n                        <Tr>\n                          <Th>Name</Th>\n                        </Tr>\n                      </Thead>\n                      <Tbody data-testid=\"additional-repositories-table\">\n                        {additionalRepositories?.map((repo, index) => (\n                          <Tr key={index}>\n                            <Td>{repo.repositoryLabel}</Td>\n                          </Tr>\n                        ))}\n                      </Tbody>\n                    </TableComposable>\n                  </TextContent>\n                }\n              >\n                <Button\n                  data-testid=\"repositories-popover-button\"\n                  variant=\"link\"\n                  aria-label=\"Show additional repositories\"\n                  className=\"pf-u-pl-0 pf-u-pt-0 pf-u-pb-0\"\n                >\n                  {additionalRepositories?.length} repositories\n                </Button>\n              </Popover>\n            ) : (\n              'None'\n            )}\n          </TextListItem>\n        </TextList>\n      </TextContent>\n    </>\n  );\n};\n\nexport default ActivationKeyInformation;\n","import isRhel from '../../../Utilities/isRhel.js';\n\nexport default (\n  { 'target-environment': targetEnv, release } = {},\n  { skipAws, skipGoogle, skipAzure } = {}\n) => {\n  if (!skipAws && targetEnv?.aws) {\n    return 'aws-target-env';\n  }\n\n  if (!skipGoogle && targetEnv?.gcp) {\n    return 'google-cloud-target-env';\n  }\n\n  if (!skipAzure && targetEnv?.azure) {\n    return 'ms-azure-target-env';\n  }\n\n  return isRhel(release) ? 'registration' : 'File system configuration';\n};\n","import React from 'react';\n\nimport { Title } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst StepTemplate = ({\n  id,\n  formFields,\n  formRef,\n  title,\n  customTitle,\n  showTitle,\n  showTitles,\n}) => (\n  <div id={id} ref={formRef} className=\"pf-c-form\">\n    {((showTitles && showTitle !== false) || showTitle) &&\n      (customTitle ? (\n        customTitle\n      ) : (\n        <Title headingLevel=\"h1\" size=\"xl\">\n          {title}\n        </Title>\n      ))}\n    {formFields}\n  </div>\n);\n\nStepTemplate.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.node,\n  customTitle: PropTypes.node,\n  formFields: PropTypes.array.isRequired,\n  formOptions: PropTypes.shape({\n    renderForm: PropTypes.func.isRequired,\n  }).isRequired,\n  showTitles: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  formRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n};\n\nexport default StepTemplate;\n","import React, { useContext, useState } from 'react';\n\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport { Button } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst CustomButtons = ({\n  buttonLabels: { cancel, next, submit, back },\n  handleNext,\n  handlePrev,\n  nextStep,\n}) => {\n  const [isSaving, setIsSaving] = useState(false);\n  const { currentStep, formOptions } = useContext(WizardContext);\n\n  const onNextOrSubmit = () => {\n    if (currentStep.id === 'wizard-review') {\n      formOptions.onSubmit({\n        values: formOptions.getState().values,\n        setIsSaving,\n      });\n    } else {\n      if (typeof nextStep === 'function') {\n        handleNext(nextStep({ values: formOptions.getState().values }));\n      } else {\n        handleNext(nextStep);\n      }\n    }\n  };\n\n  return (\n    <FormSpy>\n      {() => (\n        <React.Fragment>\n          <Button\n            id={`${currentStep.id}-next-button`}\n            variant=\"primary\"\n            type=\"button\"\n            isDisabled={\n              !formOptions.valid ||\n              formOptions.getState().validating ||\n              isSaving\n            }\n            isLoading={currentStep.id === 'wizard-review' ? isSaving : null}\n            onClick={onNextOrSubmit}\n          >\n            {currentStep.id === 'wizard-review'\n              ? isSaving\n                ? 'Creating image'\n                : submit\n              : next}\n          </Button>\n          <Button\n            id={`${currentStep.id}-previous-button`}\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={handlePrev}\n            isDisabled={isSaving}\n          >\n            {back}\n          </Button>\n          <div className=\"pf-c-wizard__footer-cancel\">\n            <Button\n              id={`${currentStep.id}-cancel-button`}\n              type=\"button\"\n              variant=\"link\"\n              onClick={formOptions.onCancel}\n              isDisabled={isSaving}\n            >\n              {cancel}\n            </Button>\n          </div>\n        </React.Fragment>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  buttonLabels: PropTypes.shape({\n    cancel: PropTypes.node,\n    submit: PropTypes.node,\n    back: PropTypes.node,\n    next: PropTypes.node,\n  }),\n  handleNext: PropTypes.func,\n  handlePrev: PropTypes.func,\n  nextStep: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  isSaving: PropTypes.bool,\n};\n\nexport default CustomButtons;\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  Button,\n  Popover,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  Title,\n} from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\n\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\n\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport const googleAccType = {\n  googleAccount: 'Google account',\n  serviceAccount: 'Service account',\n  googleGroup: 'Google group',\n  domain: 'Domain',\n};\n\nconst PopoverInfo = ({ appendTo }) => {\n  return (\n    <Popover\n      appendTo={appendTo}\n      hasAutoWidth\n      maxWidth=\"35rem\"\n      headerContent={'Valid account types'}\n      flipBehavior={['right', 'bottom', 'top', 'left']}\n      bodyContent={\n        <TextContent>\n          <Text>\n            The following account types can have an image shared with them:\n          </Text>\n          <TextList className=\"pf-u-ml-0\">\n            <TextListItem>\n              <strong>Google account:</strong> A Google account represents a\n              developer, an administrator, or any other person who interacts\n              with Google Cloud. For example: <em>`alice@gmail.com`</em>.\n            </TextListItem>\n            <TextListItem>\n              <strong>Service account:</strong> A service account is an account\n              for an application instead of an individual end user. For example:{' '}\n              <em>`myapp@appspot.gserviceaccount.com`</em>.\n            </TextListItem>\n            <TextListItem>\n              <strong>Google group:</strong> A Google group is a named\n              collection of Google accounts and service accounts. For example:{' '}\n              <em>`admins@example.com`</em>.\n            </TextListItem>\n            <TextListItem>\n              <strong>Google Workspace domain or Cloud Identity domain:</strong>{' '}\n              A Google workspace or cloud identity domain represents a virtual\n              group of all the Google accounts in an organization. These domains\n              represent your organization&apos;s internet domain name. For\n              example: <em>`mycompany.com`</em>.\n            </TextListItem>\n          </TextList>\n        </TextContent>\n      }\n    >\n      <Button\n        variant=\"plain\"\n        aria-label=\"Account info\"\n        aria-describedby=\"google-account-type\"\n        className=\"pf-c-form__group-label-help\"\n      >\n        <HelpIcon />\n      </Button>\n    </Popover>\n  );\n};\n\nPopoverInfo.propTypes = {\n  appendTo: PropTypes.any,\n};\n\nexport default {\n  StepTemplate,\n  id: 'wizard-target-gcp',\n  title: 'Google Cloud Platform',\n  customTitle: (\n    <Title headingLevel=\"h1\" size=\"xl\">\n      Target environment - Google Cloud Platform\n    </Title>\n  ),\n  name: 'google-cloud-target-env',\n  substepOf: 'Target environment',\n  nextStep: ({ values }) =>\n    nextStepMapper(values, { skipGoogle: true, skipAws: true }),\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: (\n        <Text>\n          Your image will be uploaded to Google Cloud Platform and shared with\n          the account you provide below. <br />\n          The shared image will expire within 14 days. To keep the image longer,\n          copy it to your Google Cloud Platform account.\n        </Text>\n      ),\n    },\n    {\n      component: 'radio-popover',\n      label: 'Type',\n      isRequired: true,\n      Popover: PopoverInfo,\n      name: 'google-account-type',\n      initialValue: 'googleAccount',\n      options: Object.entries(googleAccType).map(([value, label]) => ({\n        label:\n          value === 'domain'\n            ? 'Google Workspace domain or Cloud Identity domain'\n            : label,\n        value,\n        autoFocus: value === 'googleAccount' ? true : false,\n      })),\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'google-email',\n      'data-testid': 'input-google-email',\n      type: 'text',\n      label: 'Email address',\n      condition: {\n        or: [\n          { when: 'google-account-type', is: 'googleAccount' },\n          { when: 'google-account-type', is: 'serviceAccount' },\n          { when: 'google-account-type', is: 'googleGroup' },\n          { when: 'google-account-type', is: null },\n        ],\n      },\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: '^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,}$',\n          message: 'Please enter a valid email address',\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'google-domain',\n      type: 'text',\n      label: 'Domain',\n      condition: {\n        when: 'google-account-type',\n        is: 'domain',\n      },\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n  ],\n};\n","import React, { useEffect, useState } from 'react';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  Button,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  List,\n  ListItem,\n  Popover,\n  Spinner,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\n\nimport ActivationKeyInformation from './ActivationKeyInformation';\n\nimport { RELEASES, UNIT_GIB, UNIT_MIB } from '../../../constants';\nimport isRhel from '../../../Utilities/isRhel';\nimport { googleAccType } from '../steps/googleCloud';\n\nconst FSReviewTable = ({ ...props }) => {\n  return (\n    <TableComposable\n      aria-label=\"File system configuration table\"\n      variant=\"compact\"\n    >\n      <Thead>\n        <Tr>\n          <Th>Mount point</Th>\n          <Th>File system type</Th>\n          <Th>Minimum size</Th>\n        </Tr>\n      </Thead>\n      <Tbody data-testid=\"file-system-configuration-tbody-review\">\n        {props.fsc.map((r, ri) => (\n          <Tr key={ri}>\n            <Td className=\"pf-m-width-30\">{r.mountpoint}</Td>\n            <Td className=\"pf-m-width-30\">xfs</Td>\n            <Td className=\"pf-m-width-30\">\n              {r.size}{' '}\n              {r.unit === UNIT_GIB\n                ? 'GiB'\n                : r.unit === UNIT_MIB\n                ? 'MiB'\n                : 'KiB'}\n            </Td>\n          </Tr>\n        ))}\n      </Tbody>\n    </TableComposable>\n  );\n};\n\nFSReviewTable.propTypes = {\n  fsc: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst ReviewStep = () => {\n  const [activeTabKey, setActiveTabKey] = useState(0);\n  const [minSize, setMinSize] = useState();\n  const { change, getState } = useFormApi();\n\n  useEffect(() => {\n    const registerSystem = getState()?.values?.['register-system'];\n    if (\n      registerSystem === 'register-now' ||\n      registerSystem === 'register-now-insights'\n    ) {\n      (async () => {\n        const userData = await insights?.chrome?.auth?.getUser();\n        const id = userData?.identity?.internal?.org_id;\n        change('subscription-organization-id', id);\n      })();\n    }\n\n    if (\n      getState()?.values?.['file-system-config-toggle'] === 'manual' &&\n      getState()?.values?.['file-system-configuration']\n    ) {\n      let size = 0;\n      for (const fsc of getState().values['file-system-configuration']) {\n        size += fsc.size * fsc.unit;\n      }\n\n      size = (size / UNIT_GIB).toFixed(1);\n      if (size < 1) {\n        setMinSize(`Less than 1 GiB`);\n      } else {\n        setMinSize(`${size} GiB`);\n      }\n    }\n  });\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  return (\n    <>\n      <Text>\n        Review the information and click &quot;Create image&quot; to create the\n        image using the following criteria.\n      </Text>\n      <DescriptionList isCompact>\n        <DescriptionListGroup>\n          {getState()?.values?.['image-name'] && (\n            <>\n              <DescriptionListTerm>Image name</DescriptionListTerm>\n              <DescriptionListDescription>\n                {getState()?.values?.['image-name']}\n              </DescriptionListDescription>\n            </>\n          )}\n          <DescriptionListTerm>Release</DescriptionListTerm>\n          <DescriptionListDescription>\n            {RELEASES[getState()?.values?.release]}\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n      <Tabs\n        isFilled\n        activeKey={activeTabKey}\n        onSelect={handleTabClick}\n        className=\"pf-u-w-75\"\n      >\n        <Tab\n          eventKey={0}\n          title={<TabTitleText>Target environment</TabTitleText>}\n          data-testid=\"tab-target\"\n          autoFocus\n        >\n          <List isPlain iconSize=\"large\">\n            {getState()?.values?.['target-environment']?.aws && (\n              <ListItem\n                icon={\n                  <img\n                    className=\"provider-icon\"\n                    src=\"/apps/frontend-assets/partners-icons/aws.svg\"\n                  />\n                }\n              >\n                <TextContent>\n                  <Text component={TextVariants.h3}>Amazon Web Services</Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem\n                      component={TextListItemVariants.dt}\n                      className=\"pf-u-min-width\"\n                    >\n                      Account ID\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['aws-account-id']}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Default Region\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      us-east-1\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.gcp && (\n              <ListItem\n                className=\"pf-c-list__item pf-u-mt-md\"\n                icon={\n                  <img\n                    className=\"provider-icon\"\n                    src=\"/apps/frontend-assets/partners-icons/google-cloud-short.svg\"\n                  />\n                }\n              >\n                <TextContent>\n                  <Text component={TextVariants.h3}>Google Cloud Platform</Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      {\n                        googleAccType?.[\n                          getState()?.values?.['google-account-type']\n                        ]\n                      }\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['google-email'] ||\n                        getState()?.values?.['google-domain']}\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.azure && (\n              <ListItem\n                className=\"pf-c-list__item pf-u-mt-md\"\n                icon={\n                  <img\n                    className=\"provider-icon\"\n                    src=\"/apps/frontend-assets/partners-icons/microsoft-azure-short.svg\"\n                  />\n                }\n              >\n                <TextContent>\n                  <Text component={TextVariants.h3}>Microsoft Azure</Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Subscription ID\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['azure-subscription-id']}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Tenant ID\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['azure-tenant-id']}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      Resource group\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {getState()?.values?.['azure-resource-group']}\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.vsphere && (\n              <ListItem>\n                <TextContent>\n                  <Text component={TextVariants.h3}>VMWare</Text>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.['guest-image'] && (\n              <ListItem>\n                <TextContent>\n                  <Text component={TextVariants.h3}>\n                    Virtualization - Guest image\n                  </Text>\n                </TextContent>\n              </ListItem>\n            )}\n            {getState()?.values?.['target-environment']?.[\n              'image-installer'\n            ] && (\n              <ListItem>\n                <TextContent>\n                  <Text component={TextVariants.h3}>\n                    Bare metal - Installer\n                  </Text>\n                </TextContent>\n              </ListItem>\n            )}\n          </List>\n        </Tab>\n        {isRhel(getState()?.values?.release) && (\n          <Tab\n            eventKey={1}\n            title={<TabTitleText>Registration</TabTitleText>}\n            data-testid=\"tab-registration\"\n          >\n            {getState()?.values?.['register-system'] === 'register-later' && (\n              <TextContent>\n                <TextList component={TextListVariants.dl}>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Registration type\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    Register the system later\n                  </TextListItem>\n                </TextList>\n              </TextContent>\n            )}\n            {(getState()?.values?.['register-system'] === 'register-now' ||\n              getState()?.values?.['register-system'] ===\n                'register-now-insights') && (\n              <TextContent>\n                <TextList component={TextListVariants.dl}>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Registration type\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {getState()?.values?.['register-system'] ===\n                      'register-now-insights' &&\n                      'Register with Subscriptions and Red Hat Insights'}\n                    {getState()?.values?.['register-system'] ===\n                      'register-now' && 'Register with Subscriptions'}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Activation key\n                    <Popover\n                      bodyContent={\n                        <TextContent>\n                          <Text>\n                            Activation keys enable you to register a system with\n                            appropriate subscriptions, system purpose, and\n                            repositories attached.\n                            <br />\n                            <br />\n                            If using an activation key with command line\n                            registration, you must provide your\n                            organization&apos;s ID. Your organization&apos;s ID\n                            is{' '}\n                            {getState()?.values?.[\n                              'subscription-organization-id'\n                            ] !== undefined ? (\n                              getState()?.values?.[\n                                'subscription-organization-id'\n                              ]\n                            ) : (\n                              <Spinner size=\"md\" />\n                            )}\n                          </Text>\n                        </TextContent>\n                      }\n                    >\n                      <Button\n                        variant=\"plain\"\n                        aria-label=\"About activation key\"\n                        className=\"pf-u-pl-sm pf-u-pt-0 pf-u-pb-0\"\n                        isSmall\n                      >\n                        <HelpIcon />\n                      </Button>\n                    </Popover>\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <ActivationKeyInformation />\n                  </TextListItem>\n                </TextList>\n              </TextContent>\n            )}\n          </Tab>\n        )}\n        <Tab\n          eventKey={2}\n          title={<TabTitleText>System configuration</TabTitleText>}\n          data-testid=\"tab-system\"\n        >\n          <TextContent>\n            <Text component={TextVariants.h3}>File system configuration</Text>\n            <TextList component={TextListVariants.dl}>\n              <TextListItem component={TextListItemVariants.dt}>\n                Partitioning\n              </TextListItem>\n              <TextListItem\n                component={TextListItemVariants.dd}\n                data-testid=\"partitioning-auto-manual\"\n              >\n                {getState()?.values?.['file-system-config-toggle'] === 'manual'\n                  ? 'Manual'\n                  : 'Automatic'}\n                {getState()?.values?.['file-system-config-toggle'] ===\n                  'manual' && (\n                  <>\n                    {' '}\n                    <Popover\n                      position=\"bottom\"\n                      headerContent=\"Partitions\"\n                      hasAutoWidth\n                      minWidth=\"30rem\"\n                      bodyContent={\n                        <FSReviewTable\n                          fsc={getState().values['file-system-configuration']}\n                        />\n                      }\n                    >\n                      <Button\n                        data-testid=\"file-system-configuration-popover\"\n                        variant=\"link\"\n                        aria-label=\"File system configuration info\"\n                        aria-describedby=\"file-system-configuration-info\"\n                        className=\"pf-u-pt-0 pf-u-pb-0\"\n                      >\n                        View partitions\n                      </Button>\n                    </Popover>\n                  </>\n                )}\n              </TextListItem>\n              {getState()?.values?.['file-system-config-toggle'] ===\n                'manual' && (\n                <>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Image size (minimum)\n                    <Popover\n                      hasAutoWidth\n                      bodyContent={\n                        <TextContent>\n                          <Text>\n                            Image Builder may extend this size based on\n                            requirements, selected packages, and configurations.\n                          </Text>\n                        </TextContent>\n                      }\n                    >\n                      <Button\n                        variant=\"plain\"\n                        aria-label=\"File system configuration info\"\n                        aria-describedby=\"file-system-configuration-info\"\n                        className=\"pf-c-form__group-label-help\"\n                      >\n                        <HelpIcon />\n                      </Button>\n                    </Popover>\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {minSize}\n                  </TextListItem>\n                </>\n              )}\n            </TextList>\n            <Text component={TextVariants.h3}>Additional packages</Text>\n            <TextList component={TextListVariants.dl}>\n              <TextListItem component={TextListItemVariants.dt}>\n                Chosen\n              </TextListItem>\n              <TextListItem\n                component={TextListItemVariants.dd}\n                data-testid=\"chosen-packages-count\"\n              >\n                {getState()?.values?.['selected-packages']?.length || 0}\n              </TextListItem>\n            </TextList>\n          </TextContent>\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useEffect, useState } from 'react';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  Checkbox,\n  FormGroup,\n  Text,\n  TextVariants,\n  Tile,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst TargetEnvironment = ({ label, isRequired, ...props }) => {\n  const { getState, change } = useFormApi();\n  const { input } = useFieldApi({ label, isRequired, ...props });\n  const [environment, setEnvironment] = useState({\n    aws: false,\n    azure: false,\n    gcp: false,\n    vsphere: false,\n    'guest-image': false,\n    'image-installer': false,\n  });\n\n  useEffect(() => {\n    if (getState()?.values?.[input.name]) {\n      setEnvironment(getState().values[input.name]);\n    }\n  }, []);\n\n  const handleSetEnvironment = (env) =>\n    setEnvironment((prevEnv) => {\n      const newEnv = {\n        ...prevEnv,\n        [env]: !prevEnv[env],\n      };\n      change(input.name, newEnv);\n      return newEnv;\n    });\n\n  const handleKeyDown = (e, env) => {\n    if (e.key === ' ') {\n      handleSetEnvironment(env);\n    }\n  };\n\n  return (\n    <>\n      <FormGroup\n        isRequired={isRequired}\n        label={label}\n        data-testid=\"target-select\"\n      >\n        <FormGroup\n          label={<Text component={TextVariants.small}>Public cloud</Text>}\n          data-testid=\"target-public\"\n        >\n          <div className=\"tiles\">\n            <Tile\n              className=\"tile pf-u-mr-sm\"\n              data-testid=\"upload-aws\"\n              title=\"Amazon Web Services\"\n              icon={\n                <img\n                  className=\"provider-icon\"\n                  src={'/apps/frontend-assets/partners-icons/aws.svg'}\n                />\n              }\n              onClick={() => handleSetEnvironment('aws')}\n              onKeyDown={(e) => handleKeyDown(e, 'aws')}\n              isSelected={environment.aws}\n              isStacked\n              isDisplayLarge\n            />\n            <Tile\n              className=\"tile pf-u-mr-sm\"\n              data-testid=\"upload-google\"\n              title=\"Google Cloud Platform\"\n              icon={\n                <img\n                  className=\"provider-icon\"\n                  src={\n                    '/apps/frontend-assets/partners-icons/google-cloud-short.svg'\n                  }\n                />\n              }\n              onClick={() => handleSetEnvironment('gcp')}\n              isSelected={environment.gcp}\n              onKeyDown={(e) => handleKeyDown(e, 'gcp')}\n              isStacked\n              isDisplayLarge\n            />\n            <Tile\n              className=\"tile pf-u-mr-sm\"\n              data-testid=\"upload-azure\"\n              title=\"Microsoft Azure\"\n              icon={\n                <img\n                  className=\"provider-icon\"\n                  src={\n                    '/apps/frontend-assets/partners-icons/microsoft-azure-short.svg'\n                  }\n                />\n              }\n              onClick={() => handleSetEnvironment('azure')}\n              onKeyDown={(e) => handleKeyDown(e, 'azure')}\n              isSelected={environment.azure}\n              isStacked\n              isDisplayLarge\n            />\n          </div>\n        </FormGroup>\n        <FormGroup\n          label={<Text component={TextVariants.small}>Private cloud</Text>}\n          data-testid=\"target-private\"\n        >\n          <Checkbox\n            label=\"VMWare (.vmdk)\"\n            isChecked={environment.vsphere}\n            onChange={() => handleSetEnvironment('vsphere')}\n            aria-label=\"VMWare checkbox\"\n            id=\"checkbox-vmware\"\n            name=\"VMWare\"\n            data-testid=\"checkbox-vmware\"\n          />\n        </FormGroup>\n        <FormGroup\n          label={<Text component={TextVariants.small}>Other</Text>}\n          data-testid=\"target-other\"\n        >\n          <Checkbox\n            label=\"Virtualization - Guest image (.qcow2)\"\n            isChecked={environment['guest-image']}\n            onChange={() => handleSetEnvironment('guest-image')}\n            aria-label=\"Virtualization guest image checkbox\"\n            id=\"checkbox-guest-image\"\n            name=\"Virtualization guest image\"\n            data-testid=\"checkbox-guest-image\"\n          />\n          <Checkbox\n            label=\"Bare metal - Installer (.iso)\"\n            isChecked={environment['image-installer']}\n            onChange={() => handleSetEnvironment('image-installer')}\n            aria-label=\"Bare metal installer checkbox\"\n            id=\"checkbox-image-installer\"\n            name=\"Bare metal installer\"\n            data-testid=\"checkbox-image-installer\"\n          />\n        </FormGroup>\n      </FormGroup>\n    </>\n  );\n};\n\nTargetEnvironment.propTypes = {\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n};\n\nTargetEnvironment.defaultProps = {\n  label: '',\n  isRequired: false,\n};\n\nexport default TargetEnvironment;\n","import React from 'react';\n\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport Select from '@data-driven-forms/pf4-component-mapper/select';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport ActivationKeys from './formComponents/ActivationKeys';\nimport AzureAuthButton from './formComponents/AzureAuthButton';\nimport CentOSAcknowledgement from './formComponents/CentOSAcknowledgement';\nimport FileSystemConfigToggle from './formComponents/FileSystemConfigToggle';\nimport FileSystemConfiguration from './formComponents/FileSystemConfiguration';\nimport ImageOutputReleaseSelect from './formComponents/ImageOutputReleaseSelect';\nimport Packages from './formComponents/Packages';\nimport RadioWithPopover from './formComponents/RadioWithPopover';\nimport Review from './formComponents/ReviewStep';\nimport TargetEnvironment from './formComponents/TargetEnvironment';\n\nconst ImageCreator = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  customValidatorMapper,\n  defaultArch,\n  className,\n  ...props\n}) => {\n  return schema ? (\n    <FormRenderer\n      initialValues={props.initialValues}\n      schema={schema}\n      className={`image-builder${className ? ` ${className}` : ''}`}\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      validatorMapper={{ ...customValidatorMapper }}\n      componentMapper={{\n        ...componentMapper,\n        review: Review,\n        output: TargetEnvironment,\n        select: Select,\n        'package-selector': {\n          component: Packages,\n          defaultArch,\n        },\n        'radio-popover': RadioWithPopover,\n        'azure-auth-button': AzureAuthButton,\n        'activation-keys': ActivationKeys,\n        'file-system-config-toggle': FileSystemConfigToggle,\n        'file-system-configuration': FileSystemConfiguration,\n        'image-output-release-select': ImageOutputReleaseSelect,\n        'centos-acknowledgement': CentOSAcknowledgement,\n        ...customComponentMapper,\n      }}\n      onCancel={onClose}\n      {...props}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nImageCreator.propTypes = {\n  schema: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  customValidatorMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.func,\n  }),\n  defaultArch: PropTypes.string,\n  className: PropTypes.string,\n  initialValues: PropTypes.object,\n};\n\nexport default ImageCreator;\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { HelperText, HelperTextItem, Title } from '@patternfly/react-core';\n\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\n\nimport { DEFAULT_AWS_REGION } from '../../../constants';\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-target-aws',\n  title: 'Amazon Web Services',\n  customTitle: (\n    <Title headingLevel=\"h1\" size=\"xl\">\n      Target environment - Amazon Web Services\n    </Title>\n  ),\n  name: 'aws-target-env',\n  substepOf: 'Target environment',\n  nextStep: ({ values }) => nextStepMapper(values, { skipAws: true }),\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text-component',\n      label: (\n        <p>\n          Your image will be uploaded to AWS and shared with the account you\n          provide below.\n        </p>\n      ),\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text-component',\n      label: (\n        <p>\n          <b>The shared image will expire within 14 days.</b> To permanently\n          access the image, copy the image, which will be shared to your account\n          by Red Hat, to your own AWS account.\n        </p>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'aws-account-id',\n      className: 'pf-u-w-25',\n      'data-testid': 'aws-account-id',\n      type: 'text',\n      label: 'AWS account ID',\n      isRequired: true,\n      autoFocus: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.EXACT_LENGTH,\n          threshold: 12,\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'aws-default-region',\n      className: 'pf-u-w-25',\n      'data-testid': 'aws-default-region',\n      type: 'text',\n      label: 'Default Region',\n      value: DEFAULT_AWS_REGION,\n      isReadOnly: true,\n      isRequired: true,\n      helperText: (\n        <HelperText>\n          <HelperTextItem\n            component=\"div\"\n            variant=\"indeterminate\"\n            className=\"pf-u-w-25\"\n          >\n            Images are built in the default region but can be copied to other\n            regions later.\n          </HelperTextItem>\n        </HelperText>\n      ),\n    },\n  ],\n};\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Button, Text, TextContent, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\n\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-target-msazure',\n  title: 'Microsoft Azure',\n  customTitle: (\n    <Title headingLevel=\"h1\" size=\"xl\">\n      Target environment - Microsoft Azure\n    </Title>\n  ),\n  name: 'ms-azure-target-env',\n  substepOf: 'Target environment',\n  nextStep: ({ values }) =>\n    nextStepMapper(values, {\n      skipAws: true,\n      skipGoogle: true,\n      skipAzure: true,\n    }),\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'azure-description',\n      label: (\n        <TextContent>\n          <Text>\n            Upon build, Image Builder sends the image to the selected authorized\n            Azure account. The image will be uploaded to the resource group in\n            the subscription you specify.\n          </Text>\n          <Text>\n            To authorize Image Builder to push images to Microsoft Azure, the\n            account owner must configure Image Builder as an authorized\n            application for a specific tenant ID and give it the role of\n            &quot;Contributor&quot; to at least one resource group.\n            <br />\n            <Button\n              component=\"a\"\n              target=\"_blank\"\n              variant=\"link\"\n              icon={<ExternalLinkAltIcon />}\n              iconPosition=\"right\"\n              isInline\n              href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow\"\n            >\n              Learn more about OAuth 2.0\n            </Button>\n          </Text>\n        </TextContent>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'azure-tenant-id',\n      className: 'pf-u-w-50',\n      'data-testid': 'azure-tenant-id',\n      type: 'text',\n      label: 'Azure Tenant GUID',\n      required: true,\n      isRequired: true,\n      autoFocus: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern:\n            /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i,\n          message: 'Please enter a valid tenant ID',\n        },\n      ],\n    },\n    {\n      component: 'azure-auth-button',\n      name: 'azure-auth-button',\n      'data-testid': 'azure-auth-button',\n      required: true,\n      isRequired: true,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'azure-subscription-id',\n      className: 'pf-u-w-50',\n      'data-testid': 'azure-subscription-id',\n      type: 'text',\n      label: 'Subscription ID',\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern:\n            /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i,\n          message: 'Please enter a valid subscription ID',\n        },\n      ],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'azure-resource-group',\n      className: 'pf-u-w-50',\n      'data-testid': 'azure-resource-group',\n      type: 'text',\n      label: 'Resource group',\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[-\\w._()]+[-\\w_()]$/,\n          message:\n            'Resource group names only allow alphanumeric characters, ' +\n            'periods, underscores, hyphens, and parenthesis and cannot end in a period',\n        },\n      ],\n    },\n    // TODO check oauth2 thing too here?\n  ],\n};\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\n\nimport StepTemplate from './stepTemplate';\n\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-systemconfiguration-packages',\n  title: 'Additional packages',\n  name: 'packages',\n  substepOf: 'System configuration',\n  nextStep: 'image-name',\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'packages-text-component',\n      label: (\n        <Text>\n          Images built with Image Builder include all required packages.\n          <br />\n          You can add additional packages to your image by searching\n          &quot;Available packages&quot; and adding them to the &quot;Chosen\n          packages&quot; list.\n        </Text>\n      ),\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n    },\n  ],\n};\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  Button,\n  Popover,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, HelpIcon } from '@patternfly/react-icons';\n\nimport StepTemplate from './stepTemplate';\n\nimport CustomButtons from '../formComponents/CustomButtons';\n\nconst PopoverActivation = () => {\n  return (\n    <Popover\n      hasAutoWidth\n      maxWidth=\"35rem\"\n      bodyContent={\n        <TextContent>\n          <Text>\n            Activation keys allow you to register a system with appropriate\n            subscriptions and system purpose attached.\n          </Text>\n        </TextContent>\n      }\n    >\n      <Button\n        variant=\"plain\"\n        aria-label=\"Activation key popover\"\n        aria-describedby=\"subscription-activation-key\"\n        className=\"pf-c-form__group-label-help\"\n      >\n        <HelpIcon />\n      </Button>\n    </Popover>\n  );\n};\n\nexport default {\n  StepTemplate,\n  id: 'wizard-registration',\n  title: 'Registration',\n  name: 'registration',\n  nextStep: 'File system configuration',\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.RADIO,\n      label: 'Register images with Red Hat',\n      name: 'register-system',\n      initialValue: 'register-now-insights',\n      options: [\n        {\n          label: 'Register and connect image instances with Red Hat',\n          description: 'Includes Subscriptions and Red Hat Insights',\n          value: 'register-now-insights',\n          'data-testid': 'radio-register-now-insights',\n          autoFocus: true,\n        },\n        {\n          label: 'Register image instances only',\n          description: 'Includes Subscriptions only',\n          value: 'register-now',\n          className: 'pf-u-mt-sm',\n          'data-testid': 'radio-register-now',\n        },\n        {\n          label: 'Register later',\n          value: 'register-later',\n          className: 'pf-u-mt-sm',\n          'data-testid': 'radio-register-later',\n        },\n      ],\n    },\n    {\n      component: 'activation-keys',\n      name: 'subscription-activation-key',\n      required: true,\n      label: (\n        <>\n          Activation key to use for this image\n          <PopoverActivation />\n        </>\n      ),\n      condition: {\n        or: [\n          { when: 'register-system', is: 'register-now-insights' },\n          { when: 'register-system', is: 'register-now' },\n        ],\n      },\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'subscription-activation-description',\n      label: (\n        <>\n          Create and manage activation keys in the&nbsp;\n          <Button\n            component=\"a\"\n            target=\"_blank\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            isInline\n            href=\"https://access.redhat.com/\"\n          >\n            Customer Portal\n          </Button>\n        </>\n      ),\n      condition: {\n        or: [\n          { when: 'register-system', is: 'register-now-insights' },\n          { when: 'register-system', is: 'register-now' },\n        ],\n      },\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'subscription-register-later',\n      label: (\n        <TextContent>\n          <Text component={TextVariants.h3}>Register Later</Text>\n          <Text>\n            On initial boot, systems will need to be registered manually before\n            having access to updates or Red Hat services.\n          </Text>\n          <Text>Registering now is recommended.</Text>\n        </TextContent>\n      ),\n      condition: {\n        or: [{ when: 'register-system', is: 'register-later' }],\n      },\n    },\n  ],\n};\n","import StepTemplate from './stepTemplate';\n\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-review',\n  name: 'review',\n  title: 'Review',\n  buttons: CustomButtons,\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Text } from '@patternfly/react-core';\n\nimport nextStepMapper from './imageOutputStepMapper';\nimport StepTemplate from './stepTemplate';\n\nimport { RHEL_9 } from '../../../constants.js';\nimport DocumentationButton from '../../sharedComponents/DocumentationButton';\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-imageoutput',\n  title: 'Image output',\n  name: 'image-output',\n  nextStep: ({ values }) => nextStepMapper(values),\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'image-output-plain-text',\n      label: (\n        <Text>\n          Image builder allows you to create a custom image and push it to\n          target environments.\n          <br />\n          <DocumentationButton />\n        </Text>\n      ),\n    },\n    {\n      component: 'image-output-release-select',\n      label: 'Release',\n      name: 'release',\n      initialValue: RHEL_9,\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n      ],\n    },\n    {\n      component: 'centos-acknowledgement',\n      name: 'centos-acknowledgement',\n      condition: {\n        when: 'release',\n        pattern: /centos-*/,\n        then: { set: { 'register-system': null } },\n        else: { visible: false },\n      },\n    },\n    {\n      component: 'output',\n      name: 'target-environment',\n      label: 'Select target environments',\n      isRequired: true,\n      validate: [\n        {\n          type: validatorTypes.REQUIRED,\n        },\n        {\n          type: 'targetEnvironmentValidator',\n        },\n      ],\n    },\n  ],\n};\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { useFormApi } from '@data-driven-forms/react-form-renderer';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport { Button } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\n// FileSystemconfigButtons are defined separately to display errors inside of the button footer\nconst FileSystemConfigButtons = ({ handleNext, handlePrev, nextStep }) => {\n  const { currentStep, formOptions } = useContext(WizardContext);\n  const { change, getState } = useFormApi();\n  const [hasErrors, setHasErrors] = useState(\n    getState()?.errors?.['file-system-configuration'] ? true : false\n  );\n  const [nextHasBeenClicked, setNextHasBeenClicked] = useState(false);\n\n  useEffect(() => {\n    const errors = getState()?.errors?.['file-system-configuration'];\n    errors ? setHasErrors(true) : setHasErrors(false);\n\n    if (!errors) {\n      setNextHasBeenClicked(false);\n      change('file-system-config-show-errors', false);\n    }\n  });\n\n  const handleClick = () => {\n    if (!hasErrors) {\n      handleNext(nextStep);\n    }\n\n    setNextHasBeenClicked(true);\n    change('file-system-config-show-errors', true);\n  };\n\n  return (\n    <>\n      <Button\n        id={`${currentStep.id}-next-button`}\n        variant=\"primary\"\n        type=\"button\"\n        isDisabled={hasErrors && nextHasBeenClicked}\n        onClick={handleClick}\n      >\n        Next\n      </Button>\n      <Button\n        id={`${currentStep.id}-previous-button`}\n        variant=\"secondary\"\n        type=\"button\"\n        onClick={handlePrev}\n      >\n        Back\n      </Button>\n      <div className=\"pf-c-wizard__footer-cancel\">\n        <Button\n          id={`${currentStep.id}-cancel-button`}\n          type=\"button\"\n          variant=\"link\"\n          onClick={formOptions.onCancel}\n        >\n          Cancel\n        </Button>\n      </div>\n    </>\n  );\n};\n\nFileSystemConfigButtons.propTypes = {\n  handleNext: PropTypes.func,\n  handlePrev: PropTypes.func,\n  nextStep: PropTypes.string,\n};\n\nexport default FileSystemConfigButtons;\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Text } from '@patternfly/react-core';\n\nimport StepTemplate from './stepTemplate';\n\nimport FileSystemConfigButtons from '../formComponents/FileSystemConfigButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-systemconfiguration-filesystem',\n  title: 'File system configuration',\n  name: 'File system configuration',\n  buttons: FileSystemConfigButtons,\n  substepOf: 'System configuration',\n  nextStep: 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'file-system-configuration-text-component',\n      label: (\n        <>\n          <Text>\n            Red Hat recommends using automatic partitioning for most\n            installations.\n          </Text>\n          <Text>\n            Alternatively, you may manually configure the file system of your\n            image by adding, removing, and editing partitions.\n          </Text>\n        </>\n      ),\n    },\n    {\n      component: 'file-system-config-toggle',\n      name: 'file-system-config-toggle',\n      label: 'File system configurations toggle',\n    },\n    {\n      component: 'file-system-configuration',\n      name: 'file-system-configuration',\n      label: 'File system configurations',\n      validate: [\n        { type: 'fileSystemConfigurationValidator' },\n        { type: validatorTypes.REQUIRED },\n      ],\n      condition: {\n        when: 'file-system-config-toggle',\n        is: 'manual',\n      },\n    },\n  ],\n};\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nimport StepTemplate from './stepTemplate';\n\nimport CustomButtons from '../formComponents/CustomButtons';\n\nexport default {\n  StepTemplate,\n  id: 'wizard-details',\n  name: 'image-name',\n  title: 'Name image',\n  nextStep: 'review',\n  buttons: CustomButtons,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text-component',\n      label: (\n        <p>\n          Optionally enter a name for your image. All images will have a UUID.\n        </p>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'image-name',\n      type: 'text',\n      label: 'Image name',\n      autoFocus: true,\n      validate: [\n        {\n          type: validatorTypes.MAX_LENGTH,\n          threshold: 100,\n        },\n      ],\n    },\n  ],\n};\n","const FileSystemConfigurationValidator = () => (fsc) => {\n  if (!fsc) {\n    return undefined;\n  }\n\n  let mpFreqs = {};\n  for (const fs of fsc) {\n    const mp = fs.mountpoint;\n    if (mp in mpFreqs) {\n      mpFreqs[mp]++;\n    } else {\n      mpFreqs[mp] = 1;\n    }\n  }\n\n  let duplicates = [];\n  for (const [k, v] of Object.entries(mpFreqs)) {\n    if (v > 1) {\n      duplicates.push(k);\n    }\n  }\n\n  let root = mpFreqs['/'] >= 1;\n  return duplicates.length === 0 && root\n    ? undefined\n    : {\n        duplicates: duplicates === [] ? undefined : duplicates,\n        root,\n      };\n};\n\nexport default FileSystemConfigurationValidator;\n","const TargetEnvironmentValidator = () => (targets) => {\n  if (!targets) {\n    return undefined;\n  }\n\n  // at least one of the target environments must\n  // be set to true. This reduces the value to\n  // a single boolean which is a flag for whether\n  // at least one target has been selected or not\n  let valid = Object.values(targets).reduce(\n    (prev, curr) => curr || prev,\n    false\n  );\n  return !valid ? 'Please select an image' : undefined;\n};\n\nexport default TargetEnvironmentValidator;\n","import React from 'react';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport ImageCreator from './ImageCreator';\nimport {\n  awsTarget,\n  fileSystemConfiguration,\n  googleCloudTarger,\n  imageName,\n  imageOutput,\n  msAzureTarget,\n  packages,\n  registration,\n  review,\n} from './steps';\nimport {\n  fileSystemConfigurationValidator,\n  targetEnvironmentValidator,\n} from './validators';\n\nimport './CreateImageWizard.scss';\nimport api from '../../api';\nimport { UNIT_GIB, UNIT_KIB, UNIT_MIB } from '../../constants';\nimport { composeAdded } from '../../store/composesSlice';\nimport isRhel from '../../Utilities/isRhel';\nimport { resolveRelPath } from '../../Utilities/path';\nimport DocumentationButton from '../sharedComponents/DocumentationButton';\n\nconst handleKeyDown = (e, handleClose) => {\n  if (e.key === 'Escape') {\n    handleClose();\n  }\n};\n\nconst onSave = (values) => {\n  let customizations = {\n    packages: values['selected-packages']?.map((p) => p.name),\n  };\n\n  if (values['register-system'] === 'register-now-insights') {\n    customizations.subscription = {\n      'activation-key': values['subscription-activation-key'],\n      insights: true,\n      organization: Number(values['subscription-organization-id']),\n      'server-url': values['subscription-server-url'],\n      'base-url': values['subscription-base-url'],\n    };\n  } else if (values['register-system'] === 'register-now') {\n    customizations.subscription = {\n      'activation-key': values['subscription-activation-key'],\n      insights: false,\n      organization: Number(values['subscription-organization-id']),\n      'server-url': values['subscription-server-url'],\n      'base-url': values['subscription-base-url'],\n    };\n  }\n\n  if (values['file-system-config-toggle'] === 'manual') {\n    customizations.filesystem = [];\n    for (let fsc of values['file-system-configuration']) {\n      customizations.filesystem.push({\n        mountpoint: fsc.mountpoint,\n        min_size: fsc.size * fsc.unit,\n      });\n    }\n  }\n\n  let requests = [];\n  if (values['target-environment']?.aws) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'ami',\n          upload_request: {\n            type: 'aws',\n            options: {\n              share_with_accounts: [values['aws-account-id']],\n            },\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.gcp) {\n    let share = '';\n    switch (values['google-account-type']) {\n      case 'googleAccount':\n        share = `user:${values['google-email']}`;\n        break;\n      case 'serviceAccount':\n        share = `serviceAccount:${values['google-email']}`;\n        break;\n      case 'googleGroup':\n        share = `group:${values['google-email']}`;\n        break;\n      case 'domain':\n        share = `domain:${values['google-domain']}`;\n        break;\n    }\n\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'gcp',\n          upload_request: {\n            type: 'gcp',\n            options: {\n              share_with_accounts: [share],\n            },\n          },\n        },\n      ],\n      customizations,\n    };\n\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.azure) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'vhd',\n          upload_request: {\n            type: 'azure',\n            options: {\n              tenant_id: values['azure-tenant-id'],\n              subscription_id: values['azure-subscription-id'],\n              resource_group: values['azure-resource-group'],\n            },\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.vsphere) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'vsphere',\n          upload_request: {\n            type: 'aws.s3',\n            options: {},\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.['guest-image']) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'guest-image',\n          upload_request: {\n            type: 'aws.s3',\n            options: {},\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  if (values['target-environment']?.['image-installer']) {\n    let request = {\n      distribution: values.release,\n      image_name: values?.['image-name'],\n      image_requests: [\n        {\n          architecture: 'x86_64',\n          image_type: 'image-installer',\n          upload_request: {\n            type: 'aws.s3',\n            options: {},\n          },\n        },\n      ],\n      customizations,\n    };\n    requests.push(request);\n  }\n\n  return requests;\n};\n\nconst parseSizeUnit = (bytesize) => {\n  let size;\n  let unit;\n\n  if (bytesize % UNIT_GIB === 0) {\n    size = bytesize / UNIT_GIB;\n    unit = UNIT_GIB;\n  } else if (bytesize % UNIT_MIB === 0) {\n    size = bytesize / UNIT_MIB;\n    unit = UNIT_MIB;\n  } else if (bytesize % UNIT_KIB === 0) {\n    size = bytesize / UNIT_KIB;\n    unit = UNIT_KIB;\n  }\n\n  return [size, unit];\n};\n\nconst getPackageDescription = async (release, arch, packageName) => {\n  let pack;\n  // if the env is stage beta then use content-sources api\n  // else use image-builder api\n  if (!insights.chrome.isProd() && insights.chrome.isBeta()) {\n    const args = [release, packageName];\n    const data = await api.getPackagesContentSources(...args);\n\n    pack = data.find((pack) => packageName === pack.name);\n  } else {\n    const args = [release, arch, packageName];\n    let { data, meta } = await api.getPackages(...args);\n\n    // the package should be found in the 0 index\n    // if not then fetch all package matches and search for the package\n    if (data[0]?.name === packageName) {\n      pack = data[0];\n    } else {\n      if (data?.length !== meta.count) {\n        ({ data } = await api.getPackages(...args, meta.count));\n      }\n\n      pack = data.find((pack) => packageName === pack.name);\n    }\n  }\n  const summary = pack?.summary;\n  // if no matching package is found return an empty string for description\n  return summary || '';\n};\n\n// map the compose request object to the expected form state\nconst requestToState = (composeRequest) => {\n  if (composeRequest) {\n    const imageRequest = composeRequest.image_requests[0];\n    const uploadRequest = imageRequest.upload_request;\n    let formState = {};\n\n    formState['image-name'] = composeRequest.image_name;\n\n    formState.release = composeRequest?.distribution;\n    // set defaults for target environment first\n    formState['target-environment'] = {\n      aws: false,\n      azure: false,\n      gcp: false,\n      'guest-image': false,\n    };\n    // then select the one from the request\n    // if the image type is to a cloud provider we use the upload_request.type\n    // or if the image is intended for download we use the image_type\n    let targetEnvironment;\n    if (uploadRequest.type === 'aws.s3') {\n      targetEnvironment = imageRequest.image_type;\n    } else {\n      targetEnvironment = uploadRequest.type;\n    }\n\n    formState['target-environment'][targetEnvironment] = true;\n\n    if (targetEnvironment === 'aws') {\n      formState['aws-account-id'] =\n        uploadRequest?.options?.share_with_accounts[0];\n    } else if (targetEnvironment === 'azure') {\n      formState['azure-tenant-id'] = uploadRequest?.options?.tenant_id;\n      formState['azure-subscription-id'] =\n        uploadRequest?.options?.subscription_id;\n      formState['azure-resource-group'] =\n        uploadRequest?.options?.resource_group;\n    } else if (targetEnvironment === 'gcp') {\n      // parse google account info\n      // roughly in the format `accountType:accountEmail`\n      const accountInfo = uploadRequest?.options?.share_with_accounts[0];\n      const [accountTypePrefix, account] = accountInfo.split(':');\n\n      switch (accountTypePrefix) {\n        case 'user':\n          formState['google-account-type'] = 'googleAccount';\n          formState['google-email'] = account;\n          break;\n        case 'serviceAccount':\n          formState['google-account-type'] = 'serviceAccount';\n          formState['google-email'] = account;\n          break;\n        case 'group':\n          formState['google-account-type'] = 'googleGroup';\n          formState['google-email'] = account;\n          break;\n        case 'domain':\n          formState['google-account-type'] = 'domain';\n          formState['google-domain'] = account;\n          break;\n      }\n    }\n\n    // customizations\n    // packages\n    let packs = [];\n    composeRequest?.customizations?.packages?.forEach(async (packName) => {\n      const packageDescription = await getPackageDescription(\n        composeRequest?.distribution,\n        imageRequest?.architecture,\n        packName\n      );\n      const pack = {\n        name: packName,\n        summary: packageDescription,\n      };\n      packs.push(pack);\n    });\n    formState['selected-packages'] = packs;\n\n    // filesystem\n    const fs = composeRequest?.customizations?.filesystem;\n    if (fs) {\n      formState['file-system-config-toggle'] = 'manual';\n      let fileSystemConfiguration = [];\n      for (let fsc of fs) {\n        const [size, unit] = parseSizeUnit(fsc.min_size);\n        fileSystemConfiguration.push({\n          mountpoint: fsc.mountpoint,\n          size,\n          unit,\n        });\n      }\n\n      formState['file-system-configuration'] = fileSystemConfiguration;\n    }\n\n    // subscription\n    const subscription = composeRequest?.customizations?.subscription;\n    if (subscription) {\n      if (subscription.insights) {\n        formState['register-system'] = 'register-now-insights';\n      } else {\n        formState['register-system'] = 'register-now';\n      }\n\n      formState['subscription-activation-key'] = subscription['activation-key'];\n      formState['subscription-organization-id'] = subscription.organization;\n\n      if (insights.chrome.isProd()) {\n        formState['subscription-server-url'] = 'subscription.rhsm.redhat.com';\n        formState['subscription-base-url'] = 'https://cdn.redhat.com/';\n      } else {\n        formState['subscription-server-url'] =\n          'subscription.rhsm.stage.redhat.com';\n        formState['subscription-base-url'] = 'https://cdn.stage.redhat.com/';\n      }\n    } else {\n      formState['register-system'] = 'register-later';\n    }\n\n    return formState;\n  } else {\n    return;\n  }\n};\n\nconst formStepHistory = (composeRequest) => {\n  if (composeRequest) {\n    const imageRequest = composeRequest.image_requests[0];\n    const uploadRequest = imageRequest.upload_request;\n    let steps = ['image-output'];\n\n    if (uploadRequest.type === 'aws') {\n      steps.push('aws-target-env');\n    } else if (uploadRequest.type === 'azure') {\n      steps.push('azure-target-env');\n    } else if (uploadRequest.type === 'gcp') {\n      steps.push('google-cloud-target-env');\n    }\n\n    if (isRhel(composeRequest?.distribution)) {\n      steps.push('registration');\n    }\n\n    steps = steps.concat([\n      'File system configuration',\n      'packages',\n      'image-name',\n    ]);\n\n    return steps;\n  } else {\n    return [];\n  }\n};\n\nconst CreateImageWizard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const composeRequest = location?.state?.composeRequest;\n  const initialState = requestToState(composeRequest);\n  const stepHistory = formStepHistory(composeRequest);\n\n  const handleClose = () => navigate(resolveRelPath(''));\n\n  return (\n    <ImageCreator\n      onClose={handleClose}\n      onSubmit={({ values, setIsSaving }) => {\n        setIsSaving(() => true);\n        const requests = onSave(values);\n        Promise.all(\n          requests.map((request) =>\n            api.composeImage(request).then((response) => {\n              dispatch(\n                composeAdded({\n                  compose: {\n                    ...response,\n                    request,\n                    image_status: { status: 'pending' },\n                  },\n                  insert: true,\n                })\n              );\n            })\n          )\n        )\n          .then(() => {\n            navigate(resolveRelPath(''));\n            dispatch(\n              addNotification({\n                variant: 'success',\n                title: 'Your image is being created',\n              })\n            );\n\n            setIsSaving(false);\n          })\n          .catch((err) => {\n            dispatch(\n              addNotification({\n                variant: 'danger',\n                title: 'Your image could not be created',\n                description:\n                  'Status code ' +\n                  err.response.status +\n                  ': ' +\n                  err.response.statusText,\n              })\n            );\n\n            setIsSaving(false);\n          });\n      }}\n      defaultArch=\"x86_64\"\n      customValidatorMapper={{\n        fileSystemConfigurationValidator,\n        targetEnvironmentValidator,\n      }}\n      schema={{\n        fields: [\n          {\n            component: componentTypes.WIZARD,\n            name: 'image-builder-wizard',\n            className: 'image_builder',\n            isDynamic: true,\n            inModal: true,\n            onKeyDown: (e) => {\n              handleKeyDown(e, handleClose);\n            },\n            buttonLabels: {\n              submit: 'Create image',\n            },\n            showTitles: true,\n            title: 'Create image',\n            crossroads: ['target-environment', 'release'],\n            description: (\n              <>\n                Image builder allows you to create a custom image and push it to\n                target environments. <DocumentationButton />\n              </>\n            ),\n            // order in this array does not reflect order in wizard nav, this order is managed inside\n            // of each step by `nextStep` property!\n            fields: [\n              imageOutput,\n              awsTarget,\n              googleCloudTarger,\n              msAzureTarget,\n              registration,\n              packages,\n              fileSystemConfiguration,\n              imageName,\n              review,\n            ],\n            initialState: {\n              activeStep: location?.state?.initialStep || 'image-output', // name of the active step\n              activeStepIndex: stepHistory.length, // active index\n              maxStepIndex: stepHistory.length, // max achieved index\n              prevSteps: stepHistory, // array with names of previously visited steps\n            },\n          },\n        ],\n      }}\n      initialValues={initialState}\n    />\n  );\n};\n\nexport default CreateImageWizard;\n","import React from 'react';\n\nimport { Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst DocumentationButton = () => {\n  const documentationURL =\n    'https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/creating_customized_rhel_images_using_the_image_builder_service/index';\n\n  return (\n    <Button\n      component=\"a\"\n      target=\"_blank\"\n      variant=\"link\"\n      icon={<ExternalLinkAltIcon />}\n      iconPosition=\"right\"\n      isInline\n      href={documentationURL}\n    >\n      Documentation\n    </Button>\n  );\n};\n\nexport default DocumentationButton;\n"],"names":["ActivationKeys","label","isRequired","props","useFormApi","change","getState","input","useFieldApi","useState","activationKeys","setActivationKeys","isOpen","setIsOpen","isLoading","setIsLoading","values","activationKeySelected","selectActivationKey","useEffect","api","then","keys","insights","chrome","isProd","FormGroup","Select","variant","SelectVariant","onToggle","onSelect","_","selection","name","onClear","undefined","selections","placeholderText","typeAheadAriaLabel","SelectOption","isNoResultsOption","Spinner","isSVG","size","map","key","index","value","propTypes","PropTypes","defaultProps","tenantId","guidRegex","RegExp","Button","component","target","isDisabled","test","href","DeveloperProgramButton","icon","iconPosition","isInline","Alert","isPlain","title","selected","setSelected","onClick","evt","currentTarget","id","ToggleGroup","ToggleGroupItem","onChange","text","buttonId","isSelected","MountPoint","validPrefixes","prefix","setPrefix","suffix","setSuffix","p","mountpoint","startsWith","substring","length","suf","mp","path","className","event","pfx","TextInput","type","v","SizeUnit","unit","UNIT_GIB","setUnit","setSize","isNaN","parseInt","UNIT_KIB","UNIT_MIB","u","initialRow","uuidv4","fstype","draggedItemId","setDraggedItemId","draggingToItemIndex","setDraggingToItemIndex","isDragging","setIsDragging","itemOrder","setItemOrder","tempItemOrder","setTempItemOrder","bodyref","useRef","rows","setRows","fsc","newRows","newOrder","r","push","showErrors","r2","addRow","concat","move","ulNode","current","nodes","Array","from","children","node","every","i","firstChild","removeChild","lastChild","forEach","appendChild","find","n","onDragOver","preventDefault","curListItem","closest","contains","dragId","newDraggingToItemIndex","findIndex","item","arr","i1","toIndex","fromIndex","indexOf","temp","splice","moveItem","isValidDrop","ulRect","getBoundingClientRect","clientX","x","width","clientY","y","height","onDragLeave","onDrop","onDragStart","dataTransfer","effectAllowed","setData","classList","add","styles","setAttribute","onDragEnd","remove","TextContent","Text","TextVariants","errors","duplicates","root","TableComposable","Thead","Tr","Th","Popover","hasAutoWidth","bodyContent","Tbody","ref","row","rowIndex","draggable","Td","draggableRow","newRow","setMountpoint","s","removeIndex","e","removeOrderIndex","removeRow","distro","RHEL_8","RHEL_9","ImageOutputReleaseSelect","showDevelopmentOptions","setShowDevelopmentOptions","RELEASES","loadingVariant","Object","entries","filter","isRhel","release","Packages","defaultArch","packagesSearchName","setPackagesSearchName","filterAvailable","setFilterAvailable","filterChosen","setFilterChosen","packagesAvailable","setPackagesAvailable","packagesAvailableFound","setPackagesAvailableFound","packagesChosen","setPackagesChosen","packagesChosenFound","setPackagesChosenFound","focus","setFocus","selectedPackages","searchResultsComparator","useCallback","searchTerm","a","b","toLowerCase","setPackagesAvailableSorted","packageList","sortResults","sort","setPackagesChosenSorted","filterPackagesAvailable","availablePackage","some","chosenPackage","getAllPackages","isBeta","args","architecture","data","meta","count","handlePackagesAvailableSearch","packagesAvailableFiltered","keydownHandler","stopPropagation","document","addEventListener","removeEventListener","areFound","pack","includes","isHidden","updateState","updatedPackagesAvailable","updatedPackagesChosen","summary","onOptionSelect","isChosen","newChosen","newAvailable","firstInputElement","DualListSelector","DualListSelectorPane","searchInput","SearchInput","placeholder","onFocus","onBlur","val","submitSearchButtonLabel","onSearch","resetButtonLabel","DualListSelectorList","DualListSelectorListItem","DualListSelectorControlsWrapper","DualListSelectorControl","option","newPackagesChosen","tooltipContent","newPackagesAvailable","found","filteredPackagesChosen","handlePackagesChosenSearch","RadioWithPopover","activationKey","role","setRole","serviceLevel","setServiceLevel","usage","setUsage","additionalRepositories","setRepositories","fetchKeyInformation","TextList","TextListVariants","TextListItem","TextListItemVariants","isSmall","repo","repositoryLabel","targetEnv","skipAws","skipGoogle","skipAzure","aws","gcp","azure","StepTemplate","formFields","formRef","customTitle","showTitle","showTitles","Title","headingLevel","formOptions","renderForm","Element","CustomButtons","buttonLabels","cancel","next","submit","back","handleNext","handlePrev","nextStep","isSaving","setIsSaving","useContext","WizardContext","currentStep","onNextOrSubmit","onSubmit","valid","validating","onCancel","googleAccType","googleAccount","serviceAccount","googleGroup","domain","PopoverInfo","appendTo","maxWidth","headerContent","flipBehavior","substepOf","nextStepMapper","buttons","fields","componentTypes","initialValue","options","autoFocus","validate","validatorTypes","condition","or","when","is","pattern","message","FSReviewTable","ri","activeTabKey","setActiveTabKey","minSize","setMinSize","registerSystem","auth","getUser","userData","identity","internal","org_id","toFixed","DescriptionList","isCompact","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Tabs","isFilled","activeKey","tabIndex","Tab","eventKey","TabTitleText","List","iconSize","ListItem","src","vsphere","position","minWidth","TargetEnvironment","environment","setEnvironment","handleSetEnvironment","env","prevEnv","newEnv","handleKeyDown","Tile","onKeyDown","isStacked","isDisplayLarge","Checkbox","isChecked","ImageCreator","schema","onClose","customComponentMapper","customValidatorMapper","initialValues","subscription","FormTemplate","showFormControls","formValues","validatorMapper","componentMapper","review","Review","output","select","AzureAuthButton","FileSystemConfigToggle","FileSystemConfiguration","CentOSAcknowledgement","threshold","DEFAULT_AWS_REGION","isReadOnly","helperText","HelperText","HelperTextItem","required","PopoverActivation","description","DocumentationButton","set","else","visible","FileSystemConfigButtons","hasErrors","setHasErrors","nextHasBeenClicked","setNextHasBeenClicked","mpFreqs","k","targets","reduce","prev","curr","parseSizeUnit","bytesize","getPackageDescription","arch","packageName","dispatch","useDispatch","navigate","useNavigate","location","useLocation","composeRequest","state","initialState","targetEnvironment","imageRequest","image_requests","uploadRequest","upload_request","formState","image_name","distribution","image_type","share_with_accounts","tenant_id","subscription_id","resource_group","split","accountTypePrefix","account","packs","customizations","packages","packName","packageDescription","fs","filesystem","fileSystemConfiguration","min_size","organization","requestToState","stepHistory","steps","formStepHistory","handleClose","resolveRelPath","requests","Number","request","share","onSave","Promise","all","response","composeAdded","compose","image_status","status","insert","addNotification","err","statusText","fileSystemConfigurationValidator","targetEnvironmentValidator","isDynamic","inModal","crossroads","imageOutput","awsTarget","googleCloudTarger","msAzureTarget","registration","imageName","activeStep","initialStep","activeStepIndex","maxStepIndex","prevSteps"],"sourceRoot":""}