{"version":3,"sources":["webpack:///./src/SmartComponents/LandingPage/CreateImageCard.js","webpack:///./src/SmartComponents/LandingPage/ImagesCard.js","webpack:///./src/SmartComponents/LandingPage/LandingPage.js"],"names":["CreateImageCard","props","modifier","FlexModifiers","column","Component","ImagesCard","pollComposeStatuses","bind","interval","setInterval","clearInterval","updateCompose","composes","Object","entries","map","id","compose","api","getComposeStatus","then","response","newCompose","assign","status","architecture","distribution","image_type","mapStateToProps","state","mapDispatchToProps","dispatch","actions","propTypes","PropTypes","object","func","connect","LandingPage","withRouter"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;IAWMA,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACTA,KADS;AAGlB;;;;6BAEQ;AACL,0BACI,2DAAC,2DAAD,qBACI,2DAAC,iEAAD,6BADJ,eAEI,2DAAC,+DAAD,qBACI,2DAAC,2DAAD,qBACI,2DAAC,gEAAD;AAAW,eAAO,EAAC;AAAnB,sBACI,2DAAC,qDAAD;AAAM,UAAE,EAAC;AAAT,sBACI,2DAAC,2DAAD;AAAM,sBAAc,EAAG,CAAC;AAAEC,kBAAQ,EAAEC,oEAAa,CAACC;AAA1B,SAAD;AAAvB,sBACI,2DAAC,6DAAD;AAAQ,eAAO,EAAC;AAAhB,wBADJ,CADJ,CADJ,CADJ,CADJ,CAFJ,CADJ;AAeH;;;;EAtByBC,+C;;AAyBfL,8EAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AAEA;AAMA;;IAEMM,U;;;;;AACF,sBAAYL,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKM,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBC,IAAzB,4FAA3B;AAFe;AAGlB;;;;wCAEmB;AAAA;;AAChB,WAAKC,QAAL,GAAgBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACH,mBAAL,EAAN;AAAA,OAAD,EAAmC,IAAnC,CAA3B;AACH;;;2CAEsB;AACnBI,mBAAa,CAAC,KAAKF,QAAN,CAAb;AACH;;;0CAEqB;AAAA,wBACgB,KAAKR,KADrB;AAAA,UACZW,aADY,eACZA,aADY;AAAA,UACGC,QADH,eACGA,QADH;AAElBC,YAAM,CAACC,OAAP,CAAeF,QAAf,EAAyBG,GAAzB,CAA6B,gBAAqB;AAAA;AAAA,YAAlBC,EAAkB;AAAA,YAAdC,OAAc;;AAC9CC,wDAAG,CAACC,gBAAJ,CAAqBH,EAArB,EAAyBI,IAAzB,CAA8B,UAAAC,QAAQ,EAAI;AACtC,cAAIC,UAAU,GAAG,EAAjB;AACAA,oBAAU,CAACN,EAAD,CAAV,GAAiBH,MAAM,CAACU,MAAP,CAAc,EAAd,EAAkBN,OAAlB,EAA2B;AAAEO,kBAAM,EAAEH,QAAQ,CAACG;AAAnB,WAA3B,CAAjB;AACAb,uBAAa,CAACW,UAAD,CAAb;AACH,SAJD;AAKH,OAND;AAOH;;;6BAEQ;AAAA,UACCV,QADD,GACc,KAAKZ,KADnB,CACCY,QADD;AAEL,0BACI,2DAAC,4DAAD,qBACI,2DAAC,kEAAD,2BADJ,EAEMC,MAAM,CAACC,OAAP,CAAeF,QAAf,EAAyBG,GAAzB,CAA6B,iBAAqB;AAAA;AAAA,YAAlBC,EAAkB;AAAA,YAAdC,OAAc;;AAChD,4BAAO,2DAAC,gEAAD;AAAU,aAAG,EAAGD;AAAhB,wBACH,0EAASA,EAAT,CADG,eAEH,sEAAKC,OAAO,CAACQ,YAAb,QAA+BR,OAAO,CAACS,YAAvC,QAAyDT,OAAO,CAACU,UAAjE,CAFG,eAGH,sEAAKV,OAAO,CAACO,MAAb,CAHG,CAAP;AAKH,OANC,CAFN,CADJ;AAYH;;;;EAvCoBpB,+C;;AA0CzB,SAASwB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHjB,YAAQ,EAAEiB,KAAK,CAACjB;AADb,GAAP;AAGH;;AAED,SAASkB,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHpB,iBAAa,EAAE,uBAACM,OAAD;AAAA,aAAac,QAAQ,CAACC,+CAAO,CAACrB,aAAR,CAAsBM,OAAtB,CAAD,CAArB;AAAA;AADZ,GAAP;AAGH;;AAEDZ,UAAU,CAAC4B,SAAX,GAAuB;AACnBrB,UAAQ,EAAEsB,iDAAS,CAACC,MADD;AAEnBxB,eAAa,EAAEuB,iDAAS,CAACE;AAFN,CAAvB;AAKeC,0HAAO,CAACT,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CzB,UAA7C,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AAEA;AACA;AAMA;AACA;AAEA;;;;;;;;IAOMiC,W;;;;;AACF,uBAAYtC,KAAZ,EAAmB;AAAA;;AAAA,6BACTA,KADS;AAElB;;;;6BAEQ;AACL,0BACI,2DAAC,4CAAD,CAAO,QAAP,qBACI,2DAAC,qFAAD,qBACI,2DAAC,0FAAD;AAAiB,aAAK,EAAC;AAAvB,QADJ,CADJ,eAII,2DAAC,+EAAD,qBACI,2DAAC,2DAAD,qBACI,2DAAC,+DAAD;AAAU,sBAAc,EAAG,CAAC;AAAEC,kBAAQ,EAAEC,oEAAa,CAACC;AAA1B,SAAD,EAAqC;AAAEF,kBAAQ,EAAEC,oEAAa,CAAC,QAAD;AAAzB,SAArC;AAA3B,sBACI,2DAAC,wDAAD,OADJ,CADJ,eAII,2DAAC,+DAAD;AAAU,sBAAc,EAAG,CAAC;AAAED,kBAAQ,EAAEC,oEAAa,CAACC;AAA1B,SAAD,EAAqC;AAAEF,kBAAQ,EAAEC,oEAAa,CAAC,QAAD;AAAzB,SAArC;AAA3B,sBACI,2DAAC,uDAAD,OADJ,CAJJ,CADJ,CAJJ,CADJ;AAiBH;;;;EAvBqBE,+C;;AA0BXmC,kIAAU,CAACD,WAAD,CAAzB,E","file":"js/1.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    Flex,\n    FlexModifiers,\n    Form,\n    FormGroup,\n} from '@patternfly/react-core';\n\nclass CreateImageCard extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <Card>\n                <CardHeader>Create a new image</CardHeader>\n                <CardBody>\n                    <Form>\n                        <FormGroup fieldId=\"show-create-image-wizard\">\n                            <Link to=\"/imagewizard\">\n                                <Flex breakpointMods={ [{ modifier: FlexModifiers.column }] }>\n                                    <Button variant=\"secondary\">Create image</Button>\n                                </Flex>\n                            </Link>\n                        </FormGroup>\n                    </Form>\n                </CardBody>\n            </Card>);\n    }\n}\n\nexport default CreateImageCard;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../redux';\n\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from '@patternfly/react-core';\n\nimport api from '../../api.js';\n\nclass ImagesCard extends Component {\n    constructor(props) {\n        super(props);\n        this.pollComposeStatuses = this.pollComposeStatuses.bind(this);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.pollComposeStatuses(), 8000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    pollComposeStatuses() {\n        let { updateCompose, composes } = this.props;\n        Object.entries(composes).map(([ id, compose ]) => {\n            api.getComposeStatus(id).then(response => {\n                let newCompose = {};\n                newCompose[id] = Object.assign({}, compose, { status: response.status });\n                updateCompose(newCompose);\n            });\n        });\n    }\n\n    render() {\n        let { composes } = this.props;\n        return (\n            <Card>\n                <CardHeader>Pending composes</CardHeader>\n                { Object.entries(composes).map(([ id, compose ]) => {\n                    return <CardBody key={ id }>\n                        <label>{ id }</label>\n                        <p>{ compose.architecture }, { compose.distribution }, { compose.image_type }</p>\n                        <p>{ compose.status }</p>\n                    </CardBody>;\n                })\n                }\n            </Card>);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        composes: state.composes,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateCompose: (compose) => dispatch(actions.updateCompose(compose)),\n    };\n}\n\nImagesCard.propTypes = {\n    composes: PropTypes.object,\n    updateCompose: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagesCard);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { Flex, FlexItem, FlexModifiers } from '@patternfly/react-core';\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport CreateImageCard from './CreateImageCard';\nimport ImagesCard from './ImagesCard.js';\n\n/**\n * A smart component that handles all the api calls and data needed by the dumb components.\n * Smart components are usually classes.\n *\n * https://reactjs.org/docs/components-and-props.html\n * https://medium.com/@thejasonfile/dumb-components-and-smart-components-e7b33a698d43\n */\nclass LandingPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='Image Builder' />\n                </PageHeader>\n                <Main>\n                    <Flex>\n                        <FlexItem breakpointMods={ [{ modifier: FlexModifiers.column }, { modifier: FlexModifiers['flex-1'] }] }>\n                            <CreateImageCard />\n                        </FlexItem>\n                        <FlexItem breakpointMods={ [{ modifier: FlexModifiers.column }, { modifier: FlexModifiers['flex-2'] }] }>\n                            <ImagesCard />\n                        </FlexItem>\n                    </Flex>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(LandingPage);\n"],"sourceRoot":""}