{"version":3,"sources":["webpack:///./src/Components/ImagesTable/ImageBuildStatus.js","webpack:///./src/Components/ImagesTable/Release.js","webpack:///./src/Components/ImagesTable/Upload.js","webpack:///./src/Components/ImagesTable/ImageLink.js","webpack:///./src/Components/ImagesTable/ImagesTable.js","webpack:///./src/Components/LandingPage/LandingPage.js","webpack:///./src/Components/ImagesTable/ImageBuildStatus.scss","webpack:///./src/Components/LandingPage/LandingPage.scss","webpack:///./src/Components/ImagesTable/ImageBuildStatus.scss?72df","webpack:///./src/Components/LandingPage/LandingPage.scss?a11b"],"names":["ImageBuildStatus","props","messages","success","icon","className","text","failure","pending","running","building","uploading","registering","status","map","message","key","Flex","propTypes","PropTypes","Release","releaseOptions","release","Label","color","Upload","uploadOptions","aws","azure","gcp","uploadType","ImageLink","uploadStatus","imageStatus","upload_status","undefined","type","url","options","region","ami","Button","component","target","variant","iconPosition","isInline","href","tenant_id","subscription_id","resource_group","image_name","Popover","aria-label","maxWidth","headerContent","bodyContent","TextContent","Text","TextVariants","project_id","share_with_accounts","split","ImagesTable","state","page","perPage","pollComposeStatuses","bind","onSetPage","onPerPageSelect","timestampToDisplayString","this","composesGet","interval","setInterval","clearInterval","composes","Object","entries","byId","id","compose","image_status","composeGetStatus","_","count","allIds","length","offset","setState","ts","date","slice","ms","Date","parse","Intl","DateTimeFormat","month","day","year","format","itemsStartInclusive","itemsEndExlcusive","rows","cells","created_at","title","request","distribution","image_requests","upload_request","EmptyState","EmptyStateVariant","data-testid","EmptyStateIcon","PlusCircleIcon","Title","headingLevel","size","EmptyStateBody","Link","to","EmptyStateSecondaryActions","Toolbar","ToolbarContent","ToolbarItem","align","default","Pagination","itemCount","widgetId","isCompact","Table","TableHeader","TableBody","Component","connect","dispatch","limit","actions","LandingPage","PageHeader","PageHeaderTitle","withRouter","___CSS_LOADER_EXPORT___","push","module","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"2ZAQMA,G,SAAmB,SAACC,GACtB,IAAMC,EAAW,CACbC,QAAS,CACL,CACIC,KAAM,kBAAC,KAAD,CAAiBC,UAAU,YACjCC,KAAM,UAGdC,QAAS,CACL,CACIH,KAAM,kBAAC,KAAD,CAAuBC,UAAU,UACvCC,KAAM,uBAGdE,QAAS,CACL,CACIJ,KAAM,kBAAC,KAAD,MACNE,KAAM,oDAIdG,QAAS,CACL,CACIL,KAAM,kBAAC,KAAD,CAAgBC,UAAU,YAChCC,KAAM,4BAGdI,SAAU,CACN,CACIN,KAAM,kBAAC,KAAD,CAAgBC,UAAU,YAChCC,KAAM,4BAGdK,UAAW,CACP,CACIP,KAAM,kBAAC,KAAD,CAAgBC,UAAU,YAChCC,KAAM,6BAGdM,YAAa,CACT,CACIR,KAAM,kBAAC,KAAD,CAAgBC,UAAU,YAChCC,KAAM,oCAIlB,OACI,kBAAC,aAAD,KACKJ,EAASD,EAAMY,SACZX,EAASD,EAAMY,QAAQC,KAAI,SAACC,EAASC,GAAV,OACvB,kBAAC,EAAAC,KAAD,CAAMD,IAAMA,EAAMX,UAAU,yCACxB,6BAAMU,EAAQX,MACd,+BAAQW,EAAQT,aAQxCN,EAAiBkB,UAAY,CACzBL,OAAQM,YAGZ,UCnEA,IAAMC,EAAU,SAACnB,GACb,IAAMoB,EAAiB,CACnB,SAAU,SACV,WAAY,mBAEVC,EAAUD,EAAepB,EAAMqB,SAAWD,EAAepB,EAAMqB,SAAWrB,EAAMqB,QACtF,OAAO,kBAAC,EAAAC,MAAD,CAAOC,MAAM,QAAQF,IAGhCF,EAAQF,UAAY,CAChBI,QAASH,YAGb,UCfA,IAAMM,EAAS,SAACxB,GACZ,IAAMyB,EAAgB,CAClBC,IAAK,sBACLC,MAAO,kBACPC,IAAK,yBAET,OAAO,oCAAIH,EAAczB,EAAM6B,YAAcJ,EAAczB,EAAM6B,YAAc7B,EAAM6B,aAGzFL,EAAOP,UAAY,CACfY,WAAYX,YAGhB,UCVA,IAAMY,EAAY,SAAC9B,GACf,IAAM+B,EAAe/B,EAAMgC,YAAchC,EAAMgC,YAAYC,mBAAgBC,EAC3E,GAAIH,EAAc,CACd,GAA0B,QAAtBA,EAAaI,KAAgB,CAC7B,IAAMC,EAAM,qDACJL,EAAaM,QAAQC,OACrB,6BACAP,EAAaM,QAAQE,IAC7B,OACI,kBAAC,EAAAC,OAAD,CACIC,UAAU,IACVC,OAAO,SACPC,QAAQ,OACRxC,KAAO,kBAAC,KAAD,MACPyC,aAAa,QACbC,UAAQ,EACRC,KAAOV,GAPX,mBAWD,GAA0B,UAAtBL,EAAaI,KAAkB,CACtC,IAAMC,EAAM,8BAAgCpC,EAAMyB,cAAcsB,UAChE,2BAA6B/C,EAAMyB,cAAcuB,gBACjD,mBAAqBhD,EAAMyB,cAAcwB,eACzC,uCAAyClB,EAAaM,QAAQa,WAC9D,OACI,kBAAC,EAAAV,OAAD,CACIC,UAAU,IACVC,OAAO,SACPC,QAAQ,OACRxC,KAAO,kBAAC,KAAD,MACPyC,aAAa,QACbC,UAAQ,EACRC,KAAOV,GAPX,uBAWD,GAA0B,QAAtBL,EAAaI,KACpB,OACI,kBAAC,EAAAgB,QAAD,CACIC,aAAW,mDACXC,SAAS,QACTC,cAAgB,oBAChBC,YAAc,kBAAC,EAAAC,YAAD,KACV,kBAAC,EAAAC,KAAD,CAAMhB,UAAYiB,kBAAlB,kKAIA,kBAAC,EAAAD,KAAD,KACI,8CACA,6BACC1B,EAAaM,QAAQsB,YAE1B,kBAAC,EAAAF,KAAD,KACI,8CACA,6BACC1B,EAAaM,QAAQa,YAE1B,kBAAC,EAAAO,KAAD,KACI,+CACA,6BAECzD,EAAMyB,cAAcmC,oBAAoB,GAAGC,MAAM,KAAK,MAG/D,kBAAC,EAAArB,OAAD,CACIC,UAAU,IACVC,OAAO,SACPC,QAAQ,QAHZ,kBAWhB,OAAO,MAGXb,EAAUb,UAAY,CAClBe,YAAad,WACbO,cAAeP,YAGnB,U,ICzEM4C,E,wcACF,WAAY9D,GAAO,6BACf,cAAMA,IACD+D,MAAQ,CACTC,KAAM,EACNC,QAAS,IAEb,EAAKC,oBAAsB,EAAKA,oBAAoBC,MAAzB,WAC3B,EAAKC,UAAY,EAAKA,UAAUD,MAAf,WACjB,EAAKE,gBAAkB,EAAKA,gBAAgBF,MAArB,WACvB,EAAKG,yBAA2B,EAAKA,yBAAyBH,MAA9B,WATjB,E,gDAYnB,WAAoB,WAChBI,KAAKvE,MAAMwE,YAAYD,KAAKR,MAAME,QAAS,GAC3CM,KAAKE,SAAWC,aAAY,kBAAM,EAAKR,wBAAuB,O,kCAGlE,WACIS,cAAcJ,KAAKE,Y,iCAGvB,WAAsB,WACZG,EAAaL,KAAKvE,MAAlB4E,SACNC,OAAOC,QAAQF,EAASG,MAAMlE,KAAI,YAAqB,mBAAlBmE,EAAkB,KAAdC,EAAc,KAEf,YAAhCA,EAAQC,aAAatE,QAAwD,YAAhCqE,EAAQC,aAAatE,QAItE,EAAKZ,MAAMmF,iBAAiBH,Q,uBAIpC,SAAUI,EAAGpB,GAGT,GAAIO,KAAKvE,MAAM4E,SAASS,MAAQd,KAAKvE,MAAM4E,SAASU,OAAOC,OAAQ,CAC/D,IACMC,GADYxB,EAAO,GACEO,KAAKR,MAAME,QACtCM,KAAKvE,MAAMwE,YAAYD,KAAKR,MAAME,QAASuB,GAG/CjB,KAAKkB,SAAS,CAAEzB,W,6BAGpB,SAAgBoB,EAAGnB,GAGXM,KAAKvE,MAAM4E,SAASS,MAAQd,KAAKvE,MAAM4E,SAASU,OAAOC,QAAUtB,EAAUM,KAAKvE,MAAM4E,SAASU,OAAOC,QACtGhB,KAAKvE,MAAMwE,YAAYP,EAAS,GAIpCM,KAAKkB,SAAS,CAAExB,UAASD,KAAM,M,sCAGnC,SAAyB0B,GAGrB,IAAKA,EACD,MAAO,GAIX,IAAMC,EAAOD,EAAGE,MAAM,EAAG,IACnBC,EAAKC,KAAKC,MAAMJ,GAGtB,OADkB,IAAIK,KAAKC,eAAe,QAD1B,CAAEC,MAAO,QAASC,IAAK,UAAWC,KAAM,YACIC,OAAOR,K,oBAIvE,WAAS,WACCjB,EAAaL,KAAKvE,MAAlB4E,SAYA0B,GAAuB/B,KAAKR,MAAMC,KAAO,GAAKO,KAAKR,MAAME,QACzDsC,EAAoBD,EAAsB/B,KAAKR,MAAME,QAErDuC,EAAO5B,EAASU,OAAOM,MAAMU,EAAqBC,GAAmB1F,KAAI,SAAAmE,GAC3E,IAAMC,EAAUL,EAASG,KAAKC,GAC9B,MAAO,CACHyB,MAAO,CACHzB,EACA,EAAKV,yBAAyBW,EAAQyB,YACtC,CAAEC,MAAO,kBAAC,EAAD,CAAStF,QAAU4D,EAAQ2B,QAAQC,gBAC5C,CAAEF,MAAO,kBAAC,EAAD,CAAQ9E,WAAaoD,EAAQ2B,QAAQE,eAAe,GAAGC,eAAe5E,QAC/E,CAAEwE,MAAO,kBAAC,EAAD,CAAkB/F,OAASqE,EAAQC,aAAeD,EAAQC,aAAatE,OAAS,MACzF,CAAE+F,MAAO,kBAAC,EAAD,CACL3E,YAAciD,EAAQC,aACtBzD,cAAgBwD,EAAQ2B,QAAQE,eAAe,GAAGC,eAAe1E,gBAKjF,OACI,kBAAC,aAAD,KACiC,IAA3BuC,EAASU,OAAOC,QACd,kBAAC,EAAAyB,WAAD,CAAYrE,QAAUsE,0BAA0BC,cAAY,eACxD,kBAAC,EAAAC,eAAD,CAAgBhH,KAAOiH,OACvB,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAA9B,mBAGA,kBAAC,EAAAC,eAAD,+MAMA,kBAAC,EAAAC,KAAD,CAAMC,GAAG,eAAetH,UAAU,2BAA2B8G,cAAY,uBAAzE,gBAGA,kBAAC,EAAAS,2BAAD,KACI,kBAAC,EAAAnF,OAAD,CACIC,UAAU,IACVC,OAAO,SACPC,QAAQ,OACRxC,KAAO,kBAAC,KAAD,MACPyC,aAAa,QACbC,UAAQ,EACRC,KAAK,yJAPT,oBAeR,kBAAC,aAAD,KACI,kBAAC,EAAA8E,QAAD,KACI,kBAAC,EAAAC,eAAD,KACI,kBAAC,EAAAC,YAAD,KACI,kBAAC,EAAAL,KAAD,CAAMC,GAAG,eAAetH,UAAU,2BAA2B8G,cAAY,uBAAzE,iBAIJ,kBAAC,EAAAY,YAAD,CAAanF,QAAQ,aAAaoF,MAAQ,CAAEC,QAAS,eACjD,kBAAC,EAAAC,WAAD,CACIC,UAAY3D,KAAKvE,MAAM4E,SAASS,MAChCpB,QAAUM,KAAKR,MAAME,QACrBD,KAAOO,KAAKR,MAAMC,KAClBI,UAAYG,KAAKH,UACjBC,gBAAkBE,KAAKF,gBACvB8D,SAAS,qBACTjB,cAAY,oBACZkB,WAAS,OAIzB,kBAAC,EAAAC,MAAD,CACIjF,aAAW,SACXoD,KAAOA,EACPC,MAtFJ,CACZ,QACA,UACA,UACA,SACA,SACA,IAiFgBS,cAAY,gBACZ,kBAAC,EAAAoB,YAAD,MACA,kBAAC,EAAAC,UAAD,a,GApKFC,aA0L1B1E,EAAY7C,UAAY,CACpB2D,SAAU1D,WACVsD,YAAatD,SACbiE,iBAAkBjE,UAGtB,SAAeuH,cAnBf,SAAyB1E,GACrB,MAAO,CACHa,SAAUb,EAAMa,aAIxB,SAA4B8D,GACxB,MAAO,CACHlE,YAAa,SAACmE,EAAOnD,GAAR,OAAmBkD,EAASE,gBAAoBD,EAAOnD,KACpEL,iBAAkB,SAACH,GAAD,OAAQ0D,EAASE,qBAAyB5D,QAUpE,CAA4DlB,G,YCpMtD+E,E,wcACF,WAAY7I,GAAO,kCACTA,G,qCAGV,WACI,OACI,kBAAC,aAAD,KACI,kBAAC,EAAA8I,WAAD,KACI,kBAAC,EAAAC,gBAAD,CAAiB3I,UAAU,QAAQuG,MAAM,kBACzC,kBAAC,EAAAxD,QAAD,CACIG,cAAgB,sBAChBC,YAAc,kBAAC,EAAAC,YAAD,KACV,kBAAC,EAAAC,KAAD,8GAIA,kBAAC,EAAAjB,OAAD,CACIC,UAAU,IACVC,OAAO,SACPC,QAAQ,OACRxC,KAAO,kBAAC,KAAD,MACPyC,aAAa,QACbC,UAAQ,EACRC,KAAK,yJAPT,iBAYA,6BACA,kBAAC,EAAAN,OAAD,CACIC,UAAU,IACVC,OAAO,SACPC,QAAQ,OACRxC,KAAO,kBAAC,KAAD,MACPyC,aAAa,QACbC,UAAQ,EACRC,KAAO,0GAPX,0BAWJ,4BACIX,KAAK,SACLiB,aAAW,sBACXhD,UAAU,+BACV,kBAAC,KAAD,SAIZ,6BAASA,UAAU,mDACf,kBAAC,EAAD,Y,GAlDMoI,aAyD1B,SAAeQ,gBAAWH,I,8FCnEtBI,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOnE,GAAI,sMAAuM,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,gEAAgE,MAAQ,GAAG,SAAW,qDAAqD,eAAiB,CAAC,8KAA8K,WAAa,MAEnmB,W,8FCJIiE,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOnE,GAAI,4NAA6N,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,2DAA2D,MAAQ,GAAG,SAAW,oDAAoD,eAAiB,CAAC,oMAAoM,WAAa,MAEzoB,W,gECCIoE,EAAS,IAAI,UALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAK,kBAAkBD,EAAOE,IAAIC,WAAY,CAC5C,IA+BIC,EAAY,iBAEhBJ,EAAOE,IAAIG,OACT,OACA,eAnCkB,SAAuBC,EAAGC,EAAGC,GACnD,IAAKF,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIE,EAEJ,IAAKA,KAAKH,EACR,GAKIA,EAAEG,KAAOF,EAAEE,GACb,OAAO,EAIX,IAAKA,KAAKF,EACR,IAKKD,EAAEG,GACL,OAAO,EAIX,OAAO,EAOIC,CAAcN,EAAW,mBAMxBA,EAAY,iBAEZH,EAAO,YAPLD,EAAOE,IAAIC,gBAYzBH,EAAOE,IAAIS,SAAQ,WACjBV,OAIW,kB,+DC3DXA,EAAS,IAAI,UALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAK,kBAAkBD,EAAOE,IAAIC,WAAY,CAC5C,IA+BIC,EAAY,iBAEhBJ,EAAOE,IAAIG,OACT,OACA,eAnCkB,SAAuBC,EAAGC,EAAGC,GACnD,IAAKF,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIE,EAEJ,IAAKA,KAAKH,EACR,GAKIA,EAAEG,KAAOF,EAAEE,GACb,OAAO,EAIX,IAAKA,KAAKF,EACR,IAKKD,EAAEG,GACL,OAAO,EAIX,OAAO,EAOIC,CAAcN,EAAW,mBAMxBA,EAAY,iBAEZH,EAAO,YAPLD,EAAOE,IAAIC,gBAYzBH,EAAOE,IAAIS,SAAQ,WACjBV,OAIW","file":"js/513.0ce9a1a3b49886a711fc.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Flex } from '@patternfly/react-core';\nimport { CheckCircleIcon, PendingIcon, ExclamationCircleIcon, InProgressIcon } from '@patternfly/react-icons';\n\nimport './ImageBuildStatus.scss';\n\nconst ImageBuildStatus = (props) => {\n    const messages = {\n        success: [\n            {\n                icon: <CheckCircleIcon className=\"success\" />,\n                text: 'Ready'\n            }\n        ],\n        failure: [\n            {\n                icon: <ExclamationCircleIcon className=\"error\" />,\n                text: 'Image build failed'\n            }\n        ],\n        pending: [\n            {\n                icon: <PendingIcon />,\n                text: 'Image build, Upload, Cloud registration pending'\n            }\n        ],\n        // Keep \"running\" for backward compatibility\n        running: [\n            {\n                icon: <InProgressIcon className=\"pending\" />,\n                text: 'Image build in progress'\n            }\n        ],\n        building: [\n            {\n                icon: <InProgressIcon className=\"pending\" />,\n                text: 'Image build in progress'\n            }\n        ],\n        uploading: [\n            {\n                icon: <InProgressIcon className=\"pending\" />,\n                text: 'Image upload in progress'\n            }\n        ],\n        registering: [\n            {\n                icon: <InProgressIcon className=\"pending\" />,\n                text: 'Cloud registration in progress'\n            }\n        ]\n    };\n    return (\n        <React.Fragment>\n            {messages[props.status] &&\n                messages[props.status].map((message, key) => (\n                    <Flex key={ key } className=\"pf-u-align-items-baseline pf-m-nowrap\">\n                        <div>{message.icon}</div>\n                        <small>{message.text}</small>\n                    </Flex>\n                ))\n            }\n        </React.Fragment>\n    );\n};\n\nImageBuildStatus.propTypes = {\n    status: PropTypes.string,\n};\n\nexport default ImageBuildStatus;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Label } from '@patternfly/react-core';\n\nconst Release = (props) => {\n    const releaseOptions = {\n        'rhel-8': 'RHEL 8',\n        'centos-8': 'CentOS Stream 8'\n    };\n    const release = releaseOptions[props.release] ? releaseOptions[props.release] : props.release;\n    return <Label color='blue'>{release}</Label>;\n};\n\nRelease.propTypes = {\n    release: PropTypes.string,\n};\n\nexport default Release;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Upload = (props) => {\n    const uploadOptions = {\n        aws: 'Amazon Web Services',\n        azure: 'Microsoft Azure',\n        gcp: 'Google Cloud Platform',\n    };\n    return <>{ uploadOptions[props.uploadType] ? uploadOptions[props.uploadType] : props.uploadType }</>;\n};\n\nUpload.propTypes = {\n    uploadType: PropTypes.string,\n};\n\nexport default Upload;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, TextContent, Text, TextVariants, Popover } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst ImageLink = (props) => {\n    const uploadStatus = props.imageStatus ? props.imageStatus.upload_status : undefined;\n    if (uploadStatus) {\n        if (uploadStatus.type === 'aws') {\n            const url = 'https://console.aws.amazon.com/ec2/v2/home?region=' +\n                    uploadStatus.options.region +\n                    '#LaunchInstanceWizard:ami=' +\n                    uploadStatus.options.ami;\n            return (\n                <Button\n                    component=\"a\"\n                    target=\"_blank\"\n                    variant=\"link\"\n                    icon={ <ExternalLinkAltIcon /> }\n                    iconPosition=\"right\"\n                    isInline\n                    href={ url }>\n                        Launch instance\n                </Button>\n            );\n        } else if (uploadStatus.type === 'azure') {\n            const url = 'https://portal.azure.com/#@' + props.uploadOptions.tenant_id +\n            '/resource/subscriptions/' + props.uploadOptions.subscription_id +\n            '/resourceGroups/' + props.uploadOptions.resource_group +\n            '/providers/Microsoft.Compute/images/' + uploadStatus.options.image_name;\n            return (\n                <Button\n                    component=\"a\"\n                    target=\"_blank\"\n                    variant=\"link\"\n                    icon={ <ExternalLinkAltIcon /> }\n                    iconPosition=\"right\"\n                    isInline\n                    href={ url }>\n                        View uploaded image\n                </Button>\n            );\n        } else if (uploadStatus.type === 'gcp') {\n            return (\n                <Popover\n                    aria-label=\"Popover with google cloud platform image details\"\n                    maxWidth='30rem'\n                    headerContent={ 'GCP image details' }\n                    bodyContent={ <TextContent>\n                        <Text component={ TextVariants.p }>\n                            To use an Image Builder created Google Cloud Platform (GCP) image in your project,\n                            specify the project ID and image name in your templates and configurations.\n                        </Text>\n                        <Text>\n                            <strong>Project ID</strong>\n                            <br />\n                            {uploadStatus.options.project_id}\n                        </Text>\n                        <Text>\n                            <strong>Image Name</strong>\n                            <br />\n                            {uploadStatus.options.image_name}\n                        </Text>\n                        <Text>\n                            <strong>Shared with</strong>\n                            <br />\n                            {/* the account the image is shared with is stored in the form type:account so this extracts the account */}\n                            {props.uploadOptions.share_with_accounts[0].split(':')[1]}\n                        </Text>\n                    </TextContent> }>\n                    <Button\n                        component=\"a\"\n                        target=\"_blank\"\n                        variant=\"link\">\n                            Image details\n                    </Button>\n                </Popover>\n            );\n        }\n    }\n\n    return null;\n};\n\nImageLink.propTypes = {\n    imageStatus: PropTypes.object,\n    uploadOptions: PropTypes.object,\n};\n\nexport default ImageLink;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../../store/actions';\nimport { Link } from 'react-router-dom';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport { Button,\n    EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, EmptyStateSecondaryActions,\n    Pagination,\n    Toolbar, ToolbarContent, ToolbarItem,\n    Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\nimport ImageBuildStatus from './ImageBuildStatus';\nimport Release from './Release';\nimport Upload from './Upload';\nimport ImageLink from './ImageLink';\nclass ImagesTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 1,\n            perPage: 10,\n        };\n        this.pollComposeStatuses = this.pollComposeStatuses.bind(this);\n        this.onSetPage = this.onSetPage.bind(this);\n        this.onPerPageSelect = this.onPerPageSelect.bind(this);\n        this.timestampToDisplayString = this.timestampToDisplayString.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.composesGet(this.state.perPage, 0);\n        this.interval = setInterval(() => this.pollComposeStatuses(), 8000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    pollComposeStatuses() {\n        let { composes } = this.props;\n        Object.entries(composes.byId).map(([ id, compose ]) => {\n            /* Skip composes that have been complete */\n            if (compose.image_status.status === 'success' || compose.image_status.status === 'failure') {\n                return;\n            }\n\n            this.props.composeGetStatus(id);\n        });\n    }\n\n    onSetPage(_, page) {\n        // if the next page's composes haven't been fetched from api yet\n        // then fetch them with proper page index and offset\n        if (this.props.composes.count > this.props.composes.allIds.length) {\n            const pageIndex = page - 1;\n            const offset = pageIndex * this.state.perPage;\n            this.props.composesGet(this.state.perPage, offset);\n        }\n\n        this.setState({ page });\n    }\n\n    onPerPageSelect(_, perPage) {\n        // if the new per page quantity is greater than the number of already fetched composes fetch more composes\n        // if all composes haven't already been fetched\n        if (this.props.composes.count > this.props.composes.allIds.length && perPage > this.props.composes.allIds.length) {\n            this.props.composesGet(perPage, 0);\n        }\n\n        // page should be reset to the first page when the page size is changed.\n        this.setState({ perPage, page: 1 });\n    }\n\n    timestampToDisplayString(ts) {\n        // timestamp has format 2021-04-27 12:31:12.794809 +0000 UTC\n        // must be converted to ms timestamp and then reformatted to Apr 27, 2021\n        if (!ts) {\n            return '';\n        }\n\n        // get YYYY-MM-DD format\n        const date = ts.slice(0, 10);\n        const ms = Date.parse(date);\n        const options = { month: 'short', day: 'numeric', year: 'numeric' };\n        const tsDisplay = new Intl.DateTimeFormat('en-US', options).format(ms);\n        return tsDisplay;\n    }\n\n    render() {\n        let { composes } = this.props;\n\n        const columns = [\n            'Image',\n            'Created',\n            'Release',\n            'Target',\n            'Status',\n            ''\n        ];\n\n        // the state.page is not an index so must be reduced by 1 get the starting index\n        const itemsStartInclusive = (this.state.page - 1) * this.state.perPage;\n        const itemsEndExlcusive = itemsStartInclusive + this.state.perPage;\n        // only display the current pages section of composes. slice is inclusive, exclusive.\n        const rows = composes.allIds.slice(itemsStartInclusive, itemsEndExlcusive).map(id => {\n            const compose = composes.byId[id];\n            return {\n                cells: [\n                    id,\n                    this.timestampToDisplayString(compose.created_at),\n                    { title: <Release release={ compose.request.distribution } /> },\n                    { title: <Upload uploadType={ compose.request.image_requests[0].upload_request.type } /> },\n                    { title: <ImageBuildStatus status={ compose.image_status ? compose.image_status.status : '' } /> },\n                    { title: <ImageLink\n                        imageStatus={ compose.image_status }\n                        uploadOptions={ compose.request.image_requests[0].upload_request.options } /> },\n                ]\n            };\n        });\n\n        return (\n            <React.Fragment>\n                { composes.allIds.length === 0 && (\n                    <EmptyState variant={ EmptyStateVariant.large } data-testid=\"empty-state\">\n                        <EmptyStateIcon icon={ PlusCircleIcon } />\n                        <Title headingLevel=\"h4\" size=\"lg\">\n                            Create an image\n                        </Title>\n                        <EmptyStateBody>\n                            Create OS images for deployment in Amazon Web Services,\n                            Microsoft Azure and Google Cloud Platform. Images can\n                            include a custom package set and an activation key to\n                            automate the registration process.\n                        </EmptyStateBody>\n                        <Link to=\"/imagewizard\" className=\"pf-c-button pf-m-primary\" data-testid=\"create-image-action\">\n                        Create image\n                        </Link>\n                        <EmptyStateSecondaryActions>\n                            <Button\n                                component=\"a\"\n                                target=\"_blank\"\n                                variant=\"link\"\n                                icon={ <ExternalLinkAltIcon /> }\n                                iconPosition=\"right\"\n                                isInline\n                                href=\"\nhttps://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/uploading_a_customized_rhel_system_image_to_cloud_environments/index\n                                \">\n                                    Documentation\n                            </Button>\n                        </EmptyStateSecondaryActions>\n                    </EmptyState>\n                ) || (\n                    <React.Fragment>\n                        <Toolbar>\n                            <ToolbarContent>\n                                <ToolbarItem>\n                                    <Link to=\"/imagewizard\" className=\"pf-c-button pf-m-primary\" data-testid=\"create-image-action\">\n                                        Create image\n                                    </Link>\n                                </ToolbarItem>\n                                <ToolbarItem variant=\"pagination\" align={ { default: 'alignRight' } }>\n                                    <Pagination\n                                        itemCount={ this.props.composes.count }\n                                        perPage={ this.state.perPage }\n                                        page={ this.state.page }\n                                        onSetPage={ this.onSetPage }\n                                        onPerPageSelect={ this.onPerPageSelect }\n                                        widgetId=\"compose-pagination\"\n                                        data-testid=\"images-pagination\"\n                                        isCompact />\n                                </ToolbarItem>\n                            </ToolbarContent>\n                        </Toolbar>\n                        <Table\n                            aria-label=\"Images\"\n                            rows={ rows }\n                            cells={ columns }\n                            data-testid=\"images-table\">\n                            <TableHeader />\n                            <TableBody />\n                        </Table>\n                    </React.Fragment>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        composes: state.composes,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        composesGet: (limit, offset) => dispatch(actions.composesGet(limit, offset)),\n        composeGetStatus: (id) => dispatch(actions.composeGetStatus(id)),\n    };\n}\n\nImagesTable.propTypes = {\n    composes: PropTypes.object,\n    composesGet: PropTypes.func,\n    composeGetStatus: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagesTable);\n","/* global COMMITHASH */\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\n\nimport { Button, Popover, TextContent, Text } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, GithubIcon, HelpIcon } from '@patternfly/react-icons';\n\nimport ImagesTable from '../ImagesTable/ImagesTable';\nimport './LandingPage.scss';\n\nclass LandingPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle className=\"title\" title=\"Image Builder\" />\n                    <Popover\n                        headerContent={ 'About Image Builder' }\n                        bodyContent={ <TextContent>\n                            <Text>\n                                        Image Builder is a service that allows you to create RHEL images\n                                        and push them to cloud environments.\n                            </Text>\n                            <Button\n                                component=\"a\"\n                                target=\"_blank\"\n                                variant=\"link\"\n                                icon={ <ExternalLinkAltIcon /> }\n                                iconPosition=\"right\"\n                                isInline\n                                href=\"\nhttps://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/uploading_a_customized_rhel_system_image_to_cloud_environments/index\n                                \">\n                                    Documentation\n                            </Button>\n                            <br />\n                            <Button\n                                component=\"a\"\n                                target=\"_blank\"\n                                variant=\"link\"\n                                icon={ <GithubIcon /> }\n                                iconPosition=\"right\"\n                                isInline\n                                href={ 'https://github.com/RedHatInsights/image-builder-frontend/tree/' + COMMITHASH }>\n                                    Contribute on GitHub\n                            </Button>\n                        </TextContent> }>\n                        <button\n                            type=\"button\"\n                            aria-label=\"About image builder\"\n                            className=\"pf-c-form__group-label-help\">\n                            <HelpIcon />\n                        </button>\n                    </Popover>\n                </PageHeader>\n                <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n                    <ImagesTable />\n                </section>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(LandingPage);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".image-builder .error{color:var(--pf-global--danger-color--100)}.image-builder .success{color:var(--pf-global--success-color--100)}.image-builder .pending{color:var(--pf-global--info-color--100)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/ImagesTable/ImageBuildStatus.scss\"],\"names\":[],\"mappings\":\"AACA,sBAAA,yCAAA,CAAA,wBAAA,0CAAA,CAAA,wBAAA,uCAAA\",\"sourcesContent\":[\".image-builder{\\n.error{color:var(--pf-global--danger-color--100)}.success{color:var(--pf-global--success-color--100)}.pending{color:var(--pf-global--info-color--100)}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".image-builder .title{display:inline}.image-builder .pf-c-form__group-label-help{color:var(--pf-global--icon--Color--light)}.image-builder .pf-c-form__group-label-help:active{color:var(--pf-global--icon--Color--dark)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/LandingPage/LandingPage.scss\"],\"names\":[],\"mappings\":\"AACA,sBAAA,cAAA,CAAA,4CAAA,0CAAA,CAAA,mDAAA,yCAAA\",\"sourcesContent\":[\".image-builder{\\n.title{display:inline}.pf-c-form__group-label-help{color:var(--pf-global--icon--Color--light)}.pf-c-form__group-label-help:active{color:var(--pf-global--icon--Color--dark)}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ImageBuildStatus.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ImageBuildStatus.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./LandingPage.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./LandingPage.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}